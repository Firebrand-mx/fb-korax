//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

//  Since version 1.5 compiler defines PROG_VERSION, so we can check that
// progs are compiled with the right version of compiler
#if !defined PROG_VERSION || PROG_VERSION != 16
#error These are version 16 progs
#endif

enum
{
	false,
	true
};

#define MAX_INFO_STRING		1024

#define CVAR_ARCHIVE		1	//	Set to cause it to be saved to vavoom.cfg
#define CVAR_USERINFO		2	//	Added to userinfo  when changed
#define CVAR_SERVERINFO		4	//	Added to serverinfo when changed
#define CVAR_INIT			8	//	Don't allow change from console at all,
								// but can be set from the command line
#define CVAR_LATCH			16	//	Save changes until server restart
#define CVAR_ROM			32	//	Display only, cannot be set by user at all
#define CVAR_CHEAT			64	//	Can not be changed if cheats are disabled
#define CVAR_MODIFIED		128	//	Set each time the cvar is changed

#define MININT				0x80000000
#define MAXINT				0x7fffffff

#define TICRATE				35

#define MAXPLAYERS			8

#define NUM_CSHIFTS			8
#define CSHIFT(r, g, b, a)	(((a) << 24) | ((r) << 16) | ((g) << 8) | (b))

// Difficulty/skill settings/filters.
enum
{
	sk_baby,
	sk_easy,
	sk_medium,
	sk_hard,
	sk_nightmare
};

enum
{
	//  Generate the sprite's axes, with sprup straight up in worldspace,
	// and sprright parallel to the viewplane.
	SPR_VP_PARALLEL_UPRIGHT,
	//  Generate the sprite's axes, with sprup straight up in worldspace,
	// and sprright perpendicular to sprorigin.
	SPR_FACING_UPRIGHT,
	//  Generate the sprite's axes, completely parallel to the viewplane.
	SPR_VP_PARALLEL,
	//  Generate the sprite's axes, according to the sprite's world
	// orientation
	SPR_ORIENTED,
	//  Generate the sprite's axes, parallel to the viewplane, but
	// rotated in that plane around the center according to the sprite
	// entity's roll angle. So sprforward stays the same, but sprright
	// and sprup rotate
	SPR_VP_PARALLEL_ORIENTED,
	//  Generate the sprite's axes, with sprup straight up in worldspace,
	// and sprright parallel to the viewplane and then rotated in that
	// plane around the center according to the sprite entity's roll
	// angle. So sprforward stays the same, but sprright and sprup rotate
	SPR_VP_PARALLEL_UPRIGHT_ORIENTED
};

//
//  Frame flags:
//  handles maximum brightness (torches, muzzle flare, light sources)
//
#define FF_FULLBRIGHT	0x80	// flag in thing->frame
#define FF_FRAMEMASK	0x7f

enum
{
	ps_weapon,
	ps_flash,
	NUMPSPRITES
};

//
// Button/action code definitions.
//
#define BT_ATTACK		1	// Press "Fire".
#define BT_USE			2	// Use button, to open doors, activate switches.
#define BT_JUMP			4

//
// Player states.
//
enum
{
	// Playing or camping.
	PST_LIVE,
	// Dead on the ground, view follows killer.
	PST_DEAD,
	// Ready to restart/respawn???
	PST_REBORN
};

#define TOCENTER		-128.0

enum
{
	DI_EAST,
	DI_NORTHEAST,
	DI_NORTH,
	DI_NORTHWEST,
	DI_WEST,
	DI_SOUTHWEST,
	DI_SOUTH,
	DI_SOUTHEAST,
	DI_NODIR,
	NUMDIRS
};

enum
{
	RES_OK,
	RES_CRUSHED,
	RES_PASTDEST
};

#define MAXDEATHMATCHSTARTS		16
#define MAX_PLAYER_STARTS		16

#define MAXRADIUS		32.0

//
// LineDef attributes.
//
#define ML_BLOCKING			0x0001	// Solid, is an obstacle.
#define ML_BLOCKMONSTERS	0x0002	// Blocks monsters only.
#define ML_TWOSIDED			0x0004	// Backside will not be present at all
#define ML_DONTPEGTOP		0x0008	// upper texture unpegged
#define ML_DONTPEGBOTTOM	0x0010	// lower texture unpegged
#define ML_SECRET			0x0020	// don't map as two sided: IT'S A SECRET!
#define ML_SOUNDBLOCK		0x0040	// don't let sound cross two of these
#define ML_DONTDRAW			0x0080	// don't draw on the automap
#define ML_MAPPED			0x0100	// set if already drawn in automap
#define ML_REPEAT_SPECIAL	0x0200	// special is repeatable
#define ML_SPAC_SHIFT		10
#define ML_SPAC_MASK		0x1c00
#define GET_SPAC(_flags_)	(((_flags_) & ML_SPAC_MASK) >> ML_SPAC_SHIFT)
#define ML_MONSTERSCANACTIVATE	0x2000	//	Monsters (as well as players) can activate the line
#define ML_BLOCKEVERYTHING	0x8000	//	Line blocks everything.
#define ML_RAILING			0x20000
#define ML_BLOCK_FLOATERS	0x40000
#define ML_CLIP_MIDTEX		0x80000	// Automatic for every Strife line

//	These will be converted.
#define ML_PASSUSE_BOOM				0x0200	//	Boom's ML_PASSUSE flag (conflicts with ML_REPEAT_SPECIAL)
#define ML_RAILING_STRIFE			0x0200
#define ML_BLOCK_FLOATERS_STRIFE	0x0400
#define ML_UNKNOWN2_STRIFE			0x0800
#define ML_TRANSLUCENT_STRIFE		0x1000

//
// Special activation types
//
#define SPAC_CROSS		0	// when player crosses line
#define SPAC_USE		1	// when player uses line
#define SPAC_MCROSS		2	// when monster crosses line
#define SPAC_IMPACT		3	// when projectile hits line
#define SPAC_PUSH		4	// when player/monster pushes line
#define SPAC_PCROSS		5	// when projectile crosses line
#define SPAC_USETHROUGH	6	// SPAC_USE, but passes it through
#define SPAC_PTOUCH		7	// when a projectiles crosses or hits line

//
//  SECTOR PLANE FLAGS
//

#define SPF_NOBLOCKING		1
#define SPF_NOBLOCKSIGHT	2
#define SPF_NOBLOCKSHOOT	4

//
//  Player items
//
#define IT_ALL_MAP			1

enum
{
	MSG_SV_DATAGRAM,
	MSG_SV_RELIABLE,
	MSG_SV_SIGNON,
	MSG_SV_CLIENT,
	MSG_CL_MESSAGE
};

#define RGB(r, g, b)		(0xff000000 + ((r) << 16) + ((g) << 8) + (b))
#define RGBA(r, g, b, a)	(((a) << 24) + ((r) << 16) + ((g) << 8) + (b))

#define MAX_TID_COUNT		200

//**************************************************************************
//**
//**    CLIENT DEFINES
//**
//**************************************************************************

#ifdef CLIENT

//
//  Types of graphics
//

enum
{
	PIC_PATCH,	// A standard Doom patch
	PIC_RAW		// Raw screens in Heretic and Hexen
};

//
// Fonts
//
enum
{
	font_small,
	font_yellow,
	font_big,

	NUMFONTTYPES
};

//
// Horisontal text alignement
//
enum
{
	hleft,		//Left
	hcenter,	//Centred
	hright		//Right
};

//
// Vertical text alignement
//
enum
{
	vtop,		//Top
	vcenter,	//Center
	vbottom		//Bottom
};

//
//  STATUS BAR VIEW TYPE
//
enum
{
	SB_VIEW_NORMAL,
	SB_VIEW_AUTOMAP,
	SB_VIEW_FULLSCREEN
};

#endif

//**************************************************************************
//**
//**    SERVER DEFINES
//**
//**************************************************************************

#ifdef SERVER

enum
{
	SECSPEC_None,
	SECSPEC_LightPhased,
	SECSPEC_LightSequenceStart,
	SECSPEC_LightSequence,
	SECSPEC_LightSequenceAlt,

	SECSPEC_StairsSpecial1 = 26,
	SECSPEC_StairsSpecial2,

	SECSPEC_WindEastSlow = 40,//40
	SECSPEC_WindEastMedium,
	SECSPEC_WindEastFast,
	SECSPEC_WindNorthSlow,
	SECSPEC_WindNorthMedium,
	SECSPEC_WindNorthFast,
	SECSPEC_WindSouthSlow,
	SECSPEC_WindSouthMedium,
	SECSPEC_WindSouthFast,
	SECSPEC_WindWestSlow,
	SECSPEC_WindWestMedium,//50
	SECSPEC_WindWestFast,

	SECSPEC_LightFlicker = 65,
	SECSPEC_LightStrobeFast,
	SECSPEC_LightStrobeSlow,
	SECSPEC_LightStrobeFastDamage,
	SECSPEC_DamageHellslime,
	SECSPEC_DamageSludge,//70
	SECSPEC_DamageNukage,
	SECSPEC_LightGlow,
	SECSPEC_DoorCloseIn30 = 74,
	SECSPEC_DamageSuperHellslimeExit,
	SECSPEC_LightSyncStrobeSlow,
	SECSPEC_LightSyncStrobeFast,
	SECSPEC_DoorRaiseIn5Minutes,
	SECSPEC_FrictionLow,
	SECSPEC_DamageSuperHellslime,// 80
	SECSPEC_LightFireFlicker,
	SECSPEC_DamageLavaWimpy,
	SECSPEC_DamageLavaHefty,
	SECSPEC_ScrollEastLavaDamage,

	SECSPEC_DamageHazard = 105,
	SECSPEC_DamageInstantDeath = 115,
	SECSPEC_DamageSuperHazard,
	SECSPEC_ScrollCurrent = 118,

	//	These are handled by the engine.
	SECSPEC_LightningOutdoor = 197,
	SECSPEC_LightningIndoor1,
	SECSPEC_Lightningindoor2,
	SECSPEC_Sky2,//200

	SECSPEC_ScrollNorthSlow,
	SECSPEC_ScrollNorthMedium,
	SECSPEC_ScrollNorthFast,
	SECSPEC_ScrollEastSlow,
	SECSPEC_ScrollEastMedium,
	SECSPEC_ScrollEastFast,
	SECSPEC_ScrollSouthSlow,
	SECSPEC_ScrollSouthMedium,
	SECSPEC_ScrollSouthFast,
	SECSPEC_ScrollWestSlow,//210
	SECSPEC_ScrollWestMedium,
	SECSPEC_ScrollWestFast,
	SECSPEC_ScrollNorthWestSlow,
	SECSPEC_ScrollNorthWestMedium,
	SECSPEC_ScrollNorthWestFast,
	SECSPEC_ScrollNorthEastSlow,
	SECSPEC_ScrollNorthEastMedium,
	SECSPEC_ScrollNorthEastFast,
	SECSPEC_ScrollSouthEastSlow,
	SECSPEC_ScrollSouthEastMedium,//220
	SECSPEC_ScrollSouthEastFast,
	SECSPEC_ScrollSouthWestSlow,
	SECSPEC_ScrollSouthWestMedium,
	SECSPEC_ScrollSouthWestFast,

	SECSPEC_ScrollEast5,
	SECSPEC_ScrollEast10,
	SECSPEC_ScrollEast25,
	SECSPEC_ScrollEast30,
	SECSPEC_ScrollEast35,
	SECSPEC_ScrollNorth5,//230
	SECSPEC_ScrollNorth10,
	SECSPEC_ScrollNorth25,
	SECSPEC_ScrollNorth30,
	SECSPEC_ScrollNorth35,
	SECSPEC_ScrollSouth5,
	SECSPEC_ScrollSouth10,
	SECSPEC_ScrollSouth25,
	SECSPEC_ScrollSouth30,
	SECSPEC_ScrollSouth35,
	SECSPEC_ScrollWest5,//240
	SECSPEC_ScrollWest10,
	SECSPEC_ScrollWest25,
	SECSPEC_ScrollWest30,
	SECSPEC_ScrollWest35,

	SECSPEC_Max
};

#define SECSPEC_BASE_MASK		0x00ff
#define SECSPEC_DAMAGE_MASK		0x0300
#define SECSPEC_SECRET_MASK		0x0400
#define SECSPEC_FRICTION_MASK	0x0800
#define SECSPEC_PUSH_MASK		0x1000

#endif

//**************************************************************************
//
//  $Log$
//  Revision 1.3  2004/12/27 12:29:59  dj_jl
//  Vavoom version 1.16 changes.
//
//  Revision 1.21  2004/11/22 07:36:23  dj_jl
//  Implemented all sector specials in all games.
//
//  Revision 1.20  2004/11/01 07:38:20  dj_jl
//  Almost all Hexen line specials are available in all games.
//
//  Revision 1.19  2003/10/22 06:27:38  dj_jl
//  Increased maximal start spot count
//
//  Revision 1.18  2003/09/26 16:53:26  dj_jl
//  Added more line flags
//
//  Revision 1.17  2002/09/07 16:28:21  dj_jl
//  Added Level class.
//
//  Revision 1.16  2002/07/23 16:32:19  dj_jl
//  Changed version number.
//
//  Revision 1.15  2002/06/14 15:42:05  dj_jl
//  Changed version number.
//
//  Revision 1.14  2002/03/28 18:17:16  dj_jl
//  Updated version.
//
//  Revision 1.13  2002/02/07 18:50:05  dj_jl
//  Made CheckPosition shared.
//
//  Revision 1.12  2002/02/02 19:17:25  dj_jl
//  Replacing pointers with references, beautification.
//
//  Revision 1.11  2002/01/07 12:19:56  dj_jl
//  Changed copyright year
//
//  Revision 1.10  2001/12/27 17:55:08  dj_jl
//  Changed progs version number
//
//  Revision 1.9  2001/11/09 14:39:44  dj_jl
//  Beautification
//
//  Revision 1.8  2001/10/27 07:37:39  dj_jl
//  Possibility to create new console variables
//
//  Revision 1.7  2001/10/22 17:23:08  dj_jl
//  Floatification of angles
//
//  Revision 1.6  2001/10/02 17:37:19  dj_jl
//  Removed status bar widgets
//
//  Revision 1.5  2001/09/24 17:24:09  dj_jl
//  Beautification
//
//  Revision 1.4  2001/09/20 16:19:59  dj_jl
//  Start using object-oriented stuff, beautification
//  
//  Revision 1.3  2001/08/21 17:53:42  dj_jl
//  Changed prog version
//  
//  Revision 1.2  2001/07/27 14:27:51  dj_jl
//  Update with Id-s and Log-s, some fixes
//
//**************************************************************************
