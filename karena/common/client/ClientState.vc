//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class ClientState : Object
	native
	abstract;

int clientnum;

int pclass;	// player class type

// Determine POV,
//  including viewpoint bobbing during movement.
// Focal origin above r.z
TVec vieworg;
TAVec viewangles;
int centering;

// This is only used between levels,
// mo->health is used during levels.
int health;

int items;

// Frags, kills of other players.
int Frags;

// So gun flashes light up areas.
int extralight;

// For lite-amp and invulnarability powers
int fixedcolormap;

// Current PLAYPAL index
//  can be set to REDCOLORMAP for pain, etc.
int palette;
int prev_palette;

int cshifts[NUM_CSHIFTS];	//  color shifts for damage,
int prev_cshifts[NUM_CSHIFTS];	// powerups and content types

// Overlay view sprites (gun, etc).
cl_pspdef_t psprites[NUMPSPRITES];
float pspriteSY;

// True if secret level has been done.
bool bDidSecret;

bool bPaused;

int worldTimer;	// total time the player's been playing

// Overlay view sprites (gun, etc).
int translucency;

int maxclients;
int deathmatch;

float mtime[2];
float time;
float oldtime;

int serverinfo[MAX_INFO_STRING / 4];

int intermission;

defaultproperties
{
}

//**************************************************************************
//
//  $Log$
//  Revision 1.4  2006/03/27 16:16:29  firebrand_kh
//  Initial Import
//
//  Revision 1.1  2006/02/20 22:57:16  dj_jl
//  Changed client state structure to class.
//
//**************************************************************************
