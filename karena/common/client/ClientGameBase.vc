//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class ClientGameBase : Object
	abstract
	native;

bool local_server;

// used to accelerate or skip a stage
bool skipintermission;

client_state_t *cl;
level_t* level;
Level GLevel;

scores_t *scores;
im_t *im;

RootWindow GRoot;

int sb_height;

//==========================================================================
//
//  RootWindowCreated
//
//==========================================================================

void RootWindowCreated()
{
}

//==========================================================================
//
//  Connected
//
//==========================================================================

void Connected()
{
}

//==========================================================================
//
//  Disconnected
//
//==========================================================================

void Disconnected()
{
}

//==========================================================================
//
//  DemoPlaybackStarted
//
//==========================================================================

void DemoPlaybackStarted()
{
}

//==========================================================================
//
//  DemoPlaybackStopped
//
//==========================================================================

void DemoPlaybackStopped()
{
}

//==========================================================================
//
//  OnHostEndGame
//
//==========================================================================

void OnHostEndGame()
{
}

//==========================================================================
//
//  OnHostError
//
//==========================================================================

void OnHostError()
{
}

//==========================================================================
//
//  StatusBarStartMap
//
//==========================================================================

void StatusBarStartMap()
{
}

//==========================================================================
//
//  StatusBarDrawer
//
//==========================================================================

void StatusBarDrawer(int sb_view)
{
}

//==========================================================================
//
//  StatusBarUpdateWidgets
//
//==========================================================================

void StatusBarUpdateWidgets()
{
}

//==========================================================================
//
//  IintermissionStart
//
//==========================================================================

void IintermissionStart()
{
}

//==========================================================================
//
//  StartFinale
//
//==========================================================================

void StartFinale()
{
}

//===========================================================================
//
//  FinaleResponder
//
//===========================================================================

bool FinaleResponder(event_t * event)
{
	return false;
}

//==========================================================================
//
//  DeactivateMenu
//
//==========================================================================

void DeactivateMenu()
{
}

//==========================================================================
//
//  MenuResponder
//
//==========================================================================

bool MenuResponder(event_t * event)
{
	return false;
}

//==========================================================================
//
//  MenuActive
//
//==========================================================================

bool MenuActive()
{
	return false;
}

//==========================================================================
//
//  MessageBoxDrawer
//
//==========================================================================

void MessageBoxDrawer()
{
}

//==========================================================================
//
//  MessageBoxResponder
//
//==========================================================================

bool MessageBoxResponder(event_t * event)
{
	return false;
}

//==========================================================================
//
//  MessageBoxActive
//
//==========================================================================

bool MessageBoxActive()
{
	return false;
}

//==========================================================================
//
//  DrawViewBorder
//
//==========================================================================

void DrawViewBorder(int x, int y, int w, int h)
{
}

//==========================================================================
//
//  ParseServerCommand
//
//==========================================================================

bool ParseServerCommand(int cmd_type)
{
	return false;
}

//==========================================================================
//
//  UpdateParticle
//
//==========================================================================

void UpdateParticle(particle_t* p, float DeltaTime)
{
}

//==========================================================================
//
//  UpdateMobj
//
//==========================================================================

void UpdateMobj(clmobj_t* mobj, int key, float DeltaTime)
{
}

defaultproperties
{
	local_server = true;
}

//**************************************************************************
//
//  $Log$
//  Revision 1.2  2006/02/13 18:44:37  dj_jl
//  Moved all server progs global functions to classes.
//
//  Revision 1.1  2006/02/09 22:34:55  dj_jl
//  Moved all client game code to classes.
//
//**************************************************************************
