//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

// MACROS ------------------------------------------------------------------

// CONSTANTS ---------------------------------------------------------------

// TYPES -------------------------------------------------------------------

// FUNCTION PROTOTYPES -----------------------------------------------------

// DATA DECLARATIONS -------------------------------------------------------

int pic_bordt;
int pic_bordb;
int pic_bordl;
int pic_bordr;
int pic_bordtl;
int pic_bordtr;
int pic_bordbl;
int pic_bordbr;

// CODE --------------------------------------------------------------------

//==========================================================================
//
//  InitBorder
//
//==========================================================================

void InitBorder(void)
{
	pic_bordt = R_RegisterPic("bordt", PIC_PATCH);
	pic_bordb = R_RegisterPic("bordb", PIC_PATCH);
	pic_bordl = R_RegisterPic("bordl", PIC_PATCH);
	pic_bordr = R_RegisterPic("bordr", PIC_PATCH);
	pic_bordtl = R_RegisterPic("bordtl", PIC_PATCH);
	pic_bordtr = R_RegisterPic("bordtr", PIC_PATCH);
	pic_bordbl = R_RegisterPic("bordbl", PIC_PATCH);
	pic_bordbr = R_RegisterPic("bordbr", PIC_PATCH);
}

//==========================================================================
//
//  DrawBorder
//
//  Draws border
//
//==========================================================================

void DrawBorder(int x, int y, int w, int h)
{
	int i;

	if (!pic_bordb)
	{
		InitBorder();
	}

	for (i = 0; i < w; i += 16)
		R_DrawPic(x + i, y - 4, pic_bordt);

	for (i = 0; i < w; i += 16)
		R_DrawPic(x + i, y + h, pic_bordb);

	for (i = 0; i < h; i += 16)
		R_DrawPic(x - 4, y + i, pic_bordl);

	for (i = 0; i < h; i += 16)
		R_DrawPic(x + w, y + i, pic_bordr);

	// Draw beveled edge.
	R_DrawPic(x - 4, y - 4, pic_bordtl);
	R_DrawPic(x + w, y - 4, pic_bordtr);
	R_DrawPic(x - 4, y + h, pic_bordbl);
	R_DrawPic(x + w, y + h, pic_bordbr);
}

//==========================================================================
//
//  DrawViewBorder
//
//==========================================================================

void DrawViewBorder(int x, int y, int w, int h)
{
	R_FillRectWithFlat(0, 0, 320, 200 - 39, "F_022");
	DrawBorder(x, y, w, h);
}

//**************************************************************************
//
//  $Log$
//  Revision 1.1  2004/11/16 13:33:20  dj_jl
//  Initial import.
//
//  Revision 1.3  2002/01/07 12:25:57  dj_jl
//  Changed copyright year
//
//  Revision 1.2  2001/09/24 17:24:10  dj_jl
//  Beautification
//
//  Revision 1.1  2001/08/29 17:46:25  dj_jl
//  Moved view border and message box to progs
//  
//**************************************************************************
