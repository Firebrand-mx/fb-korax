//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

import common;

class HexenDefs : Object;

enum
{
	PCLASS_FIGHTER,
	PCLASS_CLERIC,
	PCLASS_MAGE,
	PCLASS_HERETIC,
	PCLASS_MARINE,
	PCLASS_WITCHAVEN,
	PCLASS_PIG,
	NUMCLASSES
};

enum
{
	WP_FIRST,
	WP_SECOND,
	WP_THIRD,
	WP_FOURTH,
	WP_FIFTH,
	WP_SIXTH,
	WP_SEVENTH,
	WP_EIGHTH,

	NUMWEAPONS,

	// No pending weapon change.
	wp_nochange = -1
};

enum
{
	MANA_1,
	MANA_2,
	MANA_3,
	MANA_4,
	MANA_5,
	NUMMANA,
	MANA_NONE
};

enum { MAX_MANA		= 200 };

enum
{
	ARMOR_ARMOR,
	ARMOR_SHIELD,
	ARMOR_HELMET,
	ARMOR_AMULET,
	NUMARMOR
};

enum
{
	arti_none,
	arti_invulnerability,
	arti_health,
	arti_superhealth,
	arti_healingradius,
	arti_summon,
	arti_torch,
	arti_egg,
	arti_fly,
	arti_blastradius,
	arti_poisonbag,
	arti_teleportother,
	arti_speed,
	arti_boostmana,
	arti_boostarmor,
	arti_teleport,
	arti_invisibility,
	arti_damage,
	// Puzzle artifacts
	arti_firstpuzzitem,
	arti_puzzskull = arti_firstpuzzitem,
	arti_puzzgembig,
	arti_puzzgemred,
	arti_puzzgemgreen1,
	arti_puzzgemgreen2,
	arti_puzzgemblue1,
	arti_puzzgemblue2,
	arti_puzzbook1,
	arti_puzzbook2,
	arti_puzzskull2,
	arti_puzzfweapon,
	arti_puzzcweapon,
	arti_puzzmweapon,
	arti_puzzgear1,
	arti_puzzgear2,
	arti_puzzgear3,
	arti_puzzgear4,
	NUMARTIFACTS
};

enum
{
	KEY_1,
	KEY_2,
	KEY_3,
	KEY_4,
	KEY_5,
	KEY_6,
	KEY_7,
	KEY_8,
	KEY_9,
	KEY_A,
	KEY_B,
	NUMKEYS
};

enum
{
	SBF_KEYS_MASK			= 0x000007ff,
	SBF_WPN_MASK			= 0x0000f800, //1800
	SBF_WPN_SHIFT			= 11,
	SBF_POWER_FLIGHT		= 0x00010000,
	SBF_POWER_SPEED			= 0x00020000,
	SBF_POWER_INVULN		= 0x00040000,
	SBF_POWER_MINOTAUR		= 0x00080000,
	SBF_IN_FLIGHT			= 0x00100000,
	SBF_POWER_INVISIBILITY		= 0x00200000,
	SBF_POWER_DAMAGE		= 0x00400000
};

enum
{
	svc_gun_shot = USER_PROTOCOL_START,
	svc_blood,
	svc_explosion,
	svc_explosion2,
	svc_chunks,
	svc_fov
};

enum
{
	EF_DL_NONE,
	EF_DL_WHITE,
	EF_DL_RED,
	EF_DL_GREEN,
	EF_DL_BLUE,
	EF_DL_DARK,
	EF_DL_ROCKET,
	EF_DL_MUZZLEFLASH,

	EF_DLIGHT_MASK	       = 7
};

//[Korax]
enum { KORAX_STATS 	= 90 };

enum
{
	scoreevent_PlayerDiscard,
	scoreevent_TeamDiscard,    // set score to the lowest score in table, minus one point
				   // (it is used to push player or team down the table when
				   // he/she quits or team discards the last player)
	scoreevent_Reset,	// set score to zero
	scoreevent_Frag,	// player kill
	scoreevent_SelfFrag,	// self-kill
	scoreevent_TeamFrag,	// fragged team comrade
	scoreevent_Kill,	// monster kill
	scoreevent_FtbGoal,	// football goal
	NUMSCOREEVENTS
};

enum
{
	game_sweep,
	game_dm,
	NUMGAMESNOTEAM,
	game_dmteam = 		NUMGAMESNOTEAM,
	game_ctf,
	game_football,
	game_sweepteam,
	NUMGAMES
};

const int MAXPLAYERTEAMS		= 8;	//[CW]

defaultproperties
{
}
