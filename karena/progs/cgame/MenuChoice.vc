//**************************************************************************
//**
//**	    ##   ##   ####   ######     ##    ##     ##
//**	    ##  ##   ##  ##  ##   ##  ##  ##   ### ###
//**	    ## ##   ##    ## ##   ## ##    ##   #####
//**	    ######  ##    ## #####   ########   #####
//**	    ## ###   ##  ##  ######  ##    ##  ### ###
//**	    ##   ##   ####   ##  ### ##    ## ##     ##
//**
//**		##    ######    ##### ###   ##    ##
//**	      ##  ##  ##   ##  #####  ####  ##  ##  ##
//**	     ##    ## ##   ## ##      ##### ## ##    ##
//**	     ######## #####   #####   ## ##### ########
//**	     ##    ## ######  ##      ##  #### ##    ##
//**	     ##    ## ##  ###  #####  ##   ### ##    ##
//**
//**    $Id$
//**
//**    Copyright (C) 2004-2006 Korax Heritage Team
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class MenuChoice : Widget;

int pic_M_FSLOT;

int CursorXOffs;
int CursorYOffs;

//==========================================================================
//
//  SetOrigin
//
//==========================================================================

void SetOrigin(int x, int y)
{
	SetPos(x, y);
}

//==========================================================================
//
//	OnFocusReceived
//
//==========================================================================

void OnFocusReceived()
{
	if (MenuScreen(Parent) && MenuScreen(Parent).Selector)
	{
		LocalSound('menu/cursor');
		MenuScreen(Parent).Selector.SetPos(X + CursorXOffs,
			Y + CursorYOffs);
	}
	::OnFocusReceived();
}

//==========================================================================
//
//	OnMouseEnter
//
//==========================================================================

void OnMouseEnter()
{
	SetFocus();
}

ClientGame GetClGame()
{
	return MenuScreen(Parent).ClGame;
}

//**************************************************************************
//**
//**	Slot for saves and input lines
//**
//**************************************************************************

//==========================================================================
//
//  InitSlot
//
//==========================================================================

void InitSlot()
{
	pic_M_FSLOT = R_RegisterPic('m_fslot');
}

//==========================================================================
//
//  DrawSlot
//
//==========================================================================

int DrawSlot(int y, string text, bool entering)
{
	int xx;
	int j;

	DrawPic(0, y, pic_M_FSLOT);

	SetFont('smallfont');
	SetTextAlign(hleft, vtop);
	DrawText(5, y + 5, text);
	if (entering)
	{
		DrawCursor();
	}
	return 20;
}

defaultproperties
{
	Focusable = true;
	Width = 420;//320
	Height = 320;//200
}
