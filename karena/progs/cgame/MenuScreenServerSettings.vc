//**************************************************************************
//**
//**	    ##   ##   ####   ######     ##    ##     ##
//**	    ##  ##   ##  ##  ##   ##  ##  ##   ### ###
//**	    ## ##   ##    ## ##   ## ##    ##   #####
//**	    ######  ##    ## #####   ########   #####
//**	    ## ###   ##  ##  ######  ##    ##  ### ###
//**	    ##   ##   ####   ##  ### ##    ## ##     ##
//**
//**		##    ######    ##### ###   ##    ##
//**	      ##  ##  ##   ##  #####  ####  ##  ##  ##
//**	     ##    ## ##   ## ##      ##### ## ##    ##
//**	     ######## #####   #####   ## ##### ########
//**	     ##    ## ######  ##      ##  #### ##    ##
//**	     ##    ## ##  ###  #####  ##   ### ##    ##
//**
//**    $Id: MenuScreenServerSettings.vc 508 2006-07-10 19:02:43Z firebrand_kh $
//**
//**    Copyright (C) 2004-2006 Korax Heritage Team
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class MenuScreenServerSettings : MenuScreen;

//==========================================================================
//
//	CreateChoices
//
//==========================================================================

void CreateChoices()
{
	int i;
	MenuChoiceSlider	Slider;
	MenuChoiceEnum		Enum;
	int					currentY;

	currentY = ChoicesStartY;

	Enum = MenuChoiceEnum(NewChild(MenuChoice_OnOff));
	Enum.SetOrigin(ChoicesStartX, currentY);
	Enum.Text = "Team Autoselect";
	Enum.SetInitialValue(GetCvar('TeamAutoSelect'));
	Enum.ValueChanging = ChangeTeamAutoSelect;
	currentY += Enum.Height;

	Enum = MenuChoiceEnum(NewChild(MenuChoice_OnOff));
	Enum.SetOrigin(ChoicesStartX, currentY);
	Enum.Text = "Keep Balanced Teams";
	Enum.SetInitialValue(GetCvar('KeepTeamsEqual'));
	Enum.ValueChanging = ChangeKeepTeamsEqual;
	currentY += Enum.Height;

	Enum = MenuChoiceEnum(NewChild(MenuChoice_OnOff));
	Enum.SetOrigin(ChoicesStartX, currentY);
	Enum.Text = "Friendly Fire";
	Enum.SetInitialValue(GetCvar('FriendlyFire'));
	Enum.ValueChanging = ChangeFriendlyFire;
	currentY += Enum.Height;

	Slider = MenuChoiceSlider(NewChild(MenuChoiceSlider));
	currentY += Slider.Height; // add some extra space
	Slider.SetOrigin(ChoicesStartX, currentY);
	Slider.Text = "Player corpse amount";
	Slider.MinValue = 8.0;
	Slider.MaxValue = 64.0;
	Slider.ValueDelta = 8.0;
	Slider.SetInitialValue(itof(GetCvar('BodyQueSize')));
	Slider.ValueChanging = ChangeBodyQueueSize;
	currentY += Slider.Height;

	Slider = MenuChoiceSlider(NewChild(MenuChoiceSlider));
	Slider.SetOrigin(ChoicesStartX, currentY);
	Slider.Text = "Monster corpse amount";
	Slider.MinValue = 16.0;
	Slider.MaxValue = 128.0;
	Slider.ValueDelta = 16.0;
	Slider.SetInitialValue(itof(GetCvar('CorpseQueSize')));
	Slider.ValueChanging = ChangeCorpseQueueSize;
	currentY += Slider.Height;

}

//==========================================================================
//
//	ChangeTeamAutoSelect
//
//==========================================================================

bool ChangeTeamAutoSelect(Object Sender, int newValue)
{
	SetCvar('TeamAutoSelect', newValue);
	return true;
}

//==========================================================================
//
//	ChangeKeepTeamsEqual
//
//==========================================================================

bool ChangeKeepTeamsEqual(Object Sender, int newValue)
{
	SetCvar('KeepTeamsEqual', newValue);
	return true;
}

//==========================================================================
//
//	ChangeFriendlyFire
//
//==========================================================================

bool ChangeFriendlyFire(Object Sender, int newValue)
{
	SetCvar('FriendlyFire', newValue);
	return true;
}

//==========================================================================
//
//	ChangeBodyQueueSize
//
//==========================================================================

bool ChangeBodyQueueSize(Object Sender, float newValue)
{
	SetCvar('BodyQueSize', ftoi(newValue));
	return true;
}

//==========================================================================
//
//	ChangeCorpseQueueSize
//
//==========================================================================

bool ChangeCorpseQueueSize(Object Sender, float newValue)
{
	SetCvar('CorpseQueSize', ftoi(newValue));
	return true;
}

defaultproperties
{
	ChoicesStartX = 185;
	ChoicesStartY = 37;
	Width = 340;
	SelectorType = MenuSelector_SmallRight;
	Title = "SERVER SETTINGS";
}
