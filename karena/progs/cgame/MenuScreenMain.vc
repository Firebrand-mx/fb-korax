//**************************************************************************
//**
//**	    ##   ##   ####   ######     ##    ##     ##
//**	    ##  ##   ##  ##  ##   ##  ##  ##   ### ###
//**	    ## ##   ##    ## ##   ## ##    ##   #####
//**	    ######  ##    ## #####   ########   #####
//**	    ## ###   ##  ##  ######  ##    ##  ### ###
//**	    ##   ##   ####   ##  ### ##    ## ##     ##
//**
//**		##    ######    ##### ###   ##    ##
//**	      ##  ##  ##   ##  #####  ####  ##  ##  ##
//**	     ##    ## ##   ## ##      ##### ## ##    ##
//**	     ######## #####   #####   ## ##### ########
//**	     ##    ## ######  ##      ##  #### ##    ##
//**	     ##    ## ##  ###  #####  ##   ### ##    ##
//**
//**    $Id$
//**
//**    Copyright (C) 2004-2006 Korax Heritage Team
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class MenuScreenMain : MenuScreen;

//==========================================================================
//
//	OnCreate
//
//==========================================================================

void OnCreate()
{
	if (!ClGame)
	{
		return;
	}
	::OnCreate();
}

//==========================================================================
//
//	CreateTitle
//
//==========================================================================

void CreateTitle()
{
	MenuStaticAnim newAnim;

	if (!ClientGame(ClGame).IsInGame)
	{
		NewChild(MenuMainTitleImage);
	}

	newAnim = MenuStaticAnim(NewChild(MenuMainAnim));
	newAnim.SetPos(37, 190);
	newAnim.StartFrame = 2;

	newAnim = MenuStaticAnim(NewChild(MenuMainAnim));
	newAnim.SetPos(278, 190);
}

//==========================================================================
//
//	CreateChoices
//
//==========================================================================

void CreateChoices()
{
	MenuBigTextButton	btn;
	int					currentY;

	if (ClientGame(ClGame).IsInGame)
	{
		currentY = ChoicesStartY;
		if (GetCvar('DeathMatch') >= HexenDefs::NUMGAMESNOTEAM)
		{
			currentY -= 20;
			btn = MenuBigTextButton(NewChild(MenuBigTextButton));
			btn.SetPos(ChoicesStartX, currentY);
			btn.Text = "Select Team";
			btn.Activated = ActivateSelectTeam;
			currentY += btn.Height;
		}

		btn = MenuBigTextButton(NewChild(MenuBigTextButton));
		btn.SetPos(ChoicesStartX, currentY);
		btn.Text = "Add Bot";
		btn.Activated = ActivateAddBot;
		currentY += btn.Height;

		btn = MenuBigTextButton(NewChild(MenuBigTextButton));
		btn.SetPos(ChoicesStartX, currentY);
		btn.Text = "Remove Bot";
		btn.Activated = ActivateRemoveBot;
		currentY += btn.Height;

		btn = MenuBigTextButton(NewChild(MenuBigTextButton));
		btn.SetPos(ChoicesStartX, currentY);
		btn.Text = "Leave Arena";
		btn.Activated = ActivateLeaveArena;
		currentY += btn.Height;
	}
	else
	{
		currentY = ChoicesStartY;
		btn = MenuBigTextButton(NewChild(MenuBigTextButton));
		btn.SetPos(ChoicesStartX, currentY);
		btn.Text = "Multiplayer";
		btn.Activated = ActivateMP;
		currentY += btn.Height;
	}

	btn = MenuBigTextButton(NewChild(MenuBigTextButton));
	btn.SetPos(ChoicesStartX, currentY);
	btn.Text = "Options";
	btn.Activated = ActivateOpt;
	currentY += btn.Height;

	btn = MenuBigTextButton(NewChild(MenuBigTextButton));
	btn.SetPos(ChoicesStartX, currentY);
	btn.Text = "Quit game";
	btn.Activated = ActivateQuit;
}

//==========================================================================
//
//	ActivateSelectTeam
//
//==========================================================================

void ActivateSelectTeam(Object Sender)
{
	Player(ClGame.cl).ServerTeamSelect();
}

//==========================================================================
//
//	ActivateAddBot
//
//==========================================================================

void ActivateAddBot(Object Sender)
{
	CmdBuf_AddText("addbot\n");
}

//==========================================================================
//
//	ActivateRemoveBot
//
//==========================================================================

void ActivateRemoveBot(Object Sender)
{
	KArenaPlayerReplicationInfo RepInfo;

	foreach ClGame.GLevel.LevelInfo.AllThinkers(KArenaPlayerReplicationInfo, RepInfo)
	{
		if (RepInfo.IsBot)
		{
			Player(ClGame.cl).ServerDisconnectBot(RepInfo.PlayerNum);
			break;
		}
	}
}

//==========================================================================
//
//	ActivateLeaveArena
//
//==========================================================================

void ActivateLeaveArena(Object Sender)
{
	LocalSound('Chat');
	ClGame.MessageBoxStartMessage("ARE YOU SURE YOU WANT TO LEAVE CURRENT ARENA?",
								ClientGame::MB_EndGame, true);
	ClGame.ForceMenuOff();
}

//==========================================================================
//
//	ActivateMP
//
//==========================================================================

void ActivateMP(Object Sender)
{
	ClGame.PushMenuScreen(ClGame.SpawnMenu(MenuScreenMultiplayer));
}

//==========================================================================
//
//	ActivateOpt
//
//==========================================================================

void ActivateOpt(Object Sender)
{
	ClGame.PushMenuScreen(ClGame.SpawnMenu(MenuScreenOptions));
}

//==========================================================================
//
//	ActivateQuit
//
//==========================================================================

void ActivateQuit(Object Sender)
{
	ClGame.menu_quit();
}

defaultproperties
{
	ChoicesStartX = 110;
	ChoicesStartY = 120;
	SelectorType = MenuSelector_BigArrow;
}
