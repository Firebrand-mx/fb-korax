//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

// MACROS ------------------------------------------------------------------

#define TELEFOGHEIGHT			32.0

#define STARTREDPALS    		1
#define STARTBONUSPALS  		9
#define STARTPOISONPALS 		13
#define STARTICEPAL			21
#define STARTHOLYPAL			22
#define STARTSCOURGEPAL 		25
#define NUMREDPALS      		8
#define NUMBONUSPALS    		4
#define NUMPOISONPALS			8

#define BLINKTHRESHOLD 			4.0

#define INVULNTIME			30.0
#define INVULNTIME2			5.0
#define INFRATIME			120.0
#define FLIGHTTIME 			60.0
#define SPEEDTIME 			45.0
#define MORPHTIME 			40.0
#define MAULATORTIME 			30.0
#define INVISTIME			40.0
#define DAMAGETIME			40.0

#define MAXMORPHHEALTH			30
#define VIEWHEIGHT 			48.0

// player radius for movement checking
//#define PLAYERRADIUS  		16*FRACUNIT

#define BASETHRESHOLD			100	// follow a player exlusively for 3 seconds

#define ONFLOORZ			-99999.0
#define ONCEILINGZ			99999.0
#define FLOATRANDZ			99998.0

#define WPIECE1				1
#define WPIECE2				2
#define WPIECE3				4

//
// Map things flags
//
#define	MTF_EASY			0x0001	// Skill flags.
#define	MTF_NORMAL			0x0002
#define	MTF_HARD			0x0004
#define	MTF_AMBUSH			0x0008	// Deaf monsters/do not react to sound.
#define MTF_DORMANT			0x0010	// The thing is dormant
#define MTF_FIGHTER			0x0020	// Thing appearing in player classes
#define MTF_CLERIC			0x0040
#define MTF_MAGE			0x0080
#define MTF_GSINGLE			0x0100	// Appearing in game modes
#define MTF_GCOOP			0x0200
#define MTF_GDEATHMATCH			0x0400

//
// Player internal flags, for cheats and debug.
//
#define CF_NOCLIP			1	// No clipping, walk through barriers.
#define CF_GODMODE			2	// No damage, no health loss.

#define MELEERANGE			64.0
#define MISSILERANGE			(32.0 * 64.0)

#define LOWERSPEED			6.0
#define RAISESPEED			6.0

#define WEAPONBOTTOM			128.0
#define WEAPONTOP			32.0

// 16 pixels of bob
#define MAXBOB				16.0

//
// ---------- Intercept ----------------
//

// Mana

#define TXT_MANA_1			"BLUE MANA"
#define TXT_BMANA_1			"BIG BLUE MANA"
#define TXT_MANA_2			"GREEN MANA"
#define TXT_BMANA_2			"BIG GREEN MANA"
#define TXT_MANA_3			"RED MANA"
#define TXT_BMANA_3			"BIG RED MANA"
#define TXT_MANA_4			"DISC OF REPULSION"
#define TXT_MANA_5			"FLECHETTE"
#define TXT_MANA_ALL			"COMBINED MANA"

// Artifacts

#define TXT_ARTIINVULNERABILITY		"ICON OF THE DEFENDER"
#define TXT_ARTIHEALTH			"QUARTZ FLASK"
#define TXT_ARTISUPERHEALTH		"MYSTIC URN"
#define TXT_ARTIHEALINGRADIUS		"MYSTIC AMBIT INCANT"
#define TXT_ARTISUMMON			"DARK SERVANT"
#define TXT_ARTITORCH			"TORCH"
#define TXT_ARTIEGG			"PORKALATOR"
#define TXT_ARTIFLY			"WINGS OF WRATH"
#define TXT_ARTIBLASTRADIUS		"DISC OF REPULSION"
#define TXT_ARTIPOISONBAG		"FLECHETTE"
#define TXT_ARTITELEPORTOTHER		"BANISHMENT DEVICE"
#define TXT_ARTISPEED			"BOOTS OF SPEED"
#define TXT_ARTIBOOSTMANA		"KRATER OF MIGHT"
#define TXT_ARTIBOOSTARMOR		"DRAGONSKIN BRACERS"
#define TXT_ARTITELEPORT		"CHAOS DEVICE"
#define TXT_ARTIINVISIBILITY		"SHADOWSPHERE"
#define TXT_ARTIDAMAGE			"PI DAMAGE"

// Puzzle artifacts

#define TXT_ARTIPUZZSKULL		"YORICK'S SKULL"
#define TXT_ARTIPUZZGEMBIG		"HEART OF D'SPARIL"
#define TXT_ARTIPUZZGEMRED		"RUBY PLANET"
#define TXT_ARTIPUZZGEMGREEN1		"EMERALD PLANET"
#define TXT_ARTIPUZZGEMGREEN2		"EMERALD PLANET"
#define TXT_ARTIPUZZGEMBLUE1		"SAPPHIRE PLANET"
#define TXT_ARTIPUZZGEMBLUE2		"SAPPHIRE PLANET"
#define TXT_ARTIPUZZBOOK1		"DAEMON CODEX"
#define TXT_ARTIPUZZBOOK2		"LIBER OSCURA"
#define TXT_ARTIPUZZSKULL2		"FLAME MASK"
#define TXT_ARTIPUZZFWEAPON		"GLAIVE SEAL"
#define TXT_ARTIPUZZCWEAPON		"HOLY RELIC"
#define TXT_ARTIPUZZMWEAPON		"SIGIL OF THE MAGUS"
#define TXT_ARTIPUZZGEAR		"CLOCK GEAR"

// Items

#define TXT_ITEMHEALTH			"CRYSTAL VIAL"
#define TXT_ARMOR1			"MESH ARMOR"
#define TXT_ARMOR2			"FALCON SHIELD"
#define TXT_ARMOR3			"PLATINUM HELMET"
#define TXT_ARMOR4			"AMULET OF WARDING"

// Weapons

//[Korax]
/*#define TXT_WEAPON_F2			"TIMON'S AXE"
#define TXT_WEAPON_F3			"HAMMER OF RETRIBUTION"
#define TXT_WEAPON_F4			"QUIETUS ASSEMBLED"
#define TXT_WEAPON_C2			"SERPENT STAFF"
#define TXT_WEAPON_C3			"FIRESTORM"
#define TXT_WEAPON_C4			"WRAITHVERGE ASSEMBLED"
#define TXT_WEAPON_M2			"FROST SHARDS"
#define TXT_WEAPON_M3			"ARC OF DEATH"
#define TXT_WEAPON_M4			"BLOODSCOURGE ASSEMBLED"
*/
#define TXT_WEAPON_F4			"QUIETUS ASSEMBLED"
#define TXT_WEAPON_C4			"WRAITHVERGE ASSEMBLED"
#define TXT_WEAPON_M4			"BLOODSCOURGE ASSEMBLED"

#define TXT_QUIETUS_PIECE		"SEGMENT OF QUIETUS"
#define TXT_WRAITHVERGE_PIECE		"SEGMENT OF WRAITHVERGE"
#define TXT_BLOODSCOURGE_PIECE		"SEGMENT OF BLOODSCOURGE"

#define BONUSADD			0.2

//
// ----- User ---------
//

#define HEAL_RADIUS_DIST		255.0

#define TXT_USEPUZZLEFAILED		"YOU CANNOT USE THIS HERE"

//
// --------- Mobj ------------
//

#define SMALLSPLASHCLIP			12.0

//
// --------- Physics --------
//

#define FLOATSPEED			140.0

#define MAXMOVE 			1050.0
#define MAXMOVESTEP			15.0	//MAXMOVE / (35.0 * 2.0)
#define STOPSPEED			2.1875

#define FRICTION_NORMAL			3.28125
#define FRICTION_LOW			0.95703125
#define FRICTION_FLY			2.87109375
#define FRICTION_WATER			3.0

//
// --------- Map -----------
//

#define USERANGE 			64.0

//
// --------- UserSubs ---------
//

#define BLAST_RADIUS_DIST		255.0
#define BLAST_FULLSTRENGTH		0.0038909912
#define BLAST_SPEED			20.0

//
// ----------- Sorcerer --------------
//

#define SORCBALL_INITIAL_SPEED 		7
#define SORCBALL_TERMINAL_SPEED		25
#define SORCBALL_SPEED_ROTATIONS 	5
#define SORCFX4_RAPIDFIRE_TIME		(6*3)	// 3 seconds
#define SORCFX4_SPREAD_ANGLE		20.0
#define SORC_DEFENSE_TIME		255
#define SORC_DEFENSE_HEIGHT		45.0
#define BOUNCE_TIME_UNIT		(35/2)

#define SORC_DECELERATE			0
#define SORC_ACCELERATE 		1
#define SORC_STOPPING			2
#define SORC_FIRESPELL			3
#define SORC_STOPPED			4
#define SORC_NORMAL			5
#define SORC_FIRING_SPELL		6

//
// ---------- AI SUBS ---------------
//

#define MONS_LOOK_RANGE 		(16.0 * 64.0)
#define MONS_LOOK_LIMIT 		64

#define BODYQUESIZE 			32
#define CORPSEQUEUESIZE			64

// CONSTANTS ---------------------------------------------------------------

// Any floor type >= FLOOR_LIQUID will floorclip sprites
enum
{
	FLOOR_SOLID,
	FLOOR_ICE,
	FLOOR_LIQUID,
	FLOOR_WATER,
	FLOOR_LAVA,
	FLOOR_SLUDGE
};

enum
{
	CONTENTS_EMPTY,
	CONTENTS_WATER,
	CONTENTS_LAVA,
	CONTENTS_SLUDGE,

	CONTENTS_SOLID = -1
};

enum
{
	CSHIFT_CONTENTS
};

// Power up artifacts.
enum
{
	pw_invulnerability,
	pw_infrared,
	pw_flight,
	pw_speed,
	pw_minotaur,
	pw_invisibility, // [FB] New for KA
	pw_damage,
	pw_invulnerability2, // [FB] For the spawning temporary invuln.
	NUMPOWERS
};

enum
{
	PO_ANCHOR_TYPE = 3000,
	PO_SPAWN_TYPE,
	PO_SPAWNCRUSH_TYPE
};

enum
{
	SEQ_PLATFORM,
	SEQ_PLATFORM_HEAVY,	// same script as a normal platform
	SEQ_PLATFORM_METAL,
	SEQ_PLATFORM_CREAK,	// same script as a normal platform
	SEQ_PLATFORM_SILENCE,
	SEQ_PLATFORM_LAVA,
	SEQ_PLATFORM_WATER,
	SEQ_PLATFORM_ICE,
	SEQ_PLATFORM_EARTH,
	SEQ_PLATFORM_METAL2,

	SEQ_DOOR_STONE,
	SEQ_DOOR_HEAVY,
	SEQ_DOOR_METAL,
	SEQ_DOOR_CREAK,
	SEQ_DOOR_SILENCE,
	SEQ_DOOR_LAVA,
	SEQ_DOOR_WATER,
	SEQ_DOOR_ICE,
	SEQ_DOOR_EARTH,
	SEQ_DOOR_METAL2,

	SEQ_ESOUND_WIND,
	SEQ_NUMSEQ
};

enum
{
	CHAN_AUTO,
	CHAN_VOICE,
	CHAN_WEAPON,
	CHAN_ITEM,
	CHAN_BODY
};

// TYPES -------------------------------------------------------------------

/*

  Class definitions for botinfo, chatinfo, and
  other various bot information thingamabobers.

*/

// [FB] Bot Difficulty/skill settings/filters.
enum
{
	bsk_verypoor,
	bsk_poor,
	bsk_low,
	bsk_medium,
	bsk_high,
	bsk_excellent,
	bsk_supreme
};

struct botinfo_t
{
	string Name;		// Bot's name
	int accuracy;		// Accuracy with "instant" weapons (this includes "leading")
	int intelect;		// Accuracy with "missile" weapons (rocket launcher, etc.)
	int evade;		// Ability to dodge incoming missiles
	int anticip;		// Ability to anticipate "instant" shots
	int reaction;		// Overall reaction time (lower is "better")
/*	int pisschance;		// Chance the bot will get pissed when his threshold is reached
	int threshold;		// How much it takes to frustrate/piss off the bot
	int dangerlevel;	// When health is below this, we need some health
//	int wpfav;		// Favorite weapon
	int chatinfo;		// Bot's chat strings
	int chattime;		// How long it takes us to type a line
	int chatty;		// How talkative the bot is
//	char *color;		// Color (in form of a string)
//	char *gender;		// Male/female/it :)
//	char *skin;		// Skin
	int railcolor;		// Railgun trail color
//	bool revealed;		// Hidden bots must be revealed*/
	string userinfo;
};


struct chatline_t
{
//	string		*string;
//	chattype_t  	bot;
	chatline_t	*line;
};

struct chatinfo_t
{
	chatline_t		intro[5];
	chatline_t		inter[5];
	chatline_t		rare[5];
	chatline_t		frag[15];
	chatline_t		died[10];
	chatline_t		roam[10];
	chatline_t		pissed[5];
	chatline_t		frustrated[5];
	chatline_t		special[20];
};


/*

  The bot class, prototypes and definitions are here!

*/

#define FORWARDWALK			200.0
#define FORWARDRUN			400.0
#define SIDEWALK			192.0
#define SIDERUN				320.0

#define MAX_TRAVERSE_DIST		1024.0			//10 meters, used within b_func.c
#define AVOID_DIST			512.0			//Try avoid incoming missiles once they reached this close
#define SAFE_SELF_MISDIST		128.0			//Distance from self to target where it's safe to pull a rocket.
#define FRIEND_DIST			128.0			//To friend.
#define DARK_DIST			256.0			//Distance that bot can see enemies in the dark from.
#define WHATS_DARK			64			//light value thats classed as dark.
#define MAX_MONSTER_TARGET_DIST		1024.0			///Too high can slow down the performance, see P_mobj.c
#define ENEMY_SCAN_FOV			120.0
#define MAXMOVEHEIGHT			32.0			//MAXSTEPMOVE but with jumping counted in.
#define GETINCOMBAT			512.0			//Max distance to item if it's due to be picked up in a combat situation.
#define SHOOTFOV			60.0
#define MAXROAM				(5.0 * 35.0)		//When this time is elapsed the bot will roam after something else.


// The things the bot knows about their enemy
struct enemyinfo_t
{
	int		health;
	int		weap;
};


//
// Bot states
//
//struct botstate_t
enum
{
	// Deciding what to do
	BST_NOTHING,
	// Bot is "fetching" something (skull, whatever)
	BST_OFFENSE,
	// Bot is defending something
	BST_DEFENSE,
	// Bot is heading to scoring place
	BST_RETURN
};

class BotPlayer;

#define NUMTOTALBOTS		336
#define	NUMBOTTYPES		40

// FUNCTION PROTOTYPES -----------------------------------------------------

// DATA DECLARATIONS -------------------------------------------------------

int num_stats = NUM_STATS + 1/*NUMARMOR*/ + NUMMANA + 6 + NUMARTIFACTS * 2 + KORAX_STATS;

bool randomclass;

// Hexen only

float FloatBobOffsets[64] = {
	0.0, 0.7841339111, 1.560714722, 2.322265625,
	3.061462402, 3.77116394, 4.444549561, 5.075134277,
	5.656845093, 6.184082031, 6.651748657, 7.055358887,
	7.391021729, 7.655517578, 7.8462677, 7.961471558,
	7.999984741, 7.961471558, 7.8462677, 7.655517578,
	7.391021729, 7.055358887, 6.651748657, 6.184082031,
	5.656845093, 5.075134277, 4.444549561, 3.77116394,
	3.061462402, 2.322265625, 1.560714722, 0.7841339111,
	-0.0000152587, -0.7841491699, -1.56072998, -2.322280884,
	-3.061477661, -3.771179199, -4.444564819, -5.075149536,
	-5.656860352, -6.18409729, -6.651763916, -7.055374146,
	-7.391052246, -7.655532837, -7.846298218, -7.961486816,
	-8.0, -7.961486816, -7.846298218, -7.655532837,
	-7.391052246, -7.055374146, -6.651763916, -6.18409729,
	-5.656860352, -5.075149536, -4.444564819, -3.771179199,
	-3.061477661, -2.322280884, -1.56072998, -0.7841339111
};

name seq_name[] = {
	'Platform',
	'Platform',						// a 'heavy' platform is just a platform
	'PlatformMetal',
	'Platform',						// same with a 'creak' platform
	'Silence',
	'Lava',
	'Water',
	'Ice',
	'Earth',
	'PlatformMetal2',

	'DoorNormal',
	'DoorHeavy',
	'DoorMetal',
	'DoorCreak',
	'Silence',
	'Lava',
	'Water',
	'Ice',
	'Earth',
	'DoorMetal2',

	'Wind'
};

name door_seq_name[] = {
	'DoorNormal',
	'DoorHeavy',
	'DoorMetal',
	'DoorCreak',
	'Silence',
	'Lava',
	'Water',
	'Ice',
	'Earth',
	'DoorMetal2'
};

#define POLY_SEQ_NAME(num)		seq_name[SEQ_DOOR_STONE + num]

// CODE --------------------------------------------------------------------

//==========================================================================
//
//
//
//==========================================================================

//**************************************************************************
//
//  $Log$
//  Revision 1.9  2005/10/16 22:47:56  firebrand_kh
//  Added definitions for temporal invulnerability for the player
//
//  Revision 1.8  2005/10/03 17:28:31  firebrand_kh
//  Removed unused stuff from the code
//
//  Revision 1.7  2005/08/14 16:53:13  firebrand_kh
//  Changed the way the bots are spawned
//
//  Revision 1.6  2005/08/12 23:02:08  firebrand_kh
//  Added new artifacts stuff to the game
//
//  Revision 1.5  2005/08/12 16:19:29  firebrand_kh
//  Added shadowsphere artifact to the game
//
//  Revision 1.4  2005/07/27 21:16:09  firebrand_kh
//  Class definitions for botinfo, chatinfo, and other various bot information.
//
//  Revision 1.3  2005/02/02 22:47:43  firebrand_kh
//  Added the new big mana items & combined mana item
//
//  Revision 1.2  2004/11/17 16:07:53  firebrand_kh
//  *** empty log message ***
//
//  Revision 1.1  2004/11/16 13:33:23  dj_jl
//  Initial import.
//
//  Revision 1.41  2003/11/12 16:50:47  dj_jl
//  Changed player structure into a class
//
//  Revision 1.40  2003/03/08 12:41:45  dj_jl
//  Removing class pointers.
//
//  Revision 1.39  2002/11/02 08:24:11  dj_jl
//  New style classes.
//
//  Revision 1.38  2002/09/07 16:28:26  dj_jl
//  Added Level class.
//
//  Revision 1.37  2002/08/28 16:36:39  dj_jl
//  Merged MapObject with Entity, some natives, beautification.
//
//  Revision 1.36  2002/07/23 13:07:31  dj_jl
//  Final touches for switching to floating-point time, beautification.
//
//  Revision 1.35  2002/06/29 15:54:34  dj_jl
//  Floatized PainChance.
//
//  Revision 1.34  2002/06/22 07:16:02  dj_jl
//  Added base classes for objects, split them into corresponding files.
//
//  Revision 1.33  2002/06/14 15:49:45  dj_jl
//  Added Projectile class.
//
//  Revision 1.32  2002/05/18 17:00:00  dj_jl
//  Renamed SpawnState to IdleState, other changes.
//
//  Revision 1.31  2002/05/03 17:13:35  dj_jl
//  Fixed content types.
//
//  Revision 1.30  2002/04/11 16:50:54  dj_jl
//  Made TryMove native, Tick function.
//
//  Revision 1.29  2002/03/28 18:32:51  dj_jl
//  Little renaming, some bug fixes.
//
//  Revision 1.28  2002/03/16 17:47:47  dj_jl
//  Got rid of mobj_t and some other legacy.
//
//  Revision 1.27  2002/03/12 19:19:18  dj_jl
//  Pickup classes
//
//  Revision 1.26  2002/03/09 17:57:02  dj_jl
//  Got rid of function pointers, made most of the physics functions native.
//
//  Revision 1.25  2002/03/04 18:31:36  dj_jl
//  Replaced bNoClip with two seperate flags, beautification.
//
//  Revision 1.24  2002/03/02 17:58:37  dj_jl
//  Created Pawn class as a base class for all creatures.
//  Moved all monster classes into corresponding files.
//
//  Revision 1.23  2002/02/26 17:49:49  dj_jl
//  no message
//
//  Revision 1.22  2002/02/22 18:00:24  dj_jl
//  A lots of the renaming, beautification.
//
//  Revision 1.21  2002/02/16 16:27:44  dj_jl
//  Added bool variables
//
//  Revision 1.20  2002/02/14 19:20:59  dj_jl
//  Renamed Entity properties to new naming style
//
//  Revision 1.19  2002/02/09 18:15:42  dj_jl
//  Beautification
//
//  Revision 1.18  2002/02/07 18:50:09  dj_jl
//  Made CheckPosition shared.
//
//  Revision 1.17  2002/02/06 17:28:53  dj_jl
//  Replaced Actor flags with boolean variables.
//
//  Revision 1.16  2002/02/02 19:17:26  dj_jl
//  Replacing pointers with references, beautification.
//
//  Revision 1.15  2002/01/25 18:04:35  dj_jl
//  Many global functions made Actor functions
//
//  Revision 1.14  2002/01/24 18:19:27  dj_jl
//  Split common class Entity, made SetMobjState an Entity function
//
//  Revision 1.13  2002/01/15 18:27:00  dj_jl
//  Some property names with logical words starting with capital letter.
//  Moved everything from Entity class into Actor class.
//
//  Revision 1.12  2002/01/12 18:00:48  dj_jl
//  Sound names initialized as names
//
//  Revision 1.11  2002/01/11 18:16:34  dj_jl
//  Moved here Actor and Weapon class declarations
//
//  Revision 1.10  2002/01/07 12:25:58  dj_jl
//  Changed copyright year
//
//  Revision 1.9  2001/12/27 17:52:24  dj_jl
//  Removed Entity property type, replaced with Object property Class
//
//  Revision 1.8  2001/12/18 18:31:49  dj_jl
//  Beautification
//
//  Revision 1.7  2001/12/12 18:57:42  dj_jl
//  State functions now are methods of Actor and Weapon classes
//
//  Revision 1.6  2001/12/01 18:08:53  dj_jl
//  Physics functions as methods, started to use class references
//
//  Revision 1.5  2001/11/02 18:42:08  dj_jl
//  Damage method
//
//  Revision 1.4  2001/10/27 07:40:58  dj_jl
//  Switched some functions into class members
//
//  Revision 1.3  2001/10/22 17:23:13  dj_jl
//  Floatification of angles
//
//  Revision 1.2  2001/10/18 17:39:34  dj_jl
//  A lots of changes for Alpha 2
//
//  Revision 1.1  2001/10/09 17:35:46  dj_jl
//  Split server defines into seperate file
//
//**************************************************************************
