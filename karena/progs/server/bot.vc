//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2001 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

// MACROS ------------------------------------------------------------------

// CONSTANTS ---------------------------------------------------------------

// TYPES -------------------------------------------------------------------

// FUNCTION PROTOTYPES -----------------------------------------------------

// DATA DECLARATIONS -------------------------------------------------------

int botskill = 2;

// CODE --------------------------------------------------------------------

/*

  This section contains the main bot AI. The
  main bot AI loop, B_Think, is called every tic.
  Also included are various bot decision-making
  procedures, such as B_CheckStuff and B_SetEnemy.

*/

//==========================================================================
//
//	IsDangerous
//
//	Checks if a sector is dangerous.
//
//==========================================================================

bool IsDangerous(sector_t *sec)
{
	switch (sec->special)
	{
	case 7:		// Damage_Sludge
	case 5:		// Damage_LavaWimpy
	case 16:	// Damage_LavaHefty
	case 4:		// Scroll_EastLavaDamage
	case FLOOR_LAVA:
	case FLOOR_SLUDGE:
		return true;
	}
	return false;
}

//==========================================================================
//
//	PTR_BotPathTraverse
//
//	[BC] For the bots
//
//==========================================================================

float bottracerange;
TVec bottracedir;

bool PTR_BotPathTraverse(intercept_t *in)
{
	Actor th;
	line_t *ld;
	BotPlayer bot;
	Actor botmo;
	TVec hit_point;

	bot = usething.Player.Bot;
	botmo = usething;

	if (in->bIsALine)
	{
		sector_t *back;
		sector_t *front;
		opening_t *open;
		float diffheight;

		ld = in->line;					// This linedef
		hit_point = botmo.Origin + (bottracerange * in->frac) * bottracedir;

		// Line is impassible
		if (!(ld->flags & ML_TWOSIDED) || (ld->flags & ML_BLOCKING))
			return false;

		// Line isn't two sided
		if (!ld->backsector)
			return false;

		if (!PointOnPlaneSide(botmo.Origin, ld))
		{
			back = ld->backsector;
			front = ld->frontsector;
		}
		else
		{
			back = ld->frontsector;
			front = ld->backsector;
		}

		// Sector is dangerous
		if (IsDangerous(back))
			return false;

		// crosses a two sided line
		open = LineOpenings(ld, hit_point);
		open = FindOpening(open, hit_point.z, hit_point.z + botmo.Height);
		// No valid openings
		if (!open)
		{
			return false;
		}

		// No cliff jumping unless we're going after something
		if ((front->floorheight - back->floorheight) > 32.0 && !bot.enemy)
		{
			return false;
		}

		diffheight = open->bottom/*back->floorheight*/ - front->floorheight;
		
		if (diffheight > 0.0)
		{
			if (diffheight > 48.0)
			{
/*				if (front->SSpecial == ThrustThingZ || front->springpadzone)
				{
					return true;
				}
				else*/
					return false;
			}
			else if (diffheight <= 48.0 && diffheight >= 24.0)
			{
				bot.player.Buttons |= BT_JUMP;
			}
		}
		return true;
	}

	th = Actor(in->Thing);

	if (th == botmo)
		return true;

	if (th.bSolid)
		return false;
/*
	fixed_t diffheight = (th->z + th->height) - shootthing->z;

	if (diffheight > 0)
	{
		if (diffheight <= 48*FRACUNIT && diffheight >= 24*FRACUNIT)
		{
			bot->player->cmd.ucmd.buttons |= BT_JUMP;
			return true;
		}
		else if (diffheight <= 24*FRACUNIT)
			return true;
		else
			return false;
				
	}
*/
	return true;
}

botinfo_t botinfo[NUMTOTALBOTS] =
{
	{
		"botf1",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\botf1\\color\\0\\class\\0\\model\\\\skin\\"
	},
	{
		"botf2",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\botf2\\color\\1\\class\\0\\model\\\\skin\\"
	},
	{
		"botf3",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\botf3\\color\\2\\class\\0\\model\\\\skin\\"
	},
	{
		"botf4",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\botf4\\color\\3\\class\\0\\model\\\\skin\\"
	},
	{
		"botf5",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\botf5\\color\\4\\class\\0\\model\\\\skin\\"
	},
	{
		"botf6",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\botf6\\color\\5\\class\\0\\model\\\\skin\\"
	},
	{
		"botf7",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\botf7\\color\\6\\class\\0\\model\\\\skin\\"
	},
	{
		"botf8",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\botf8\\color\\7\\class\\0\\model\\\\skin\\"
	},
	{
		"botc1",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\botc1\\color\\0\\class\\1\\model\\\\skin\\"
	},
	{
		"botc2",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\botc2\\color\\1\\class\\1\\model\\\\skin\\"
	},
	{
		"botc3",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\botc3\\color\\2\\class\\1\\model\\\\skin\\"
	},
	{
		"botc4",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\botc4\\color\\3\\class\\1\\model\\\\skin\\"
	},
	{
		"botc5",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\botc5\\color\\4\\class\\1\\model\\\\skin\\"
	},
	{
		"botc6",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\botc6\\color\\5\\class\\1\\model\\\\skin\\"
	},
	{
		"botc7",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\botc7\\color\\6\\class\\1\\model\\\\skin\\"
	},
	{
		"botc8",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\botc8\\color\\7\\class\\1\\model\\\\skin\\"
	},
	{
		"botm1",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\botm1\\color\\0\\class\\2\\model\\\\skin\\"
	},
	{
		"botm2",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\botm2\\color\\1\\class\\2\\model\\\\skin\\"
	},
	{
		"botm3",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\botm3\\color\\2\\class\\2\\model\\\\skin\\"
	},
	{
		"botm4",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\botm4\\color\\3\\class\\2\\model\\\\skin\\"
	},
	{
		"botm5",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\botm5\\color\\4\\class\\2\\model\\\\skin\\"
	},
	{
		"botm6",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\botm6\\color\\5\\class\\2\\model\\\\skin\\"
	},
	{
		"botm7",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\botm7\\color\\6\\class\\2\\model\\\\skin\\"
	},
	{
		"botm8",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\botm8\\color\\7\\class\\2\\model\\\\skin\\"
	},
	{
		"both1",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\both1\\color\\0\\class\\3\\model\\\\skin\\"
	},
	{
		"both2",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\both2\\color\\1\\class\\3\\model\\\\skin\\"
	},
	{
		"both3",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\both3\\color\\2\\class\\3\\model\\\\skin\\"
	},
	{
		"both4",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\both4\\color\\3\\class\\3\\model\\\\skin\\"
	},
	{
		"both5",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\both5\\color\\4\\class\\3\\model\\\\skin\\"
	},
	{
		"both6",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\both6\\color\\5\\class\\3\\model\\\\skin\\"
	},
	{
		"both7",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\both7\\color\\6\\class\\3\\model\\\\skin\\"
	},
	{
		"both8",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\both8\\color\\7\\class\\3\\model\\\\skin\\"
	},
	{
		"botd1",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\botd1\\color\\0\\class\\4\\model\\\\skin\\"
	},
	{
		"botd2",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\botd2\\color\\1\\class\\4\\model\\\\skin\\"
	},
	{
		"botd3",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\botd3\\color\\2\\class\\4\\model\\\\skin\\"
	},
	{
		"botd4",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\botd4\\color\\3\\class\\4\\model\\\\skin\\"
	},
	{
		"botd5",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\botd5\\color\\4\\class\\4\\model\\\\skin\\"
	},
	{
		"botd6",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\botd6\\color\\5\\class\\4\\model\\\\skin\\"
	},
	{
		"botd7",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\botd7\\color\\6\\class\\4\\model\\\\skin\\"
	},
	{
		"botd8",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\botd8\\color\\7\\class\\4\\model\\\\skin\\"
	},
	{
		"botw1",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\botw1\\color\\0\\class\\5\\model\\\\skin\\"
	},
	{
		"botw2",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\botw2\\color\\1\\class\\5\\model\\\\skin\\"
	},
	{
		"botw3",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\botw3\\color\\2\\class\\5\\model\\\\skin\\"
	},
	{
		"botw4",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\botw4\\color\\3\\class\\5\\model\\\\skin\\"
	},
	{
		"botw5",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\botw5\\color\\4\\class\\5\\model\\\\skin\\"
	},
	{
		"botw6",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\botw6\\color\\5\\class\\5\\model\\\\skin\\"
	},
	{
		"botw7",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\botw7\\color\\6\\class\\5\\model\\\\skin\\"
	},
	{
		"botw8",
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		bsk_medium,
		"\\name\\botw8\\color\\7\\class\\5\\model\\\\skin\\"
	},

};

//**************************************************************************
//
//  $Log$
//  Revision 1.3  2005/05/12 20:57:09  firebrand_kh
//  Fixed the declaration for dangerous sectors for the bots
//
//  Revision 1.2  2004/11/17 16:07:53  firebrand_kh
//  *** empty log message ***
//
//  Revision 1.1  2004/11/16 13:33:23  dj_jl
//  Initial import.
//
//  Revision 1.12  2003/11/12 16:50:47  dj_jl
//  Changed player structure into a class
//
//  Revision 1.11  2003/07/11 16:47:39  dj_jl
//  Made array of players with pointers
//
//  Revision 1.10  2002/11/02 08:24:10  dj_jl
//  New style classes.
//
//  Revision 1.9  2002/09/07 16:28:26  dj_jl
//  Added Level class.
//
//  Revision 1.8  2002/07/13 08:01:49  dj_jl
//  Moved some functions to the Entity class.
//
//  Revision 1.7  2002/04/11 16:49:50  dj_jl
//  Tick function.
//
//  Revision 1.6  2002/03/28 18:15:34  dj_jl
//  Renamed mo in player_t to MO.
//
//  Revision 1.5  2002/03/09 17:57:02  dj_jl
//  Got rid of function pointers, made most of the physics functions native.
//
//  Revision 1.4  2002/02/26 17:49:48  dj_jl
//  no message
//
//  Revision 1.3  2002/02/22 18:00:20  dj_jl
//  A lots of the renaming, beautification.
//
//  Revision 1.2  2002/02/14 19:20:58  dj_jl
//  Renamed Entity properties to new naming style
//
//  Revision 1.1  2002/02/06 17:35:13  dj_jl
//  Added Hexen bots.
//
//**************************************************************************
