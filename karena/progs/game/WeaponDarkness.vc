//**************************************************************************
//**
//**	    ##   ##   ####   ######     ##    ##     ##
//**	    ##  ##   ##  ##  ##   ##  ##  ##   ### ###
//**	    ## ##   ##    ## ##   ## ##    ##   #####
//**	    ######  ##    ## #####   ########   #####
//**	    ## ###   ##  ##  ######  ##    ##  ### ###
//**	    ##   ##   ####   ##  ### ##    ## ##     ##
//**
//**		##    ######    ##### ###   ##    ##
//**	      ##  ##  ##   ##  #####  ####  ##  ##  ##
//**	     ##    ## ##   ## ##      ##### ## ##    ##
//**	     ######## #####   #####   ## ##### ########
//**	     ##    ## ######  ##      ##  #### ##    ##
//**	     ##    ## ##  ###  #####  ##   ### ##    ##
//**
//**    $Id$
//**
//**    Copyright (C) 2004-2006 Korax Heritage Team
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class WeaponDarkness : WeaponFighterHammer;

//============================================================================
//
//  A_FHammerAttack
//
//============================================================================

void A_FHammerAttack()
{
	Actor pmo = Actor(Owner);
	int damage;
	float power;
	int i;
	TAVec angles;
	TVec vforward;

	bThrowHammer = true;

	damage = 74; //60 + (P_Random() & 63);
	if (str_mod)
	{
		if(!active_damage)
		{
			damage = damage * Player(Owner.Player).strength / 10;
		}
		else
		{
			damage = (damage * Player(Owner.Player).strength / 10) * ftoi(3.1415);
		}
	}
	power = 10.0;
	for (i = 0; i < 16; i++)
	{
		angles = pmo.Angles;
		angles.yaw = AngleMod360(angles.yaw + itof(i) * (45.0 / 32.0));
		vforward = pmo.AimLineAttack(angles, HammerRange);
		if (pmo.linetarget)
		{
			if (pmo.LineAttack(vforward, HammerRange, damage, HammerPuff))
			{
				pmo.PlaySound('FighterHammerMiss', CHAN_WEAPON);
			}
			Player(Owner.Player).AdjustPlayerAngle();
			if (pmo.linetarget.bCountKill || pmo.linetarget.bIsPlayer)
			{
				pmo.linetarget.Thrust(angles.yaw, power);
			}
			break;
		}
		angles = pmo.Angles;
		angles.yaw = AngleMod360(angles.yaw - itof(i) * (45.0 / 32.0));
		vforward = pmo.AimLineAttack(angles, HammerRange);
		if (pmo.linetarget)
		{
			if (pmo.LineAttack(vforward, HammerRange, damage, HammerPuff))
			{
				pmo.PlaySound('FighterHammerMiss', CHAN_WEAPON);
			}
			Player(Owner.Player).AdjustPlayerAngle();
			if (pmo.linetarget.bCountKill || pmo.linetarget.bIsPlayer)
			{
				pmo.linetarget.Thrust(angles.yaw, power);
			}
			break;
		}
	}
	if (i == 16)
	{
		// didn't find any targets in meleerange, so set to throw out a hammer
		angles = pmo.Angles;
		vforward = pmo.AimLineAttack(angles, HammerRange);
		if (pmo.LineAttack(vforward, HammerRange, damage, HammerPuff))
		{
			pmo.PlaySound('FighterHammerMiss', CHAN_WEAPON);
		}
	}

	return;
}

//============================================================================
//
//  A_FHammerThrow
//
//============================================================================

void A_FHammerThrow()
{
/*	Actor pmo;
	TVec org;

	pmo = Player.MO;
	if (!bThrowHammer)
	{
		return;
	}
	org = pmo.Origin;
	org.z = pmo.Origin.z + 4.0 * 8.0 - tan(pmo.Angles.pitch);
	org.z -= pmo.FloorClip;
	UseWeaponMana();
//	Player.SpawnPlayerMissile(DarknessMissile);
	Actor mo = Spawn(DarknessMissile, org);*/
//OLD BEHAVIOR UP
	TAVec angles;
	TVec vforward;
	TVec org;
	PlayerPawn pmo;

	pmo = PlayerPawn(Owner);

	angles = pmo.Angles;
	vforward = pmo.AimLineAttack(angles, 16.0 * 64.0);
	if (!pmo.linetarget)
	{
		angles.yaw = AngleMod360(angles.yaw + 45.0 / 8.0);
		vforward = pmo.AimLineAttack(angles, 16.0 * 64.0);
		if (!pmo.linetarget)
		{
			angles.yaw = AngleMod360(angles.yaw - 45.0 / 4.0);
			vforward = pmo.AimLineAttack(angles, 16.0 * 64.0);
			if (!pmo.linetarget)
			{
				angles.yaw = pmo.Angles.yaw;
				AngleVector(&angles, &vforward);
			}
		}
	}
	org = pmo.Origin;
	org.z = pmo.Origin.z + 4.0 * 8.0 - tan(pmo.Angles.pitch);
	org.z -= pmo.FloorClip;
	
	Actor mo = HexenLevelInfo(Level).Spawn(DarknessMissile, org);
	mo.Target = pmo;
	mo.Angles = angles;

	mo.Speed = 128.0;//10.0;
	mo.bMissile = true;
	mo.bRip = true;
	vforward.z = 0.0;

	mo.Velocity = vforward * mo.Speed;
	mo.TryMove(mo.Origin + mo.Velocity);

	DarknessMissile dm = DarknessMissile(mo);
	dm.InitMe(pmo);
	
	UseWeaponMana();
}

/*THIRD*/
defaultproperties
{
	Mana = HexenDefs::MANA_2;
	manause = 5;
	UpState = S_FHAMMERUP;
	DownState = S_FHAMMERDOWN;
	ReadyState = S_FHAMMERREADY;
	AttackState = S_FHAMMERATK_1;
	HoldAttackState = S_FHAMMERATK_1;
	PSpriteSY = -10.0;
	HammerRange = MELEERANGE * 3.0;
	wis_mod = false;
	int_mod = false;
	dex_mod = true;
	str_mod = true;
	PickUpMessage = "WEAPON OF DARKNESS";

	deathmsgi = 2;
}
