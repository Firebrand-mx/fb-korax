//**************************************************************************
//**
//**	    ##   ##   ####   ######     ##    ##     ##
//**	    ##  ##   ##  ##  ##   ##  ##  ##   ### ###
//**	    ## ##   ##    ## ##   ## ##    ##   #####
//**	    ######  ##    ## #####   ########   #####
//**	    ## ###   ##  ##  ######  ##    ##  ### ###
//**	    ##   ##   ####   ##  ### ##    ## ##     ##
//**
//**		##    ######    ##### ###   ##    ##
//**	      ##  ##  ##   ##  #####  ####  ##  ##  ##
//**	     ##    ## ##   ## ##      ##### ## ##    ##
//**	     ######## #####   #####   ## ##### ########
//**	     ##    ## ######  ##      ##  #### ##    ##
//**	     ##    ## ##  ###  #####  ##   ### ##    ##
//**
//**    $Id$
//**
//**    Copyright (C) 2004-2006 Korax Heritage Team
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class WeaponFighterSword : KArenaWeapon;

//============================================================================
//
//  A_KArenaFSwordAttack
//
//============================================================================

final void A_KArenaFSwordAttack() self(KArenaPlayerPawn)
{
	EntityEx mo;
	if (!bIsPlayer)
	{
		return;
	}
	KArenaWeapon Wpn = KArenaWeapon(PlayerEx(Player).ReadyWeapon);

	Wpn.UseWeaponMana();
	mo = KArenaPlayerPawn(self).SpawnPlayerMissileAngleXYZ_2(Wpn, Origin + vector(0.0, 0.0, -10.0),
		FighterSwordMissile, AngleMod360(Angles.yaw + 45.0 / 4.0));
	if (mo)
	{
		Wpn.ApplyDamageModifiers(mo.MissileDamage);
	}
	mo = KArenaPlayerPawn(self).SpawnPlayerMissileAngleXYZ_2(Wpn, Origin + vector(0.0, 0.0, -5.0),
		FighterSwordMissile, AngleMod360(Angles.yaw + 45.0 / 8.0));
	if (mo)
	{
		Wpn.ApplyDamageModifiers(mo.MissileDamage);
	}
	mo = KArenaPlayerPawn(self).SpawnPlayerMissileAngleXYZ_2(Wpn, Origin, FighterSwordMissile,
		Angles.yaw);
	if (mo)
	{
		Wpn.ApplyDamageModifiers(mo.MissileDamage);
	}
	mo = KArenaPlayerPawn(self).SpawnPlayerMissileAngleXYZ_2(Wpn, Origin + vector(0.0, 0.0, 5.0),
		FighterSwordMissile, AngleMod360(Angles.yaw - 45.0 / 8.0));
	if (mo)
	{
		Wpn.ApplyDamageModifiers(mo.MissileDamage);
	}
	mo = KArenaPlayerPawn(self).SpawnPlayerMissileAngleXYZ_2(Wpn, Origin + vector(0.0, 0.0, 10.0),
		FighterSwordMissile, AngleMod360(Angles.yaw - 45.0 / 4.0));
	if (mo)
	{
		Wpn.ApplyDamageModifiers(mo.MissileDamage);
	}
	PlaySound('FighterSwordFire', CHAN_WEAPON);
}

states
{
Ready:
	FSRD AAAABBBBCCCC 1 Bright A_WeaponReady
	Loop
Deselect:
	FSRD A 1 Bright A_Lower
	Loop
Select:
	FSRD A 1 Bright A_Raise
	Loop
Fire:
	FSRD DE 3 Bright Offset(5, 36)
	FSRD F 2 Bright Offset(5, 36)
	FSRD G 3 Bright Offset(5, 36) A_KArenaFSwordAttack
	FSRD HI 2 Bright Offset(5, 36)
	FSRD I 10 Bright Offset(5, 150)
	FSRD A 1 Bright Offset(5, 60)
	FSRD B 1 Bright Offset(5, 55)
	FSRD C 1 Bright Offset(5, 50)
	FSRD A 1 Bright Offset(5, 45)
	FSRD B 1 Bright Offset(5, 40)
	Goto Ready
}

/* EIGHTH */
defaultproperties
{
	Slot = 8;
	SelectionOrder = 100;
	AmmoType1 = Mana1;
	AmmoType2 = Mana2;
	AmmoType3 = ItemManaRed;
	AmmoUse1 = 100;
	AmmoUse2 = 100;
	AmmoUse3 = 100;
	PSpriteSY = 10.0;
	BotCombatDist = 256.0 + MISSILERANGE;
	wis_mod = true;
	int_mod = false;
	dex_mod = true;
	str_mod = false;
	bBotMelee = false;
	bBotProjectileMedium = true;
	bBotProjectile = true;
	bBotProjectile = true;
	//bFireDamage = false;
	PickupMessage = "QUIETUS";
	refire_tics = 28.0;
	fire_tics = 11.0;
	HitObituary = "$ob_quietus";
	Obituary = "$ob_quietus";
}
