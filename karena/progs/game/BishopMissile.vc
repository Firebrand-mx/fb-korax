//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class BishopMissile : Projectile;

int WeaveXY;
int WeaveZ;

//==========================================================================
//
//  InflictorModifyDamage
//
//==========================================================================

int InflictorModifyDamage(Actor victim, Actor source, int damage)
{
	// Bishops are just too nasty
	return damage >> 1;
}

//==========================================================================
//
//	A_BishopMissileWeave
//
//==========================================================================

void A_BishopMissileWeave()
{
	float newX, newY;
	float angle;

	angle = AngleMod360(Angles.yaw + 90.0);
	newX = Origin.x - cos(angle) * Level.Game.FloatBobOffsets[WeaveXY] * 2.0;
	newY = Origin.y - sin(angle) * Level.Game.FloatBobOffsets[WeaveXY] * 2.0;
	WeaveXY = (WeaveXY + 2) & 63;
	newX += cos(angle) * Level.Game.FloatBobOffsets[WeaveXY] * 2.0;
	newY += sin(angle) * Level.Game.FloatBobOffsets[WeaveXY] * 2.0;
	TryMove(vector(newX, newY, Origin.z));
	Origin.z -= Level.Game.FloatBobOffsets[WeaveZ];
	WeaveZ = (WeaveZ + 2) & 63;
	Origin.z += Level.Game.FloatBobOffsets[WeaveZ];
}

//==========================================================================
//
//	A_BishopMissileSeek
//
//==========================================================================

void A_BishopMissileSeek()
{
	SeekerMissile(2.0, 3.0);
}

__states__
{
	S_BISHFX1_1('BPFX', 0 | FF_FULLBRIGHT, 1.0 / 35.0, S_BISHFX1_2) { A_BishopMissileWeave(); }
	S_BISHFX1_2('BPFX', 1 | FF_FULLBRIGHT, 1.0 / 35.0, S_BISHFX1_3) { A_BishopMissileWeave(); }
	S_BISHFX1_3('BPFX', 0 | FF_FULLBRIGHT, 1.0 / 35.0, S_BISHFX1_4) { A_BishopMissileWeave(); }
	S_BISHFX1_4('BPFX', 1 | FF_FULLBRIGHT, 1.0 / 35.0, S_BISHFX1_5) { A_BishopMissileWeave(); }
	S_BISHFX1_5('BPFX', 1 | FF_FULLBRIGHT, 0.0 / 35.0, S_BISHFX1_1) { A_BishopMissileSeek(); }
	S_BISHFXI1_1('BPFX', 2 | FF_FULLBRIGHT, 4.0 / 35.0, S_BISHFXI1_2) { }
	S_BISHFXI1_2('BPFX', 3 | FF_FULLBRIGHT, 4.0 / 35.0, S_BISHFXI1_3) { }
	S_BISHFXI1_3('BPFX', 4 | FF_FULLBRIGHT, 4.0 / 35.0, S_BISHFXI1_4) { }
	S_BISHFXI1_4('BPFX', 5 | FF_FULLBRIGHT, 4.0 / 35.0, S_BISHFXI1_5) { }
	S_BISHFXI1_5('BPFX', 6 | FF_FULLBRIGHT, 3.0 / 35.0, S_BISHFXI1_6) { }
	S_BISHFXI1_6('BPFX', 7 | FF_FULLBRIGHT, 3.0 / 35.0, none) { }
}

defaultproperties
{
	Radius = 10.0;
	Height = 6.0;
	Speed = 350.0;
	MissileDamage = 1;
	bSeekerMissile = true;
	bActivateImpact = false;
	bActivatePCross = false;
	IdleState = S_BISHFX1_1;
	DeathState = S_BISHFXI1_1;
	DeathSound = 'BishopMissileExplode';
	Effects = HexenDefs::EF_DL_GREEN;
	WeaveXY = 0;
	WeaveZ = 16;

	//[CW]
	deathmsgi[1] = 56;
}

//**************************************************************************
//
//  $Log$
//  Revision 1.5  2006/03/12 19:37:08  dj_jl
//  States as objects, added state variable type.
//
//  Revision 1.4  2006/02/17 19:17:50  dj_jl
//  Moved common defs to classes.
//
//  Revision 1.3  2006/02/15 23:37:45  dj_jl
//  Moved all server progs global variables to classes.
//
//  Revision 1.2  2005/11/30 23:53:37  dj_jl
//  Switch statement requires integer.
//
//  Revision 1.1  2004/11/16 13:33:20  dj_jl
//  Initial import.
//
//  Revision 1.1  2002/10/26 16:32:26  dj_jl
//  New style of defining classes.
//
//**************************************************************************
