//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************
//
//	!!!! UNUSED !!!!
//
//**************************************************************************

class MageStaffFX : Projectile;

int WeaveXY;
int WeaveZ;

//==========================================================================
//
//  A_MStaffWeave
//
//==========================================================================

final void A_MStaffWeave()
{
	float newX, newY;
	float angle;

	angle = AngleMod360(Angles.yaw + 90.0);
	newX = Origin.x - cos(angle) * Level.Game.FloatBobOffsets[WeaveXY] * 4.0;
	newY = Origin.y - sin(angle) * Level.Game.FloatBobOffsets[WeaveXY] * 4.0;
	WeaveXY = (WeaveXY + 6) & 63;
	newX += cos(angle) * Level.Game.FloatBobOffsets[WeaveXY] * 4.0;
	newY += sin(angle) * Level.Game.FloatBobOffsets[WeaveXY] * 4.0;
	TryMove(vector(newX, newY, Origin.z));
	Origin.z -= Level.Game.FloatBobOffsets[WeaveZ] * 2.0;
	WeaveZ = (WeaveZ + 3) & 63;
	Origin.z += Level.Game.FloatBobOffsets[WeaveZ] * 2.0;
	if (Origin.z <= FloorZ)
	{
		Origin.z = FloorZ + 1.0;
	}
}

__states__
{
	S_MSTAFF_FX1_1('MSP1', 0 | FF_FULLBRIGHT, 3.0 / 35.0, S_MSTAFF_FX1_2) = A_MStaffWeave
	S_MSTAFF_FX1_2('MSP1', 1 | FF_FULLBRIGHT, 3.0 / 35.0, S_MSTAFF_FX1_3) = A_MStaffWeave
	S_MSTAFF_FX1_3('MSP1', 2 | FF_FULLBRIGHT, 3.0 / 35.0, S_MSTAFF_FX1_4) = A_MStaffWeave
	S_MSTAFF_FX1_4('MSP1', 3 | FF_FULLBRIGHT, 3.0 / 35.0, S_MSTAFF_FX1_5) = A_MStaffWeave
	S_MSTAFF_FX1_5('MSP1', 4 | FF_FULLBRIGHT, 3.0 / 35.0, S_MSTAFF_FX1_6) = A_MStaffWeave
	S_MSTAFF_FX1_6('MSP1', 5 | FF_FULLBRIGHT, 3.0 / 35.0, S_MSTAFF_FX1_1) = A_MStaffWeave
	S_MSTAFF_FX_X1('MSP1', 6 | FF_FULLBRIGHT, 4.0 / 35.0, S_MSTAFF_FX_X2) = none
	S_MSTAFF_FX_X2('MSP1', 7 | FF_FULLBRIGHT, 5.0 / 35.0, S_MSTAFF_FX_X3) = A_Explode
	S_MSTAFF_FX_X3('MSP1', 8 | FF_FULLBRIGHT, 4.0 / 35.0, S_MSTAFF_FX_X4) = none
	S_MSTAFF_FX_X4('MSP1', 9 | FF_FULLBRIGHT, 5.0 / 35.0, S_MSTAFF_FX_X5) = none
	S_MSTAFF_FX_X5('MSP1', 10 | FF_FULLBRIGHT, 4.0 / 35.0, S_MSTAFF_FX_X6) = none
	S_MSTAFF_FX_X6('MSP1', 11 | FF_FULLBRIGHT, 5.0 / 35.0, S_MSTAFF_FX_X7) = none
	S_MSTAFF_FX_X7('MSP1', 12 | FF_FULLBRIGHT, 4.0 / 35.0, S_MSTAFF_FX_X8) = none
	S_MSTAFF_FX_X8('MSP1', 13 | FF_FULLBRIGHT, 5.0 / 35.0, S_MSTAFF_FX_X9) = none
	S_MSTAFF_FX_X9('MSP1', 14 | FF_FULLBRIGHT, 4.0 / 35.0, S_MSTAFF_FX_X10) = none
	S_MSTAFF_FX_X10('MSP1', 15 | FF_FULLBRIGHT, 4.0 / 35.0, none) = none
}

defaultproperties
{
	Radius = 16.0;
	Height = 8.0;
	Speed = 700.0;
	MissileDamage = 6;
	bRip = true;
	bFireDamage = true;
	IdleState = S_MSTAFF_FX1_1;
	DeathState = S_MSTAFF_FX_X1;
	DeathSound = 'MageStaffExplode';
	Effects = HexenDefs::EF_DL_RED;
}
