//**************************************************************************
//**
//**	    ##   ##   ####   ######     ##    ##     ##
//**	    ##  ##   ##  ##  ##   ##  ##  ##   ### ###
//**	    ## ##   ##    ## ##   ## ##    ##   #####
//**	    ######  ##    ## #####   ########   #####
//**	    ## ###   ##  ##  ######  ##    ##  ### ###
//**	    ##   ##   ####   ##  ### ##    ## ##     ##
//**
//**		##    ######    ##### ###   ##    ##
//**	      ##  ##  ##   ##  #####  ####  ##  ##  ##
//**	     ##    ## ##   ## ##      ##### ## ##    ##
//**	     ######## #####   #####   ## ##### ########
//**	     ##    ## ######  ##      ##  #### ##    ##
//**	     ##    ## ##  ###  #####  ##   ### ##    ##
//**
//**    $Id$
//**
//**    Copyright (C) 2004-2006 Korax Heritage Team
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class WeaponFighterAxe : WeaponEx;

//[KORAX]
//int NoMoreManaState;
float AxeRange;

//==========================================================================
//
//  A_FAxeAttack
//
//==========================================================================

final void A_FAxeAttack()
{
	Actor			pmo = Actor(Owner);
	float			power;
	int				damage;
	int				useMana;
	TAVec			angles;
	TVec			vforward;
	class<Actor>	PuffType;
	EntityEx		AimTarget;

	damage = 50; //40 + (P_Random() & 15) + (P_Random() & 7);
	if (str_mod)
	{
		if(!active_damage)
		{
			damage = damage * Player(Owner.Player).strength / 10;
		}
		else // [FB] PI Damage
		{
			damage = (damage * Player(Owner.Player).strength / 10) * ftoi(3.1415);
		}
	}
	power = 0.0;
	//[KORAX]
/*	if (IsWeaponManaUsable())
	{*/
		damage <<= 1;
		power = 6.0;
		PuffType = AxePuffGlow;
		useMana = 1;
	//[KORAX]
/*	}
	else
	{
		PuffType = AxePuff;
		useMana = 0;
	}*/

	AimTarget = pmo.AimEx(vforward, AxeRange, 45.0 / 16.0, 16, MELEERANGE);
	if (AimTarget)
	{
		VectorAngles(&vforward, &angles);
		if (pmo.LineAttack(vforward, AxeRange, damage, PuffType))
		{
			pmo.PlaySound('FighterHammerMiss', CHAN_WEAPON);
		}
		if (AimTarget.bMonster || AimTarget.bIsPlayer)
		{
			AimTarget.Thrust(angles.yaw, power);
		}
		Player(Owner.Player).AdjustPlayerAngle(AimTarget);
		useMana++;
	}
	else
	{
		// didn't find any creatures, so try to strike any walls
		if (pmo.LineAttack(vforward, MELEERANGE, damage, PuffType))
		{
			pmo.PlaySound('FighterHammerMiss', CHAN_WEAPON);
		}
	}

	//[KORAX]
	if (useMana == 2)
	{
		UseWeaponMana();
	//[KORAX]
/*		if (!IsWeaponManaUsable())
		{
			SetState(NoMoreManaState);
		}*/
	}
}

__states__
{
	//[KORAX]
/*	S_FAXEREADY('FAXE', 0, 1.0 / 35.0, S_FAXEREADY) = A_WeaponReady
	S_FAXEDOWN('FAXE', 0, 1.0 / 35.0, S_FAXEDOWN) = A_Lower
	S_FAXEUP('FAXE', 0, 1.0 / 35.0, S_FAXEUP) = A_Raise
	S_FAXEATK_1('FAXE', 1, 4.0 / 35.0, S_FAXEATK_2, 15, 32) = none
	S_FAXEATK_2('FAXE', 2, 3.0 / 35.0, S_FAXEATK_3, 15, 32) = none
	S_FAXEATK_3('FAXE', 3, 2.0 / 35.0, S_FAXEATK_4, 15, 32) = none
	S_FAXEATK_4('FAXE', 3, 1.0 / 35.0, S_FAXEATK_5, -5, 70) = A_FAxeAttack
	S_FAXEATK_5('FAXE', 3, 2.0 / 35.0, S_FAXEATK_6, -25, 90) = none
	S_FAXEATK_6('FAXE', 4, 1.0 / 35.0, S_FAXEATK_7, 15, 32) = none
	S_FAXEATK_7('FAXE', 4, 2.0 / 35.0, S_FAXEATK_8, 10, 54) = none
	S_FAXEATK_8('FAXE', 4, 7.0 / 35.0, S_FAXEATK_9, 10, 150) = none
	S_FAXEATK_9('FAXE', 0, 1.0 / 35.0, S_FAXEATK_10, 0, 60) = A_ReFire
	S_FAXEATK_10('FAXE', 0, 1.0 / 35.0, S_FAXEATK_11, 0, 52) = none
	S_FAXEATK_11('FAXE', 0, 1.0 / 35.0, S_FAXEATK_12, 0, 44) = none
	S_FAXEATK_12('FAXE', 0, 1.0 / 35.0, S_FAXEATK_13, 0, 36) = none
	S_FAXEATK_13('FAXE', 0, 1.0 / 35.0, S_FAXEREADY) = none
	*/
	//[KORAX]
	S_FAXEREADY_G('FAXE', 11, 1.0 / 35.0, S_FAXEREADY_G1) = A_WeaponReady
	S_FAXEREADY_G1('FAXE', 11, 1.0 / 35.0, S_FAXEREADY_G2) = A_WeaponReady
	S_FAXEREADY_G2('FAXE', 11, 1.0 / 35.0, S_FAXEREADY_G3) = A_WeaponReady
	S_FAXEREADY_G3('FAXE', 12, 1.0 / 35.0, S_FAXEREADY_G4) = A_WeaponReady
	S_FAXEREADY_G4('FAXE', 12, 1.0 / 35.0, S_FAXEREADY_G5) = A_WeaponReady
	S_FAXEREADY_G5('FAXE', 12, 1.0 / 35.0, S_FAXEREADY_G) = A_WeaponReady
	S_FAXEDOWN_G('FAXE', 11, 1.0 / 35.0, S_FAXEDOWN_G) = A_Lower
	S_FAXEUP_G('FAXE', 11, 1.0 / 35.0, S_FAXEUP_G) = A_Raise
	S_FAXEATK_G1('FAXE', 13, 4.0 / 35.0, S_FAXEATK_G2, 15, 32) = none
	S_FAXEATK_G2('FAXE', 14, 3.0 / 35.0, S_FAXEATK_G3, 15, 32) = none
	S_FAXEATK_G3('FAXE', 15, 2.0 / 35.0, S_FAXEATK_G4, 15, 32) = none
	S_FAXEATK_G4('FAXE', 15, 1.0 / 35.0, S_FAXEATK_G5, -5, 70) = A_FAxeAttack
	S_FAXEATK_G5('FAXE', 15, 2.0 / 35.0, S_FAXEATK_G6, -25, 90) = none
	S_FAXEATK_G6('FAXE', 16, 1.0 / 35.0, S_FAXEATK_G7, 15, 32) = none
	S_FAXEATK_G7('FAXE', 16, 2.0 / 35.0, S_FAXEATK_G8, 10, 54) = none
	S_FAXEATK_G8('FAXE', 16, 7.0 / 35.0, S_FAXEATK_G9, 10, 150) = none
	S_FAXEATK_G9('FAXE', 0, 1.0 / 35.0, S_FAXEATK_G10, 0, 60) = A_ReFire
	S_FAXEATK_G10('FAXE', 0, 1.0 / 35.0, S_FAXEATK_G11, 0, 52) = none
	S_FAXEATK_G11('FAXE', 0, 1.0 / 35.0, S_FAXEATK_G12, 0, 44) = none
	S_FAXEATK_G12('FAXE', 0, 1.0 / 35.0, S_FAXEATK_G13, 0, 36) = none
	S_FAXEATK_G13('FAXE', 0, 1.0 / 35.0, S_FAXEREADY_G) = none
}

//[KORAX]
/*
//==========================================================================
//
//	GetUpState
//
//==========================================================================

int GetUpState()
{
	if (IsWeaponManaUsable())
	{
		return S_FAXEUP_G;
	}
	else
	{
		return UpState;
	}
}

//==========================================================================
//
//	GetDownState
//
//==========================================================================

int GetDownState()
{
	if (IsWeaponManaUsable())
	{
		return S_FAXEDOWN_G;
	}
	else
	{
		return DownState;
	}
}

//==========================================================================
//
//	GetReadyState
//
//==========================================================================

int GetReadyState()
{
	if (IsWeaponManaUsable())
	{
		return S_FAXEREADY_G;
	}
	else
	{
		return ReadyState;
	}
}

//==========================================================================
//
//	GetAttackState
//
//==========================================================================

int GetAttackState()
{
	if (IsWeaponManaUsable())
	{
		// Glowing axe
		return S_FAXEATK_G1;
	}
	else
	{
		return Player.Refire ? HoldAttackState : AttackState;
	}
}

//==========================================================================
//
//	GotMana
//
//==========================================================================

void GotMana(int InMana)
{
	if (InMana == HexenDefs::MANA_1 && IsWeaponManaUsable())
	{
		Owner.Player.SetViewState(ps_weapon, S_FAXEREADY_G);
	}
}
*/
//[KORAX]

/*SECOND*/
defaultproperties
{
	WeaponType = HexenDefs::WP_SECOND;
	Slot = 2;
	SelectionOrder = 6100;
	AmmoType1 = ItemManaBlue;
	AmmoUse1 = 5;
	//needsnomana = true;
	UpState = S_FAXEUP_G;
	DownState = S_FAXEDOWN_G;
	ReadyState = S_FAXEREADY_G;
	AttackState = S_FAXEATK_G1;
	HoldAttackState = S_FAXEATK_G1;
//	NoMoreManaState = S_FAXEATK_5;
	PSpriteSY = -12.0;
	AxeRange = 9.0 * MELEERANGE / 4.0;
	wis_mod = true;
	int_mod = false;
	dex_mod = true;
	str_mod = true;
	PickUpMessage = "TIMON'S AXE";
	Obituary = "$ob_faxe";
}
