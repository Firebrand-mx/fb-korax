//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class Pickup : Actor
	abstract;

//==========================================================================
//
//  TouchSpecial
//
//==========================================================================

void TouchSpecial(Actor Toucher)
{
	PlayerPawn P;
	bool m1;
	bool m2;
	bool m3;
	bool mm1;
	bool mm2;
	bool mm3;
	bool mmm1;
	bool mmm2;
	bool mmm3;


	if (!Toucher.bPickUp)
	{
		// Can't be picked up by toucher
		return;
	}
	if (Toucher.Health <= 0)
	{
		// Toucher is dead
		return;
	}
	P = PlayerPawn(Toucher);
	if (!P)
	{
		//	Shouldn't happen
		return;
	}
	switch (Class)
	{
		// Items
	case ItemHealingBottle:
		if (!P.Player.GiveBody(10))
		{
			return;
		}
		cprint(P.Player, TXT_ITEMHEALTH);
		break;
	case ArtifactHealthFlask:
		if (!P.Player.GiveBody(25))
		{
			return;
		}
		cprint(P.Player, TXT_ARTIHEALTH);
		break;
	case ArtifactSuperHeal:
		if (!P.Player.GiveBody(100))
		{
			return;
		}
		cprint(P.Player, TXT_ARTISUPERHEALTH);
		break;
	case ItemBigManaBlue:
		m1 = P.Player.GiveMana(MANA_1, 30);
		if (!m1)
		{
			return;
		}
		cprint(P.Player, TXT_BMANA_1);
		break;
	case ItemBigManaGreen:
		m2 = P.Player.GiveMana(MANA_2, 30);
		if (!m2)
		{
			return;
		}
		cprint(P.Player, TXT_BMANA_2);
		break;
	case ItemBigManaRed:
		m3 = P.Player.GiveMana(MANA_3, 30);
		if (!m3)
		{
			return;
		}
		cprint(P.Player, TXT_BMANA_3);
		break;
	case CombinedMana:
		mm1 = P.Player.GiveMana(MANA_1, 40);
		mm2 = P.Player.GiveMana(MANA_2, 40);
		mm3 = P.Player.GiveMana(MANA_3, 40);

		if (!mm1 && !mm2 && !mm3)
		{
			return;
		}
		cprint(P.Player, TXT_MANA_ALL);
		break;
	case ArtifactBoostMana:
		mmm1 = P.Player.GiveMana(MANA_1, 50);
		mmm2 = P.Player.GiveMana(MANA_2, 50);
		mmm3 = P.Player.GiveMana(MANA_3, 50);

		if (!mmm1 && !mmm2 && !mmm3)
		{
			return;
		}
		cprint(P.Player, TXT_ARTIBOOSTMANA);
		break;
	}
	if (Special)
	{
		ExecuteLineSpecial(Special, &Args[0], NULL, 0, P);
		Special = 0;
	}
	if (deathmatch && !bDropped)
	{
		HideSpecial();
	}
	else
	{
		Remove();
	}
	P.Player.BonusFlash += BONUSADD;
	P.PlaySound('PickupItem', CHAN_ITEM);
}

//==========================================================================
//
//  A_RestoreSpecialThing1
//
//  Make a special thing visible again.
//
//==========================================================================

void A_RestoreSpecialThing1(void)
{
	bHidden = false;
	PlaySound('Respawn', CHAN_VOICE);
}

//==========================================================================
//
//  A_RestoreSpecialThing2
//
//==========================================================================

void A_RestoreSpecialThing2(void)
{
	bSpecial = true;
	SetState(IdleState);
}

__states__
{
	//	Hide for 40 secs
	S_HIDESPECIAL1('ACLO', 4, 1400.0 / 35.0, S_HIDESPECIAL2) { }
	S_HIDESPECIAL2('ACLO', 0, 4.0 / 35.0, S_HIDESPECIAL3) { A_RestoreSpecialThing1(); }
	S_HIDESPECIAL3('ACLO', 1, 4.0 / 35.0, S_HIDESPECIAL4) { }
	S_HIDESPECIAL4('ACLO', 0, 4.0 / 35.0, S_HIDESPECIAL5) { }
	S_HIDESPECIAL5('ACLO', 1, 4.0 / 35.0, S_HIDESPECIAL6) { }
	S_HIDESPECIAL6('ACLO', 2, 4.0 / 35.0, S_HIDESPECIAL7) { }
	S_HIDESPECIAL7('ACLO', 1, 4.0 / 35.0, S_HIDESPECIAL8) { }
	S_HIDESPECIAL8('ACLO', 2, 4.0 / 35.0, S_HIDESPECIAL9) { }
	S_HIDESPECIAL9('ACLO', 3, 4.0 / 35.0, S_HIDESPECIAL10) { }
	S_HIDESPECIAL10('ACLO', 2, 4.0 / 35.0, S_HIDESPECIAL11) { }
	S_HIDESPECIAL11('ACLO', 3, 4.0 / 35.0, S_NULL) { A_RestoreSpecialThing2(); }
}

//==========================================================================
//
//  HideSpecial
//
//==========================================================================

void HideSpecial(void)
{
	bSpecial = false;
	bHidden = true;
	SetState(S_HIDESPECIAL1);
}

defaultproperties
{
	Health = 1000;
	Radius = 20.0;
	Height = 32.0;
	Mass = 100.0;
	bSpecial = true;
	bNoPassMobj = true;
}

//**************************************************************************
//
//  $Log$
//  Revision 1.3  2005/09/15 16:29:05  firebrand_kh
//  Increase amount of mana given by pickups
//
//  Revision 1.2  2005/02/02 22:47:43  firebrand_kh
//  Added the new big mana items & combined mana item
//
//  Revision 1.1  2004/11/16 13:33:22  dj_jl
//  Initial import.
//
//  Revision 1.2  2003/11/12 16:50:47  dj_jl
//  Changed player structure into a class
//
//  Revision 1.1  2002/10/26 16:32:26  dj_jl
//  New style of defining classes.
//
//**************************************************************************
