//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class WeaponWitchavenLongBow : Weapon;

//==========================================================================
//
//  A_WBowAttack1
//
//==========================================================================

void A_WBowAttack1(void)
{
	int FOV, i;
	// Check for the player pushing the attack button to make a zoom
	if ((FOV >= 45) && (Player.Buttons & BT_ATTACK))
	{
		for (i = 90; i >= 45; i--)
		{
			FOV = i;
			SetFOV(FOV);
		}		
	}
}

//==========================================================================
//
//  A_WBowAttack2
//
//==========================================================================

void A_WBowAttack2(void)
{
	Actor mo;

	UseWeaponMana();

	//A_CalculateFOV();
	mo = Player.SpawnPlayerMissile(WitchavenArrow);
	if (mo && int_mod)
	{
		mo.MissileDamage = mo.MissileDamage * Player.intelligence / 10;
	}
	Player.MO.PlaySound('FighterHammerContinuous', CHAN_WEAPON);
	SetFOV(90);
}

__states__
{
	S_WBOWREADY('WBOW', 0, 1.0 / 35.0, S_WBOWREADY) { A_WeaponReady(); }
	S_WBOWDOWN('WBOW', 0, 1.0 / 35.0, S_WBOWDOWN) { A_Lower(); }
	S_WBOWUP('WBOW', 0, 1.0 / 35.0, S_WBOWUP) { A_Raise(); }
	S_WBOWATK_1('WBOW', 1, 2.0 / 35.0, S_WBOWATK_2) { }
	S_WBOWATK_2('WBOW', 2, 2.0 / 35.0, S_WBOWATK_2_2) { A_WBowAttack1(); }
	S_WBOWATK_2_2('WBOW', 2, 2.0 / 35.0, S_WBOWATK_3) { A_ReFire();}
	S_WBOWATK_3('WBOW', 3, 2.0 / 35.0, S_WBOWATK_4) { }
	S_WBOWATK_4('WBOW', 4, 2.0 / 35.0, S_WBOWATK_5) { }
	S_WBOWATK_5('WBOW', 5, 2.0 / 35.0, S_WBOWATK_6) { A_WBowAttack2(); }
	S_WBOWATK_6('WBOW', 6, 2.0 / 35.0, S_WBOWATK_7) { }
	S_WBOWATK_7('WBOW', 7, 2.0 / 35.0, S_WBOWATK_8) { }
	S_WBOWATK_8('WBOW', 8, 2.0 / 35.0, S_WBOWATK_9) { }
	S_WBOWATK_9('WBOW', 9, 2.0 / 35.0, S_WBOWREADY) { }
}

/*SEVENTH*/
defaultproperties
{
	Mana = MANA_3;
	manause = 15;
	UpState = S_WBOWUP;
	DownState = S_WBOWDOWN;
	ReadyState = S_WBOWREADY;
	AttackState = S_WBOWATK_1;
	HoldAttackState = S_WBOWATK_1;
	//PSpriteSY = 20.0;
	wis_mod = true;
	int_mod = true;
	dex_mod = false;
	str_mod = false;
	PickUpMessage = "LONG BOW";
}

//**************************************************************************
//
//  Revision 1.2  2003/11/12 16:50:47  dj_jl
//  Changed player structure into a class
//
//  Revision 1.1  2002/10/26 16:32:27  dj_jl
//  New style of defining classes.
//
//**************************************************************************
