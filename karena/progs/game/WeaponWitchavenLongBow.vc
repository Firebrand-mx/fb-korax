//**************************************************************************
//**
//**	    ##   ##   ####   ######     ##    ##     ##
//**	    ##  ##   ##  ##  ##   ##  ##  ##   ### ###
//**	    ## ##   ##    ## ##   ## ##    ##   #####
//**	    ######  ##    ## #####   ########   #####
//**	    ## ###   ##  ##  ######  ##    ##  ### ###
//**	    ##   ##   ####   ##  ### ##    ## ##     ##
//**
//**		##    ######    ##### ###   ##    ##
//**	      ##  ##  ##   ##  #####  ####  ##  ##  ##
//**	     ##    ## ##   ## ##      ##### ## ##    ##
//**	     ######## #####   #####   ## ##### ########
//**	     ##    ## ######  ##      ##  #### ##    ##
//**	     ##    ## ##  ###  #####  ##   ### ##    ##
//**
//**    $Id$
//**
//**    Copyright (C) 2004-2006 Korax Heritage Team
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class WeaponWitchavenLongBow : KArenaWeapon;

int FOV;

//==========================================================================
//
//  A_WBowAttack1
//
//==========================================================================

final void A_WBowAttack1()
{
	if (!bIsPlayer)
	{
		return;
	}
	KArenaWeapon Wpn = KArenaWeapon(PlayerEx(Player).ReadyWeapon);

	// Check for the player pushing the attack button to make a zoom
	if (Player.Buttons & BT_ATTACK && Player.PlayerState != PST_DEAD &&
		WeaponWitchavenLongBow(Wpn).FOV > 45)
	{
		WeaponWitchavenLongBow(Wpn).FOV--;
		Player(Player).SetFOV(WeaponWitchavenLongBow(Wpn).FOV);
	}
}

//==========================================================================
//
//  A_WBowAttack2
//
//==========================================================================

final void A_WBowAttack2()
{
	EntityEx mo;

	if (!bIsPlayer)
	{
		return;
	}
	KArenaWeapon Wpn = KArenaWeapon(PlayerEx(Player).ReadyWeapon);

	Wpn.UseWeaponMana();
	WeaponWitchavenLongBow(Wpn).FOV = 90;
	Player(Player).SetFOV(WeaponWitchavenLongBow(Wpn).FOV);
	mo = KArenaPlayerPawn(self).SpawnPlayerMissile_2(Wpn, WitchavenArrow);

	if (mo)
		Wpn.ApplyDamageModifiers(mo.MissileDamage);
}



states
{
Ready:
	WBOW A 1 A_WeaponReady
	Loop
Deselect:
	WBOW A 1 A_Lower
	Loop
Select:
	WBOW A 1 A_Raise
	Loop
Fire:
	WBOW B 2 Offset(0, -21)
Hold:
	WBOW C 0.25 Offset(0, -21)
	WBOW C 0.25 Offset(0, -21) A_WBowAttack1
	WBOW C 0.25 Offset(0, -21) A_ReFire
	WBOW C 2 Offset(0, -21) A_WBowAttack2
	WBOW DE 2 Offset(0, -21)
	WBOW F 2 Offset(0, -21) /*A_WBowAttack2*/
	WBOW GH 4 Offset(0, 10)
	WBOW IJ 5 Offset(0, -21)
	Goto Ready
}

/*SEVENTH*/
defaultproperties
{
	Slot = 7;
	SelectionOrder = 1600;
	FOV = 90;

	AmmoType1 = ItemManaRed;
	AmmoUse1 = 20;
	PSpriteSY = 20.0;
	BotCombatDist = 256.0 + MISSILERANGE;
	wis_mod = true;
	int_mod = true;
	dex_mod = false;
	str_mod = false;
	bBotChooseMelee = false;
	bBotChooseMedium = true;
	bBotChooseRanged = true;
	bBotProjectile = true;
	PickupMessage = "LONG BOW";
	RangedObituary = "$ob_longbow";
	refire_tics = 0.75;
	fire_tics = 0.25;
}
