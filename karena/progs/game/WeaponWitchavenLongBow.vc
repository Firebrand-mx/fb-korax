//**************************************************************************
//**
//**	    ##   ##   ####   ######     ##    ##     ##
//**	    ##  ##   ##  ##  ##   ##  ##  ##   ### ###
//**	    ## ##   ##    ## ##   ## ##    ##   #####
//**	    ######  ##    ## #####   ########   #####
//**	    ## ###   ##  ##  ######  ##    ##  ### ###
//**	    ##   ##   ####   ##  ### ##    ## ##     ##
//**
//**		##    ######    ##### ###   ##    ##
//**	      ##  ##  ##   ##  #####  ####  ##  ##  ##
//**	     ##    ## ##   ## ##      ##### ## ##    ##
//**	     ######## #####   #####   ## ##### ########
//**	     ##    ## ######  ##      ##  #### ##    ##
//**	     ##    ## ##  ###  #####  ##   ### ##    ##
//**
//**    $Id$
//**
//**    Copyright (C) 2004-2006 Korax Heritage Team
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class WeaponWitchavenLongBow : Weapon;

int FOV;

//==========================================================================
//
//  A_WBowAttack1
//
//==========================================================================

final void A_WBowAttack1()
{
	// Check for the player pushing the attack button to make a zoom
	if (Owner.Player.Buttons & BT_ATTACK && Owner.Player.PlayerState != PST_DEAD && FOV > 45)
	{
		FOV--;
		Player(Owner.Player).SetFOV(FOV);
	}
}

//==========================================================================
//
//  A_WBowAttack2
//
//==========================================================================

final void A_WBowAttack2()
{
	EntityEx mo;

	UseWeaponMana();
	FOV = 90;
	Player(Owner.Player).SetFOV(FOV);
	mo = Actor(Owner).SpawnPlayerMissile(WitchavenArrow);

	if (mo && int_mod)
	{
		if(!active_damage)
		{
			mo.MissileDamage = mo.MissileDamage * Player(Owner.Player).intelligence / 10;
		}
		else // [FB] PI Damage
		{
			mo.MissileDamage = (mo.MissileDamage * Player(Owner.Player).intelligence / 10) * ftoi(3.1415);
		}
	}
}



__states__
{
	S_WBOWREADY('WBOW', 0, 1.0 / 35.0, S_WBOWREADY) = A_WeaponReady
	S_WBOWDOWN('WBOW', 0, 1.0 / 35.0, S_WBOWDOWN) = A_Lower
	S_WBOWUP('WBOW', 0, 1.0 / 35.0, S_WBOWUP) = A_Raise
	S_WBOWATK_1('WBOW', 1, 2.0 / 35.0, S_WBOWATK_2, 0, -21) = none
	S_WBOWATK_2('WBOW', 2, 0.25 / 35.0, S_WBOWATK_2_2, 0, -21) = none
	S_WBOWATK_2_2('WBOW', 2, 0.25 / 35.0, S_WBOWATK_2_3, 0, -21) = A_WBowAttack1
	S_WBOWATK_2_3('WBOW', 2, 0.25 / 35.0, S_WBOWATK_3, 0, -21) = A_ReFire
	S_WBOWATK_3('WBOW', 2, 2.0 / 35.0, S_WBOWATK_4, 0, -21) = A_WBowAttack2
	S_WBOWATK_4('WBOW', 3, 2.0 / 35.0, S_WBOWATK_5, 0, -21) = none
	S_WBOWATK_5('WBOW', 4, 2.0 / 35.0, S_WBOWATK_6, 0, -21) = none
	S_WBOWATK_6('WBOW', 5, 2.0 / 35.0, S_WBOWATK_7, 0, -21) { /*A_WBowAttack2();*/ }
	S_WBOWATK_7('WBOW', 6, 4.0 / 35.0, S_WBOWATK_8, 0, 10) = none
	S_WBOWATK_8('WBOW', 7, 4.0 / 35.0, S_WBOWATK_9, 0, 10) = none
	S_WBOWATK_9('WBOW', 8, 5.0 / 35.0, S_WBOWATK_10, 0, -21) = none
	S_WBOWATK_10('WBOW', 9, 5.0 / 35.0, S_WBOWREADY, 0, -21) = none

}

/*SEVENTH*/
defaultproperties
{
	FOV = 90;

	ManaType1 = ItemManaCombined;
	manause = 20;
	UpState = S_WBOWUP;
	DownState = S_WBOWDOWN;
	ReadyState = S_WBOWREADY;
	AttackState = S_WBOWATK_1;
	HoldAttackState = S_WBOWATK_2;
	PSpriteSY = 20.0;
	wis_mod = true;
	int_mod = true;
	dex_mod = false;
	str_mod = false;
	PickUpMessage = "LONG BOW";
}
