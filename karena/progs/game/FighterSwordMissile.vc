//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class FighterSwordMissile : Projectile;

//==========================================================================
//
//  InflictorModifyDamage
//
//==========================================================================

int InflictorModifyDamage(Actor victim, Actor source, int damage)
{
	if (victim.bIsPlayer)
	{
		damage -= damage >> 2;
	}
	return damage;
}

//============================================================================
//
//  A_FSwordFlames
//
//============================================================================

void A_FSwordFlames()
{
	int i;

	for (i = 1 + (P_Random() & 3); i; i--)
	{
		Spawn(FighterSwordFlame, Origin + vector((Random() - 0.5) * 16.0,
			(Random() - 0.5) * 16.0, (Random() - 0.5) * 8.0));
	}
}

__states__
{
	S_FSWORD_MISSILE1('FSFX', 0 | FF_FULLBRIGHT, 3.0 / 35.0, S_FSWORD_MISSILE2) { }
	S_FSWORD_MISSILE2('FSFX', 1 | FF_FULLBRIGHT, 3.0 / 35.0, S_FSWORD_MISSILE3) { }
	S_FSWORD_MISSILE3('FSFX', 2 | FF_FULLBRIGHT, 3.0 / 35.0, S_FSWORD_MISSILE1) { }
	S_FSWORD_MISSILE_X1('FSFX', 3 | FF_FULLBRIGHT, 4.0 / 35.0, S_FSWORD_MISSILE_X2) { }
	S_FSWORD_MISSILE_X2('FSFX', 4 | FF_FULLBRIGHT, 3.0 / 35.0, S_FSWORD_MISSILE_X3) { A_FSwordFlames(); }
	S_FSWORD_MISSILE_X3('FSFX', 5 | FF_FULLBRIGHT, 4.0 / 35.0, S_FSWORD_MISSILE_X4) { A_Explode(); }
	S_FSWORD_MISSILE_X4('FSFX', 6 | FF_FULLBRIGHT, 3.0 / 35.0, S_FSWORD_MISSILE_X5) { }
	S_FSWORD_MISSILE_X5('FSFX', 7 | FF_FULLBRIGHT, 4.0 / 35.0, S_FSWORD_MISSILE_X6) { }
	S_FSWORD_MISSILE_X6('FSFX', 8 | FF_FULLBRIGHT, 3.0 / 35.0, S_FSWORD_MISSILE_X7) { }
	S_FSWORD_MISSILE_X7('FSFX', 9 | FF_FULLBRIGHT, 4.0 / 35.0, S_FSWORD_MISSILE_X8) { }
	S_FSWORD_MISSILE_X8('FSFX', 10 | FF_FULLBRIGHT, 3.0 / 35.0, S_FSWORD_MISSILE_X9) { }
	S_FSWORD_MISSILE_X9('FSFX', 11 | FF_FULLBRIGHT, 3.0 / 35.0, S_FSWORD_MISSILE_X10) { }
	S_FSWORD_MISSILE_X10('FSFX', 12 | FF_FULLBRIGHT, 3.0 / 35.0, none) { }
}

defaultproperties
{
	Radius = 16.0;
	Height = 8.0;
	Speed = 1050.0;
	MissileDamage = 32;
	IdleState = S_FSWORD_MISSILE1;
	DeathState = S_FSWORD_MISSILE_X1;
	DeathSound = 'FighterSwordExplode';
	Effects = HexenDefs::EF_DL_GREEN;

	//[CW]
	deathmsgi[0] = 7;
	deathmsgi[1] = 7;
}
