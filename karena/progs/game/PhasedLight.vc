//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class PhasedLight : Lighting;

float		Index;
int			Base;

//==========================================================================
//
//	Init
//
//==========================================================================

void Init(sector_t* InSector, int InBase, int InIndex)
{
	Sector = InSector;
	Sector->LightingData = self;

	if (InIndex == -1)
	{
		// sector->lightlevel as the index
		Index = itof(Sector->params.lightlevel) / 32.0;
	}
	else
	{
		Index = itof(InIndex) / 32.0;
	}
	Base = InBase & 255;
	Sector->params.lightlevel = Base + Level.Game.PhaseTable[ftoi(Index * 32.0) & 63];
	if (Sector->params.lightlevel > 255)
	{
		Sector->params.lightlevel = 255;
	}
}

//============================================================================
//
//	Tick
//
//============================================================================

void Tick(float deltaTime)
{
	Index += deltaTime;
	Sector->params.lightlevel = Base + Level.Game.PhaseTable[ftoi(Index * 32.0) & 63];
	if (Sector->params.lightlevel > 255)
	{
		Sector->params.lightlevel = 255;
	}
}

defaultproperties
{
}
