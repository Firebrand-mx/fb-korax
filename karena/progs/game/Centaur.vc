//**************************************************************************
//**
//**	    ##   ##   ####   ######     ##    ##     ##
//**	    ##  ##   ##  ##  ##   ##  ##  ##   ### ###
//**	    ## ##   ##    ## ##   ## ##    ##   #####
//**	    ######  ##    ## #####   ########   #####
//**	    ## ###   ##  ##  ######  ##    ##  ### ###
//**	    ##   ##   ####   ##  ### ##    ## ##     ##
//**
//**		    ##    ######    ##### ###   ##    ##
//**	      ##  ##  ##   ##  #####  ####  ##  ##  ##
//**	     ##    ## ##   ## ##      ##### ## ##    ##
//**	     ######## #####   #####   ## ##### ########
//**	     ##    ## ######  ##      ##  #### ##    ##
//**	     ##    ## ##  ###  #####  ##   ### ##    ##
//**
//**    $Id$
//**
//**    Copyright (C) 2004-2006 Korax Heritage Team
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class Centaur : Pawn
	__mobjinfo__(107)
	__scriptid__(1);

//==========================================================================
//
//  A_CentaurAttack
//
//==========================================================================

final void A_CentaurAttack()
{
	if (!Target)
	{
		return;
	}
	if (CheckMeleeRange())
	{
		Target.Damage(self, self, P_Random() % 7 + 3);
	}
}

//==========================================================================
//
//  A_CentaurDropStuff
//
//  Spawn shield/sword sprites when the centaur pulps
//
//==========================================================================

final void A_CentaurDropStuff()
{
	Actor A;
	float angle;

	A = Spawn(CentaurShield, Origin + vector(0.0, 0.0, 45.0));
	if (A)
	{
		angle = AngleMod360(Angles.yaw + 90.0);
		A.Velocity.x = ((Random() - 0.5) * 8.0 + 1.0) * cos(angle) * 35.0;
		A.Velocity.y = ((Random() - 0.5) * 8.0 + 1.0) * sin(angle) * 35.0;
		A.Velocity.z = (8.0 + Random() * 4.0) * 35.0;
		A.Target = self;
	}
	A = Spawn(CentaurSword, Origin + vector(0.0, 0.0, 45.0));
	if (A)
	{
		angle = AngleMod360(Angles.yaw - 90.0);
		A.Velocity.x = ((Random() - 0.5) * 8.0 + 1.0) * cos(angle) * 35.0;
		A.Velocity.y = ((Random() - 0.5) * 8.0 + 1.0) * sin(angle) * 35.0;
		A.Velocity.z = (8.0 + Random() * 4.0) * 35.0;
		A.Target = self;
	}
}

states
{
Spawn:
	CENT AB 10 A_Look
	Loop
See:
	CENT ABCD 4 A_Chase
	Loop
Melee:
	CENT H 5 A_FaceTarget
	CENT I 4 A_FaceTarget
	CENT J 7 A_CentaurAttack
	Goto See
Pain:
	CENT G 6 A_Pain
	CENT G 6 A_SetReflectiveInvulnerable
	CENT EEE 15 A_CentaurDefend
	CENT E 1 A_UnSetReflectiveInvulnerable
	Goto See
Death:
	CENT K 4
	CENT L 4 A_Scream
	CENT MN 4
	CENT O 4 A_NoBlocking
	CENT PQ 4
	CENT R 4 A_QueueCorpse
	CENT S 4
	CENT T -1
	Stop
XDeath:
	CTXD A 4
	CTXD B 4 A_NoBlocking
	CTXD C 4 A_CentaurDropStuff
	CTXD D 3 A_Scream
	CTXD E 4 A_QueueCorpse
	CTXD F 3
	CTXD G 4
	CTXD H 3
	CTXD I 4
	CTXD J 3
	CTXD K -1
	Stop
Ice:
	CENT U 5 A_FreezeDeath
	CENT U 1 A_FreezeDeathChunks
	Wait
}

defaultproperties
{
	Health = 200;
	GibsHealth = -100;
	Radius = 20.0;
	Height = 64.0;
	Mass = 120.0;
	Speed = 13.0 * 35.0;
	PainChance = 0.52734375;
	bShieldReflect = true;
	SightSound = 'CentaurSight';
	ActiveSound = 'CentaurActive';
	AttackSound = 'CentaurAttack';
	PainSound = 'CentaurPain';
	DeathSound = 'CentaurDeath';
	HowlSound = 'PuppyBeat';
	Obituary = "$ob_centaurhit";
}
