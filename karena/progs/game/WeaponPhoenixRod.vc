//**************************************************************************
//**
//**	    ##   ##   ####   ######     ##    ##     ##
//**	    ##  ##   ##  ##  ##   ##  ##  ##   ### ###
//**	    ## ##   ##    ## ##   ## ##    ##   #####
//**	    ######  ##    ## #####   ########   #####
//**	    ## ###   ##  ##  ######  ##    ##  ### ###
//**	    ##   ##   ####   ##  ### ##    ## ##     ##
//**
//**		##    ######    ##### ###   ##    ##
//**	      ##  ##  ##   ##  #####  ####  ##  ##  ##
//**	     ##    ## ##   ## ##      ##### ## ##    ##
//**	     ######## #####   #####   ## ##### ########
//**	     ##    ## ######  ##      ##  #### ##    ##
//**	     ##    ## ##  ###  #####  ##   ### ##    ##
//**
//**    $Id$
//**
//**    Copyright (C) 2004-2006 Korax Heritage Team
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class WeaponPhoenixRod : KArenaWeapon;

int FlameCount;	// for flame thrower duration

//==========================================================================
//
//	WeaponLevel2Fade
//
//==========================================================================
/*
void WeaponLevel2Fade()
{
	if (StateNum != ReadyState2 && StateNum != UpState2)
	{
		SetState(ReadyState);
		UseWeaponMana();
		Player.Refire = 0;
	}
}
*/
//===========================================================================
//
//  A_FirePhoenixPL1
//
//===========================================================================

final void A_FirePhoenixPL1() self(KArenaPlayerPawn)
{
	EntityEx	A;
	TVec		vforward;

	if (!bIsPlayer)
	{
		return;
	}
	KArenaWeapon Wpn = KArenaWeapon(PlayerEx(Player).ReadyWeapon);

	Wpn.UseWeaponMana();
	A = KArenaPlayerPawn(self).SpawnPlayerMissile_2(Wpn, PhoenixFX1);
	if (A)
		Wpn.ApplyDamageModifiers(A.MissileDamage);
	AngleVector(&Angles, &vforward);
	Velocity -= vforward * 140.0;
}

//===========================================================================
//
//  A_InitPhoenixPL2
//
//===========================================================================

final void A_InitPhoenixPL2() self(KArenaPlayerPawn)
{
	if (!bIsPlayer)
	{
		return;
	}
	KArenaWeapon Wpn = KArenaWeapon(PlayerEx(Player).ReadyWeapon);

	WeaponPhoenixRod(Wpn).FlameCount = 2 * 35;
}

//===========================================================================
//
//  A_FirePhoenixPL2
//
//  Flame thrower effect.
//
//===========================================================================

final void A_FirePhoenixPL2() self(KArenaPlayerPawn)
{
	if (!bIsPlayer)
	{
		return;
	}
	KArenaWeapon Wpn = KArenaWeapon(PlayerEx(Player).ReadyWeapon);

	Actor A;
	TVec dir;
	TVec org;
	if (--WeaponPhoenixRod(Wpn).FlameCount == 0)
	{
		// Out of flame
		Player.SetViewState(ps_weapon,
			GetStatePlus(Wpn.GetAttackState(false), 3));
		Player(Player).Refire = 0;
		return;
	}
	org.x = Origin.x + (Random() - Random()) * 2.0;
	org.y = Origin.y + (Random() - Random()) * 2.0;
	org.z = Origin.z + 26.0 - sin(Angles.pitch);
	org.z -= FloorClip;
	A = KArenaPlayerPawn(self).Spawn_2(Wpn, PhoenixFX2, org);
	if (A)
	{
		Wpn.ApplyDamageModifiers(A.MissileDamage);
		A.Angles.yaw = Angles.yaw;
		A.Angles.pitch = Angles.pitch;
		AngleVector(&A.Angles, &dir);
		A.Velocity = Velocity + A.Speed * dir;
		if (!Player(Player).Refire || !(XLevel.TicTime % 38))
		{
			PlaySound('PhoenixHit2', CHAN_WEAPON);
		}
		A.CheckMissileSpawn();
	}
}

//===========================================================================
//
//  A_ShutdownPhoenixPL2
//
//===========================================================================

final void A_ShutdownPhoenixPL2() self(KArenaPlayerPawn)
{
	if (!bIsPlayer)
	{
		return;
	}
	KArenaWeapon Wpn = KArenaWeapon(PlayerEx(Player).ReadyWeapon);

	Wpn.UseWeaponMana();
}

states
{
Ready:
	PHNX A 1 A_WeaponReady
	Loop
Deselect:
	PHNX A 1 A_Lower
	Loop
Select:
	PHNX A 1 A_Raise
	Loop
Fire:
	PHNX B 5
	PHNX C 7 A_FirePhoenixPL1
	PHNX D 4
	PHNX B 4
	PHNX B 0 A_ReFire
	Goto Ready
}

/*SEVENTH*/
defaultproperties
{
	Slot = 7;
	SelectionOrder = 1200;
	AmmoType1 = ItemManaRed;
	AmmoUse1 = 15;
	PSpriteSY = 15.0;
	BotCombatDist = BotPlayer::SAFE_SELF_MISDIST * 2.0 + MISSILERANGE;
	wis_mod = true;
	int_mod = true;
	dex_mod = false;
	str_mod = false;
	bBotChooseMelee = false;
	bBotChooseMedium = false;
	bBotChooseRanged = false;
	bBotProjectile = true;
	PickupMessage = "PHOENIX ROD";
	RangedObituary = "$ob_phoenix";
	refire_tics = 20.0;
	fire_tics = 5.0;
}
