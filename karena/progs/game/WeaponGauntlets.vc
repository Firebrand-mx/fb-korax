//**************************************************************************
//**
//**	    ##   ##   ####   ######     ##    ##     ##
//**	    ##  ##   ##  ##  ##   ##  ##  ##   ### ###
//**	    ## ##   ##    ## ##   ## ##    ##   #####
//**	    ######  ##    ## #####   ########   #####
//**	    ## ###   ##  ##  ######  ##    ##  ### ###
//**	    ##   ##   ####   ##  ### ##    ## ##     ##
//**
//**		##    ######    ##### ###   ##    ##
//**	      ##  ##  ##   ##  #####  ####  ##  ##  ##
//**	     ##    ## ##   ## ##      ##### ## ##    ##
//**	     ######## #####   #####   ## ##### ########
//**	     ##    ## ######  ##      ##  #### ##    ##
//**	     ##    ## ##  ###  #####  ##   ### ##    ##
//**
//**    $Id$
//**
//**    Copyright (C) 2004-2006 Korax Heritage Team
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class WeaponGauntlets : Weapon;

//===========================================================================
//
//  A_GauntletAttack
//
//===========================================================================

final void A_GauntletAttack()
{
	float angle;
	int damage;
	float slope;
	int randVal;
	float dist;
	TAVec angles;
	TVec dir;

	Owner.Player.ViewStates[ps_weapon].SX = Random() * 4.0 - 2.0;
	Owner.Player.ViewStates[ps_weapon].SY = WEAPONTOP + Random() * 4.0;
	angles = Owner.Angles;
	damage = 17; //10 + (P_Random() & 15);
	if (str_mod)
	{
		if(!active_damage)
		{
			damage = damage * Player(Owner.Player).strength / 10;
		}
		else // [FB] PI Damage
		{
			damage = (damage * Player(Owner.Player).strength / 10) * ftoi(3.1415);
		}
	}
	dist = MELEERANGE + 0.00001;
	angles.yaw = AngleMod360(angles.yaw +
		(Random() - Random()) * 45.0 / 8.0);
	dir = Actor(Owner).AimLineAttack(angles, dist);
	Actor(Owner).LineAttack(dir, dist, damage, GauntletPuff1);
	if (!Actor(Owner).linetarget)
	{
		if (P_Random() > 64)
		{
			Owner.Player.ExtraLight = !Owner.Player.ExtraLight;
		}
		// didn't find any creatures, so try to strike any walls
		angles = Owner.Angles;
		dir = Actor(Owner).AimLineAttack(angles, MELEERANGE);
		Actor(Owner).LineAttack(dir, MELEERANGE, damage, GauntletPuff1);
		Owner.PlaySound('GauntletFull', CHAN_WEAPON);
		return;
	}
	randVal = P_Random();
	if (randVal < 64)
	{
		Owner.Player.ExtraLight = 0;
	}
	else if (randVal < 160)
	{
		Owner.Player.ExtraLight = 1;
	}
	else
	{
		Owner.Player.ExtraLight = 2;
	}
	if (!Player(Owner.Player).Refire)
		Owner.PlaySound('GauntletHit', CHAN_WEAPON);
	else
		Owner.PlaySound('GauntletUse', CHAN_WEAPON);
	// turn to face target
	angle = atan2(Actor(Owner).linetarget.Origin.y - Owner.Origin.y,
		Actor(Owner).linetarget.Origin.x - Owner.Origin.x);
	if (AngleMod360(angle - Owner.Angles.yaw) > 180.0)
	{
		if (AngleMod360(angle - Owner.Angles.yaw) < 360.0 - 90.0 / 20.0)
			Owner.Angles.yaw = AngleMod360(angle + 90.0 / 21.0);
		else
			Owner.Angles.yaw = AngleMod360(Owner.Angles.yaw - 90.0 / 20.0);
	}
	else
	{
		if (AngleMod360(angle - Owner.Angles.yaw) > 90.0 / 20.0)
			Owner.Angles.yaw = AngleMod360(angle - 90.0 / 21.0);
		else
			Owner.Angles.yaw = AngleMod360(Owner.Angles.yaw + 90.0 / 20.0);
	}
	Actor(Owner).bJustAttacked = true;
}

__states__
{
	S_GAUNTLETREADY('CGAU', 0, 1.0 / 35.0, S_GAUNTLETREADY) = A_WeaponReady
	S_GAUNTLETDOWN('CGAU', 0, 1.0 / 35.0, S_GAUNTLETDOWN) = A_Lower
	S_GAUNTLETUP('CGAU', 0, 1.0 / 35.0, S_GAUNTLETUP) { Owner.PlaySound('GauntletActive', CHAN_WEAPON);A_Raise(); }
	S_GAUNTLETATK1_1('CGAU', 1, 4.0 / 35.0, S_GAUNTLETATK1_2) = none
	S_GAUNTLETATK1_2('CGAU', 2, 4.0 / 35.0, S_GAUNTLETATK1_3) = none
	S_GAUNTLETATK1_3('CGAU', 3 | FF_FULLBRIGHT, 4.0 / 35.0, S_GAUNTLETATK1_4) = A_GauntletAttack
	S_GAUNTLETATK1_4('CGAU', 4 | FF_FULLBRIGHT, 4.0 / 35.0, S_GAUNTLETATK1_5) = A_GauntletAttack
	S_GAUNTLETATK1_5('CGAU', 5 | FF_FULLBRIGHT, 4.0 / 35.0, S_GAUNTLETATK1_6) = A_GauntletAttack
	S_GAUNTLETATK1_6('CGAU', 2, 4.0 / 35.0, S_GAUNTLETATK1_7) = A_ReFire
	S_GAUNTLETATK1_7('CGAU', 1, 4.0 / 35.0, S_GAUNTLETREADY) = A_Light0
}

defaultproperties
{
	Mana = HexenDefs::MANA_NONE;
	UpState = S_GAUNTLETUP;
	DownState = S_GAUNTLETDOWN;
	ReadyState = S_GAUNTLETREADY;
	AttackState = S_GAUNTLETATK1_1;
	HoldAttackState = S_GAUNTLETATK1_3;
	PSpriteSY = 15.0;
	wis_mod = false;
	int_mod = false;
	dex_mod = true;
	str_mod = true;

	deathmsgi = 12;
}
