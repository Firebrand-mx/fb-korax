//**************************************************************************
//**
//**	    ##   ##   ####   ######     ##    ##     ##
//**	    ##  ##   ##  ##  ##   ##  ##  ##   ### ###
//**	    ## ##   ##    ## ##   ## ##    ##   #####
//**	    ######  ##    ## #####   ########   #####
//**	    ## ###   ##  ##  ######  ##    ##  ### ###
//**	    ##   ##   ####   ##  ### ##    ## ##     ##
//**
//**		##    ######    ##### ###   ##    ##
//**	      ##  ##  ##   ##  #####  ####  ##  ##  ##
//**	     ##    ## ##   ## ##      ##### ## ##    ##
//**	     ######## #####   #####   ## ##### ########
//**	     ##    ## ######  ##      ##  #### ##    ##
//**	     ##    ## ##  ###  #####  ##   ### ##    ##
//**
//**    $Id$
//**
//**    Copyright (C) 2004-2006 Korax Heritage Team
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class WeaponMageLightning : KArenaWeapon;

//==========================================================================
//
//  A_LightningReady
//
//==========================================================================

final void A_LightningReady()
{
	A_WeaponReady();
	if (P_Random() < 160)
	{
		Owner.PlaySound('MageLightningReady', CHAN_WEAPON);
	}
}

//==========================================================================
//
//  A_MLightningAttack
//
//==========================================================================

final void A_MLightningAttack()
{
	LightningFloor fmo;
	LightningCeiling cmo;

	fmo = LightningFloor(Actor(Owner).SpawnPlayerMissile_2(self, LightningFloor));
	cmo = LightningCeiling(Actor(Owner).SpawnPlayerMissile_2(self, LightningCeiling));
	if (fmo)
	{
		fmo.ZigZagCount = 0;
		fmo.LightningLink = cmo;
		fmo.A_LightningZap();
	}
	if (cmo)
	{
		cmo.Tracer = none;	// mobj that it will track
		cmo.LightningLink = fmo;
		cmo.A_LightningZap();
	}
	Owner.PlaySound('MageLightningFire', CHAN_WEAPON);
	UseWeaponMana();
}

states
{
Ready:
	MLNG AAAAA 1 Bright A_WeaponReady
	MLNG A 1 Bright A_LightningReady
	MLNG BBBBBBCCCCC 1 Bright A_WeaponReady
	MLNG C 1 Bright A_LightningReady
	MLNG BBBBBB 1 Bright A_WeaponReady
	Loop
Deselect:
	MLNG A 1 Bright A_Lower
	Loop
Select:
	MLNG A 1 Bright A_Raise
	Loop
Fire:
	MLNG DE 3 Bright
	MLNG F 4 Bright A_MLightningAttack
	MLNG G 4 Bright
	MLNG H 3 Bright
	MLNG I 3 Bright
	MLNG I 6 Bright Offset(0, 199)
	MLNG C 2 Bright Offset(0, 55)
	MLNG B 2 Bright Offset(0, 50)
	MLNG B 2 Bright Offset(0, 45)
	MLNG B 2 Bright Offset(0, 40)
	Goto Ready
}

/*FIFTH*/
defaultproperties
{
	Slot = 5;
	SelectionOrder = 3300;
	AmmoType1 = ItemManaBlue;
	AmmoUse1 = 15;
	PSpriteSY = 20.0;
	BotCombatDist = 384.0 + MISSILERANGE;
	wis_mod = true;
	int_mod = true;
	dex_mod = false;
	str_mod = false;
	bBotChooseMelee = false;
	bBotChooseMedium = true;
	bBotChooseRanged = true;
	bBotProjectile = true;
	PickupMessage = "ARC OF DEATH";
	RangedObituary = "$ob_lightning";
	refire_tics = 34.0;
	fire_tics = 7.0;
}
