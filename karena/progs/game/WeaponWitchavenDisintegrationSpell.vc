//**************************************************************************
//**
//**	    ##   ##   ####   ######     ##    ##     ##
//**	    ##  ##   ##  ##  ##   ##  ##  ##   ### ###
//**	    ## ##   ##    ## ##   ## ##    ##   #####
//**	    ######  ##    ## #####   ########   #####
//**	    ## ###   ##  ##  ######  ##    ##  ### ###
//**	    ##   ##   ####   ##  ### ##    ## ##     ##
//**
//**		##    ######    ##### ###   ##    ##
//**	      ##  ##  ##   ##  #####  ####  ##  ##  ##
//**	     ##    ## ##   ## ##      ##### ## ##    ##
//**	     ######## #####   #####   ## ##### ########
//**	     ##    ## ######  ##      ##  #### ##    ##
//**	     ##    ## ##  ###  #####  ##   ### ##    ##
//**
//**    $Id$
//**
//**    Copyright (C) 2004-2006 Korax Heritage Team
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class WeaponWitchavenDisintegrationSpell : Weapon;

//==========================================================================
//
//	A_Disintegrate
//
//==========================================================================

final void A_Disintegrate()
{
	int i;
	int damage;
	TAVec rot;
	TVec aimDir;
	TVec dir;

	Owner.PlaySound('FighterSwordFire', CHAN_WEAPON);

	UseWeaponMana();

	Actor(Owner).Aim(aimDir, MISSILERANGE);
	for (i = 0; i < 20; i++)
	{
		rot.pitch = (Random() - Random()) * 45.0 / 8.0;
		rot.yaw = (Random() - Random()) * 45.0 / 4.0;
		rot.roll = 0.0;
		dir = RotateDirectionVector(aimDir, rot);
		damage = 300; //90 * (P_Random() % 3 + 1);
		//Player.MO.bDisruptDamage = true;
		if (int_mod)
		{
			if(!active_damage)
			{
				damage = damage * Player(Owner.Player).strength / 10;
			}
			else // [FB] PI Damage
			{
				damage = (damage * Player(Owner.Player).strength / 10) * ftoi(3.1415);
			}
		}
		Actor(Owner).LineAttack(dir, MISSILERANGE, damage, DisintegrationPuff);
		//Player.MO.bDisruptDamage = false;
	}	
}

__states__
{
	S_WDISINTEGRATIONREADY('WELG', 0 | FF_FULLBRIGHT, 1.0 / 35.0, S_WDISINTEGRATIONREADY) = A_WeaponReady
	S_WDISINTEGRATIONDOWN('WELG', 0 | FF_FULLBRIGHT, 1.0 / 35.0, S_WDISINTEGRATIONDOWN) = A_Lower
	S_WDISINTEGRATIONUP('WELG', 0 | FF_FULLBRIGHT, 1.0 / 35.0, S_WDISINTEGRATIONUP) = A_Raise
	S_WDISINTEGRATIONATK_1('WELG', 1 | FF_FULLBRIGHT, 2.0 / 35.0, S_WDISINTEGRATIONATK_2) = none
	S_WDISINTEGRATIONATK_2('WELG', 2 | FF_FULLBRIGHT, 2.0 / 35.0, S_WDISINTEGRATIONATK_3) = none
	S_WDISINTEGRATIONATK_3('WELG', 3 | FF_FULLBRIGHT, 2.0 / 35.0, S_WDISINTEGRATIONATK_4) = none
	S_WDISINTEGRATIONATK_4('WELG', 4 | FF_FULLBRIGHT, 2.0 / 35.0, S_WDISINTEGRATIONATK_5) = none
	S_WDISINTEGRATIONATK_5('WELG', 5 | FF_FULLBRIGHT, 2.0 / 35.0, S_WDISINTEGRATIONATK_6) = none
	S_WDISINTEGRATIONATK_6('WELG', 6 | FF_FULLBRIGHT, 2.0 / 35.0, S_WDISINTEGRATIONATK_7) = none
	S_WDISINTEGRATIONATK_7('WELG', 7 | FF_FULLBRIGHT, 2.0 / 35.0, S_WDISINTEGRATIONATK_8) = A_Disintegrate
	S_WDISINTEGRATIONATK_8('WELG', 8 | FF_FULLBRIGHT, 2.0 / 35.0, S_WDISINTEGRATIONATK_9) = none
	S_WDISINTEGRATIONATK_9('WELG', 9 | FF_FULLBRIGHT, 2.0 / 35.0, S_WDISINTEGRATIONATK_10) = none
	S_WDISINTEGRATIONATK_10('WELG', 9 | FF_FULLBRIGHT, 2.0 / 35.0, S_WDISINTEGRATIONATK_11) = A_ReFire
	S_WDISINTEGRATIONATK_11('WELG', 9 | FF_FULLBRIGHT, 2.0 / 35.0, S_WDISINTEGRATIONATK_12) = none
	S_WDISINTEGRATIONATK_12('WELG', 9 | FF_FULLBRIGHT, 2.0 / 35.0, S_WDISINTEGRATIONREADY) = none
}

/*EIGHT*/
defaultproperties
{
	Mana = HexenDefs::NUMMANA;
	manause = 100;
	UpState = S_WDISINTEGRATIONUP;
	DownState = S_WDISINTEGRATIONDOWN;
	ReadyState = S_WDISINTEGRATIONREADY;
	AttackState = S_WDISINTEGRATIONATK_1;
	HoldAttackState = S_WDISINTEGRATIONATK_1;
	PSpriteSY = 20.0;
	wis_mod = true;
	int_mod = true;
	dex_mod = false;
	str_mod = false;
	PickUpMessage = "DISINTEGRATION SPELL";

	bInstantRanged = true;
	deathmsgi = 37;
}
