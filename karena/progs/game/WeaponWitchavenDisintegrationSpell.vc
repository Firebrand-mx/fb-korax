//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class WeaponWitchavenDisintegrationSpell : Weapon;

//==========================================================================
//
//	A_Disintegrate
//
//==========================================================================

void A_Disintegrate()
{
	int i;
	int damage;
	TAVec rot;
	TVec aimDir;
	TVec dir;
	TAVec angles;

	Player.MO.PlaySound('FighterSwordFire', CHAN_WEAPON);

	UseWeaponMana();

	angles = Player.MO.Angles;
	AimLineAttack(Player.MO, &angles, MISSILERANGE);
	AngleVector(&angles, &aimDir);
	PuffType = DisintegrationPuff;
//	aimDir = Aim(Player.MO, 16.0 * 64.0);
	for (i = 0; i < 20; i++)
	{
		rot.pitch = (Random() - Random()) * 45.0 / 8.0;
		rot.yaw = (Random() - Random()) * 45.0 / 4.0;
		rot.roll = 0.0;
		dir = RotateDirectionVector(aimDir, rot);
		damage = 90 * (P_Random() % 3 + 1);
		//Player.MO.bDisruptDamage = true;
		if (int_mod)
		{
			damage = damage * Player.intelligence / 10;
		}
		LineAttack(Player.MO, dir, MISSILERANGE, damage);
		//Player.MO.bDisruptDamage = false;
	}	
}

__states__
{
	S_WDISINTEGRATIONREADY('WELG', 0 | FF_FULLBRIGHT, 1.0 / 35.0, S_WDISINTEGRATIONREADY) { A_WeaponReady(); }
	S_WDISINTEGRATIONDOWN('WELG', 0 | FF_FULLBRIGHT, 1.0 / 35.0, S_WDISINTEGRATIONDOWN) { A_Lower(); }
	S_WDISINTEGRATIONUP('WELG', 0 | FF_FULLBRIGHT, 1.0 / 35.0, S_WDISINTEGRATIONUP) { A_Raise(); }
	S_WDISINTEGRATIONATK_1('WELG', 1 | FF_FULLBRIGHT, 2.0 / 35.0, S_WDISINTEGRATIONATK_2) { }
	S_WDISINTEGRATIONATK_2('WELG', 2 | FF_FULLBRIGHT, 2.0 / 35.0, S_WDISINTEGRATIONATK_3) { }
	S_WDISINTEGRATIONATK_3('WELG', 3 | FF_FULLBRIGHT, 2.0 / 35.0, S_WDISINTEGRATIONATK_4) { }
	S_WDISINTEGRATIONATK_4('WELG', 4 | FF_FULLBRIGHT, 2.0 / 35.0, S_WDISINTEGRATIONATK_5) { }
	S_WDISINTEGRATIONATK_5('WELG', 5 | FF_FULLBRIGHT, 2.0 / 35.0, S_WDISINTEGRATIONATK_6) { }
	S_WDISINTEGRATIONATK_6('WELG', 6 | FF_FULLBRIGHT, 2.0 / 35.0, S_WDISINTEGRATIONATK_7) { }
	S_WDISINTEGRATIONATK_7('WELG', 7 | FF_FULLBRIGHT, 2.0 / 35.0, S_WDISINTEGRATIONATK_8) { A_Disintegrate(); }
	S_WDISINTEGRATIONATK_8('WELG', 8 | FF_FULLBRIGHT, 2.0 / 35.0, S_WDISINTEGRATIONATK_9) { }
	S_WDISINTEGRATIONATK_9('WELG', 9 | FF_FULLBRIGHT, 2.0 / 35.0, S_WDISINTEGRATIONATK_10) { }
	S_WDISINTEGRATIONATK_10('WELG', 9 | FF_FULLBRIGHT, 2.0 / 35.0, S_WDISINTEGRATIONATK_11) { A_ReFire(); }
	S_WDISINTEGRATIONATK_11('WELG', 9 | FF_FULLBRIGHT, 2.0 / 35.0, S_WDISINTEGRATIONATK_12) { }
	S_WDISINTEGRATIONATK_12('WELG', 9 | FF_FULLBRIGHT, 2.0 / 35.0, S_WDISINTEGRATIONREADY) { }
}

/*EIGHT*/
defaultproperties
{
	Mana = NUMMANA;
	manause = 35;
	UpState = S_WDISINTEGRATIONUP;
	DownState = S_WDISINTEGRATIONDOWN;
	ReadyState = S_WDISINTEGRATIONREADY;
	AttackState = S_WDISINTEGRATIONATK_1;
	HoldAttackState = S_WDISINTEGRATIONATK_1;
	PSpriteSY = 20.0;
	wis_mod = true;
	int_mod = true;
	dex_mod = false;
	str_mod = false;
	PickUpMessage = "DISINTEGRATION SPELL";
}

//**************************************************************************
//
//  Revision 1.2  2003/11/12 16:50:47  dj_jl
//  Changed player structure into a class
//
//  Revision 1.1  2002/10/26 16:32:27  dj_jl
//  New style of defining classes.
//
//**************************************************************************
