//**************************************************************************
//**
//**	    ##   ##   ####   ######     ##    ##     ##
//**	    ##  ##   ##  ##  ##   ##  ##  ##   ### ###
//**	    ## ##   ##    ## ##   ## ##    ##   #####
//**	    ######  ##    ## #####   ########   #####
//**	    ## ###   ##  ##  ######  ##    ##  ### ###
//**	    ##   ##   ####   ##  ### ##    ## ##     ##
//**
//**		##    ######    ##### ###   ##    ##
//**	      ##  ##  ##   ##  #####  ####  ##  ##  ##
//**	     ##    ## ##   ## ##      ##### ## ##    ##
//**	     ######## #####   #####   ## ##### ########
//**	     ##    ## ######  ##      ##  #### ##    ##
//**	     ##    ## ##  ###  #####  ##   ### ##    ##
//**
//**    $Id$
//**
//**    Copyright (C) 2004-2006 Korax Heritage Team
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class WeaponSuperShotgun : Weapon;

//===========================================================================
//
//  A_FireShotgun2
//
//===========================================================================

final void A_FireShotgun2()
{
	int i;
	int damage;
	TAVec rot;
	TVec aimDir;
	TVec dir;

	Owner.PlaySound('SuperShotgunFire', CHAN_WEAPON);
	Owner.SetState(Actor(Owner).MissileState);

	UseWeaponMana();

	Owner.Player.SetViewState(ps_flash, Weapon(self).FlashState);

	Actor(Owner).Aim(aimDir, MISSILERANGE);
	for (i = 0; i < 20; i++)
	{
		rot.pitch = (Random() - Random()) * 45.0 / 8.0;
		rot.yaw = (Random() - Random()) * 45.0 / 4.0;
		rot.roll = 0.0;
		dir = RotateDirectionVector(aimDir, rot);
		damage = 7; //5 * (P_Random() % 3 + 1);
		if (int_mod)
		{
			if(!active_damage)
			{
				damage = damage * Player(Owner.Player).strength / 10;
			}
			else // [FB] PI Damage
			{
				damage = (damage * Player(Owner.Player).strength / 10) * ftoi(3.1415);
			}
		}
		Actor(Owner).LineAttack(dir, MISSILERANGE, damage, DoomPuff);
	}
	Owner.Effects |= HexenDefs::EF_DL_MUZZLEFLASH;
}

//===========================================================================
//
//  A_OpenShotgun2
//
//===========================================================================

final void A_OpenShotgun2()
{
	Owner.PlaySound('SuperShotgunOpen', CHAN_WEAPON);
}

//===========================================================================
//
//  A_LoadShotgun2
//
//===========================================================================

final void A_LoadShotgun2()
{
	Owner.PlaySound('SuperShotgunLoad', CHAN_WEAPON);
}

//===========================================================================
//
//  A_CloseShotgun2
//
//===========================================================================

final void A_CloseShotgun2()
{
	Owner.PlaySound('SuperShotgunClose', CHAN_WEAPON);
	A_ReFire();
}

__states__
{
	S_DSGUN('SHT2', 0, 1.0 / 35.0, S_DSGUN) = A_WeaponReady
	S_DSGUNDOWN('SHT2', 0, 1.0 / 35.0, S_DSGUNDOWN) = A_Lower
	S_DSGUNUP('SHT2', 0, 1.0 / 35.0, S_DSGUNUP) = A_Raise
	S_DSGUN1('SHT2', 0, 3.0 / 35.0, S_DSGUN2) = none
	S_DSGUN2('SHT2', 0, 7.0 / 35.0, S_DSGUN3) = A_FireShotgun2
	S_DSGUN3('SHT2', 1, 7.0 / 35.0, S_DSGUN4) = none
	S_DSGUN4('SHT2', 2, 7.0 / 35.0, S_DSGUN5) { if (!IsWeaponManaUsable()) Owner.Player.SetViewState(ps_weapon, S_DSGUN);/*A_CheckReload();*/ }
	S_DSGUN5('SHT2', 3, 7.0 / 35.0, S_DSGUN6) = A_OpenShotgun2
	S_DSGUN6('SHT2', 4, 7.0 / 35.0, S_DSGUN7) = none
	S_DSGUN7('SHT2', 5, 7.0 / 35.0, S_DSGUN8) = A_LoadShotgun2
	S_DSGUN8('SHT2', 6, 6.0 / 35.0, S_DSGUN9) = none
	S_DSGUN9('SHT2', 7, 6.0 / 35.0, S_DSGUN10) = A_CloseShotgun2
	S_DSGUN10('SHT2', 0, 5.0 / 35.0, S_DSGUN) = A_ReFire
	S_DSNR1('SHT2', 1, 7.0 / 35.0, S_DSNR2) = none
	S_DSNR2('SHT2', 0, 3.0 / 35.0, S_DSGUNDOWN) = none
	S_DSGUNFLASH1('SHT2', 8 | FF_FULLBRIGHT, 5.0 / 35.0, S_DSGUNFLASH2) = A_Light1
	S_DSGUNFLASH2('SHT2', 9 | FF_FULLBRIGHT, 4.0 / 35.0, S_DSGUN_LIGHTDONE) = A_Light2
	S_DSGUN_LIGHTDONE('SHT2', 0, 0.0 / 35.0, none) = A_Light0
}

defaultproperties
{
	UpState = S_DSGUNUP;
	DownState = S_DSGUNDOWN;
	ReadyState = S_DSGUN;
	AttackState = S_DSGUN1;
	FlashState = S_DSGUNFLASH1;
	HoldAttackState = S_DSGUN1;
	Mana = HexenDefs::MANA_2;
	manause = 25;
	wis_mod = true;
	int_mod = true;
	dex_mod = false;
	str_mod = false;
	PickUpMessage = "SUPER SHOTGUN";
	Obituary = "$ob_supershotgun";
}
