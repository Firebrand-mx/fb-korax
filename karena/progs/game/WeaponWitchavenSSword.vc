//**************************************************************************
//**
//**	    ##   ##   ####   ######     ##    ##     ##
//**	    ##  ##   ##  ##  ##   ##  ##  ##   ### ###
//**	    ## ##   ##    ## ##   ## ##    ##   #####
//**	    ######  ##    ## #####   ########   #####
//**	    ## ###   ##  ##  ######  ##    ##  ### ###
//**	    ##   ##   ####   ##  ### ##    ## ##     ##
//**
//**		##    ######    ##### ###   ##    ##
//**	      ##  ##  ##   ##  #####  ####  ##  ##  ##
//**	     ##    ## ##   ## ##      ##### ## ##    ##
//**	     ######## #####   #####   ## ##### ########
//**	     ##    ## ######  ##      ##  #### ##    ##
//**	     ##    ## ##  ###  #####  ##   ### ##    ##
//**
//**    $Id$
//**
//**    Copyright (C) 2004-2006 Korax Heritage Team
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class WeaponWitchavenSSword : KArenaWeapon;

//int NoMoreManaState;
float SwordRange;

//==========================================================================
//
//  A_WSSwordAttack
//
//==========================================================================

final void A_WSSwordAttack()
{
	Actor			pmo = Actor(Owner);
	float			power;
	int				damage;
	int				useMana;
	TAVec			angles;
	TVec			vforward;
	class<Actor>	PuffType;
	EntityEx		AimTarget;

	damage = 25; //15 + (P_Random() & 15) + (P_Random() & 7);
	if (str_mod)
	{
		if(!active_damage)
		{
			damage = damage * Player(Owner.Player).strength / 10;
		}
		else // [FB] PI Damage
		{
			damage = (damage * Player(Owner.Player).strength / 10) * ftoi(3.1415);
		}
	}
	power = 0.0;
// [KORAX]
/*	if (IsWeaponManaUsable())
	{*/
		damage <<= 1;
		power = 6.0;
		PuffType = AxePuff;
		useMana = 1;
/*	}
	else
	{
		PuffType = AxePuff;
		useMana = 0;
	}*/

	AimTarget = pmo.AimEx(vforward, SwordRange, 45.0 / 16.0, 16, MELEERANGE);
	if (AimTarget)
	{
		VectorAngles(&vforward, &angles);
		if (pmo.LineAttack(vforward, SwordRange, damage, PuffType))
		{
			pmo.PlaySound('FighterHammerMiss', CHAN_WEAPON);
		}
		if (AimTarget.bMonster || AimTarget.bIsPlayer)
		{
			AimTarget.Thrust(angles.yaw, power);
		}
		Player(Owner.Player).AdjustPlayerAngle(AimTarget);
		useMana++;
	}
	else
	{
		// didn't find any creatures, so try to strike any walls
		PuffType = HammerPuff;
		if (pmo.LineAttack(vforward, MELEERANGE, damage, PuffType))
		{
			pmo.PlaySound('FighterHammerMiss', CHAN_WEAPON);
		}
	}

//[KORAX]
	if (useMana == 2)
	{
		UseWeaponMana();
/*		if (!IsWeaponManaUsable())
		{
			SetState(NoMoreManaState);
		}*/
	}
}

states
{
//[KORAX]
/*
	S_WSSWORDREADY('WSSW', 0, 1.0 / 35.0, S_WSSWORDREADY) = A_WeaponReady
	S_WSSWORDDOWN('WSSW', 0, 1.0 / 35.0, S_WSSWORDDOWN) = A_Lower
	S_WSSWORDUP('WSSW', 0, 1.0 / 35.0, S_WSSWORDUP) = A_Raise
	S_WSSWORDATK_1('WSSW', 1, 4.0 / 35.0, S_WSSWORDATK_2) = none
	S_WSSWORDATK_2('WSSW', 2, 3.0 / 35.0, S_WSSWORDATK_3) = none
	S_WSSWORDATK_3('WSSW', 3, 2.0 / 35.0, S_WSSWORDATK_4) = none
	S_WSSWORDATK_4('WSSW', 4, 1.0 / 35.0, S_WSSWORDATK_5) = A_WSSwordAttack
	S_WSSWORDATK_5('WSSW', 5, 2.0 / 35.0, S_WSSWORDATK_6) = none
	S_WSSWORDATK_6('WSSW', 5, 1.0 / 35.0, S_WSSWORDATK_7) = none
	S_WSSWORDATK_7('WSSW', 6, 2.0 / 35.0, S_WSSWORDATK_8) = none
	S_WSSWORDATK_8('WSSW', 4, 7.0 / 35.0, S_WSSWORDATK_9) = none
	S_WSSWORDATK_9('WSSW', 0, 1.0 / 35.0, S_WSSWORDATK_10) = none
	S_WSSWORDATK_10('WSSW', 0, 1.0 / 35.0, S_WSSWORDATK_11, 0, 52) = none
	S_WSSWORDATK_11('WSSW', 0, 1.0 / 35.0, S_WSSWORDATK_12, 0, 44) = none
	S_WSSWORDATK_12('WSSW', 0, 1.0 / 35.0, S_WSSWORDATK_13, 0, 36) = none
	S_WSSWORDATK_13('WSSW', 0, 1.0 / 35.0, S_WSSWORDREADY) = none
	// SECOND STRIKE (NO MANA)
	S_WSSWORDATK2_1('WSSW', 8, 4.0 / 35.0, S_WSSWORDATK2_2) = none
	S_WSSWORDATK2_2('WSSW', 8, 4.0 / 35.0, S_WSSWORDATK2_3) = none
	S_WSSWORDATK2_3('WSSW', 9, 3.0 / 35.0, S_WSSWORDATK2_4) = none
	S_WSSWORDATK2_4('WSSW', 9, 3.0 / 35.0, S_WSSWORDATK2_5) = none
	S_WSSWORDATK2_5('WSSW', 10, 2.0 / 35.0, S_WSSWORDATK2_6) = none
	S_WSSWORDATK2_6('WSSW', 10, 2.0 / 35.0, S_WSSWORDATK2_7) = none
	S_WSSWORDATK2_7('WSSW', 11, 1.0 / 35.0, S_WSSWORDATK2_8) = A_WSSwordAttack
	S_WSSWORDATK2_8('WSSW', 11, 1.0 / 35.0, S_WSSWORDATK2_9) = none
	S_WSSWORDATK2_9('WSSW', 12, 2.0 / 35.0, S_WSSWORDATK2_10) = none
	S_WSSWORDATK2_10('WSSW', 12, 2.0 / 35.0, S_WSSWORDATK2_11) = none
	S_WSSWORDATK2_11('WSSW', 13, 1.0 / 35.0, S_WSSWORDATK2_12) = none
	S_WSSWORDATK2_12('WSSW', 13, 2.0 / 35.0, S_WSSWORDATK2_13) = none
	S_WSSWORDATK2_13('WSSW', 14, 1.0 / 35.0, S_WSSWORDATK2_14) = none
	S_WSSWORDATK2_14('WSSW', 14, 2.0 / 35.0, S_WSSWORDATK_1) = A_ReFire
*/
//[KORAX]
	// MANA STATES
Ready:
	WSWF AABBCCDD 2 Bright A_WeaponReady
	Loop
Deselect:
	WSWF A 1 Bright A_Lower
	Loop
Select:
	WSWF A 1 Bright A_Raise
	Loop
Hold:
	WSWF E 3 Bright Offset(0, 31)
	WSWF E 3 Bright
	WSWF FF 2 Bright
	WSWF GH 1 Bright
	WSWF H 1 Bright A_WSSwordAttack
	WSWF H 1 Bright Offset(-5, 0)
	WSWF I 1 Bright
	WSWF I 1 Bright Offset(-10, 0)
	WSWF J 1 Bright
	WSWF J 1 Bright Offset(-15, 0)
	WSWF J 2 Bright Offset(-20, 0) A_ReFire
	WSWF A 1 Bright Offset(0, 52)
	WSWF B 1 Bright Offset(0, 44)
	WSWF C 1 Bright Offset(0, 36)
	WSWF D 1 Bright
	Goto Ready
	// SECOND STRIKE (MANA CHARGED)
Fire:
	WSWF KK 3 Bright
	WSWF LL 2 Bright
	WSWF MM 2 Bright Offset(0, -2)
	WSWF N 1 Bright Offset(0, 10) A_WSSwordAttack
	WSWF N 1 Bright Offset(-20, 10)
	WSWF O 2 Bright Offset(0, 89)
	WSWF O 2 Bright Offset(-15, 89)
	WSWF P 1 Bright
	WSWF P 1 Bright Offset(-10, 0)
	WSWF Q 2 Bright Offset(-5, 0)
	WSWF Q 2 Bright
	Goto Hold
}

/*SECOND*/
defaultproperties
{
	Slot = 2;
	SelectionOrder = 6600;
	AmmoType1 = ItemManaBlue;
	AmmoUse1 = 5;
	//needsnomana = true;
//	NoMoreManaState = S_WSSWORDATK_5;
	SwordRange = 3.0 * MELEERANGE / 2.0;
	BotCombatDist = 3.0 * MELEERANGE / 2.0;
	wis_mod = true;
	int_mod = false;
	dex_mod = true;
	str_mod = true;
	bBotChooseMelee = true;
	bBotChooseMedium = false;
	bBotChooseRanged = false;
	PickupMessage = "SHORT SWORD";
	Obituary = "$ob_shortsword";
	refire_tics = 19.0;
	fire_tics = 7.0;
}
