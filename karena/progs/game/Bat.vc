//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class Bat : Actor;

// Bat Variables
int LifeTime;		// lifetime counter
int FloatBobIndex;
float TurnAngle;	// turn amount per move (in degrees)

//===========================================================================
//
//  A_BatMove
//
//===========================================================================

final void A_BatMove()
{
	float newangle;
	float newSpeed;

	if (LifeTime < 0)
	{
		SetState(FindState('Death'));
	}
	LifeTime -= 2;	// Called every 2 tics

	if (Random() < 0.5)
	{
		newangle = AngleMod360(Angles.yaw + TurnAngle);
	}
	else
	{
		newangle = AngleMod360(Angles.yaw - TurnAngle);
	}

	// Adjust momentum vector to new direction
	newSpeed = Speed * Random() * 4.0;
	Velocity.x = newSpeed * cos(newangle);
	Velocity.y = newSpeed * sin(newangle);

	if (Random() < 0.05859375)
		PlaySound('BatScream', CHAN_VOICE);

	// Handle Z movement
	Origin.z = Target.Origin.z + 2.0 * Level.Game.FloatBobOffsets[FloatBobIndex];
	FloatBobIndex = (FloatBobIndex + 3) & 63;
}

states
{
Spawn:
	ABAT ABC 2 A_BatMove
	Loop
Death:
	ABAT A 2
	Stop
}

defaultproperties
{
	Radius = 3.0;
	Height = 3.0;
	Speed = 175.0;
	bMissile = true;
	bNoBlockmap = true;
	bNoGravity = true;
	bNoTeleport = true;
	bBloodSplatter = true;
}
