//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class FogSpawner : Actor
	__mobjinfo__(10000);

//==========================================================================
//
// Fog Variables:
//
//      args[0]     Speed (0..10) of fog
//      args[1]     Angle of spread (0..128)
//      args[2]     Frequency of spawn (1..10)
//      args[3]     Lifetime countdown
//      args[4]     Boolean: fog moving?
//
//==========================================================================

int SpawnFrequencyCount;	// Counter for spawn frequency

//==========================================================================
//
//  A_FogSpawn
//
//==========================================================================

final void A_FogSpawn()
{
	Actor A;
	float delta;

	if (SpawnFrequencyCount-- > 0)
		return;

	SpawnFrequencyCount = Args[2];	// Reset frequency count

	switch (P_Random() % 3)
	{
	case 0:
		A = Spawn(FogPatchSmall, Origin);
		break;
	case 1:
		A = Spawn(FogPatchMedium, Origin);
		break;
	case 2:
		A = Spawn(FogPatchLarge, Origin);
		break;
	}

	if (A)
	{
		delta = itof(Args[1]);
		if (delta == 0.0)
			delta = 1.0;
		A.Angles.yaw = AngleMod360(Angles.yaw +
			((Random() * delta) - (delta * 0.5)) * 360.0 / 256.0);
		A.Target = self;
		if (Args[0] < 1)
			Args[0] = 1;
		A.Args[0] = (P_Random() % (Args[0])) + 1;	// P_Random speed
		A.Args[3] = Args[3];	// Set lifetime
		A.Args[4] = 1;	// Set to moving
		FogPatch(A).WeaveIndex = P_Random() & 63;
	}
}

__states__
{
	S_SPAWNFOG1('', 0, 20.0 / 35.0, S_SPAWNFOG1) = A_FogSpawn
}

defaultproperties
{
	bHidden = true;
	bNoBlockmap = true;
	bNoPassMobj = true;
	bFloatBob = true;
	IdleState = S_SPAWNFOG1;
}
