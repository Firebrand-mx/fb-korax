//**************************************************************************
//**
//**	    ##   ##   ####   ######     ##    ##     ##
//**	    ##  ##   ##  ##  ##   ##  ##  ##   ### ###
//**	    ## ##   ##    ## ##   ## ##    ##   #####
//**	    ######  ##    ## #####   ########   #####
//**	    ## ###   ##  ##  ######  ##    ##  ### ###
//**	    ##   ##   ####   ##  ### ##    ## ##     ##
//**
//**	        ##    ######    ##### ###   ##    ##
//**	      ##  ##  ##   ##  #####  ####  ##  ##  ##
//**	     ##    ## ##   ## ##      ##### ## ##    ##
//**	     ######## #####   #####   ## ##### ########
//**	     ##    ## ######  ##      ##  #### ##    ##
//**	     ##    ## ##  ###  #####  ##   ### ##    ##
//**
//**    $Id$
//**
//**    Copyright (C) 2004-2006 Korax Heritage Team
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class KArenaPlayerReplicationInfo : PlayerReplicationInfo;

int		plclass;
int		level;
bool	IsBot;		// true if player is bot, false if is human
int		team;		// colour
int		score;		// player score (game mode dependent)
int		nplkills;	// non-player kills
int		deaths;

replication
{
	reliable if (true)
		plclass, level, IsBot, team, score, nplkills, deaths;
}

//==========================================================================
//
//  Tick
//
//==========================================================================

void Tick(float DeltaTime)
{
	Player		P;
	int			j;

	::Tick(DeltaTime);

	P = Player(Player);
	plclass = P.PClass;
	level = P.exp_level;
	IsBot = P.bIsBot;
	team = P.Colour;
	score = P.Score;
	nplkills = P.KillsCount;
	deaths = 0;

	// [CW] counts times all other players killed this one
	// (and times he was killed by self/monsters/enviroment)
	for (j = 0; j < MAXPLAYERS; j++)
	{
		if (!Level.Game.Players[j])
			break;
		if (Level.Game.Players[j] == P)
			deaths -= Level.Game.Players[j].FragsStats[PlayerNum];
		else
			deaths += Level.Game.Players[j].FragsStats[PlayerNum];
	}
}

defaultproperties
{
}
