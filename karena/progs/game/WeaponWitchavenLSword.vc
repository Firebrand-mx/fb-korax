//**************************************************************************
//**
//**	    ##   ##   ####   ######     ##    ##     ##
//**	    ##  ##   ##  ##  ##   ##  ##  ##   ### ###
//**	    ## ##   ##    ## ##   ## ##    ##   #####
//**	    ######  ##    ## #####   ########   #####
//**	    ## ###   ##  ##  ######  ##    ##  ### ###
//**	    ##   ##   ####   ##  ### ##    ## ##     ##
//**
//**		##    ######    ##### ###   ##    ##
//**	      ##  ##  ##   ##  #####  ####  ##  ##  ##
//**	     ##    ## ##   ## ##      ##### ## ##    ##
//**	     ######## #####   #####   ## ##### ########
//**	     ##    ## ######  ##      ##  #### ##    ##
//**	     ##    ## ##  ###  #####  ##   ### ##    ##
//**
//**    $Id$
//**
//**    Copyright (C) 2004-2006 Korax Heritage Team
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class WeaponWitchavenLSword : WeaponEx;

float LongSwordRange;

//==========================================================================
//
//  A_WLShieldProtect
//
//  [FB] This is protective shield effect
//
//==========================================================================

final void A_WLShieldProtect()
{
	int hits;

	if (Owner.Player.Buttons & BT_ATTACK)
	{
		hits = (Player(Owner.Player).dam_am * (60 + Player(Owner.Player).constitution) / 15);

		if(hits > 0)
		{
			if(Player(Owner.Player).GiveBody(hits))
			{
				UseWeaponMana();
			}
		}
	}
}

//==========================================================================
//
//  A_WLSwordAttack
//
//  [FB] This is the attack itself
//
//==========================================================================

final void A_WLSwordAttack() 
{
	Actor		pmo = Actor(Owner);
	float		power;
	int			damage;
	int			useMana;
	TAVec		angles;
	TVec		vforward;
	EntityEx	AimTarget;

	damage = 50; //40 + (P_Random() & 15) + (P_Random() & 7);
	if (str_mod)
	{
		if(!active_damage)
		{
			damage = damage * Player(Owner.Player).strength / 10;
		}
		else // [FB] PI Damage
		{
			damage = (damage * Player(Owner.Player).strength / 10) * ftoi(3.1415);
		}
	}
	power = 0.0;
	damage <<= 1;
	power = 6.0;
	useMana = 1;

	AimTarget = pmo.AimEx(vforward, LongSwordRange, 45.0 / 16.0, 16, MELEERANGE);
	if (AimTarget)
	{
		VectorAngles(&vforward, &angles);
		if (pmo.LineAttack(vforward, LongSwordRange, damage, AxePuff))
		{
			pmo.PlaySound('FighterHammerMiss', CHAN_WEAPON);
		}
		if (AimTarget.bMonster || AimTarget.bIsPlayer)
		{
			AimTarget.Thrust(angles.yaw, power);
		}
		Player(Owner.Player).AdjustPlayerAngle(AimTarget);
		useMana++;
	}
	else
	{
		// didn't find any creatures, so try to strike any walls
		if (pmo.LineAttack(vforward, MELEERANGE, damage, HammerPuff))
		{
			pmo.PlaySound('FighterHammerMiss', CHAN_WEAPON);
		}
	}

	if (useMana == 2)
	{
		// [FB] Since we are tweaking the mana use here, make sure it's the default!
		AmmoUse1 = 15;
		UseWeaponMana();
	}
}

__states__
{
	S_WLSWORDDOWN_G('WDHP', 0, 1.0 / 35.0, S_WLSWORDDOWN_G) = A_Lower
	S_WLSWORDUP_G('WDHP', 0, 1.0 / 35.0, S_WLSWORDUP_G) = A_Raise

// 	** FIRST SHIELD STATE **

	S_WLSWORDREADY_G('WDHP', 0, 2.0 / 35.0, S_WLSWORDREADY_G1) = A_WeaponReady
	S_WLSWORDREADY_G1('WDHP', 0, 2.0 / 35.0, S_WLSWORDREADY_G2) = A_WeaponReady
	S_WLSWORDREADY_G2('WDHP', 0, 2.0 / 35.0, S_WLSWORDREADY_G3) = A_WeaponReady
	S_WLSWORDREADY_G3('WDHP', 0, 2.0 / 35.0, S_WLSWORDREADY_G4) = A_WeaponReady
	S_WLSWORDREADY_G4('WDHP', 1, 2.0 / 35.0, S_WLSWORDREADY_G5) = A_WeaponReady
	S_WLSWORDREADY_G5('WDHP', 1, 2.0 / 35.0, S_WLSWORDREADY_G6) = A_WeaponReady
	S_WLSWORDREADY_G6('WDHP', 2, 2.0 / 35.0, S_WLSWORDREADY_G7) = A_WeaponReady
	S_WLSWORDREADY_G7('WDHP', 2, 2.0 / 35.0, S_WLSWORDREADY_G8) = A_WeaponReady
	S_WLSWORDREADY_G8('WDHP', 3, 2.0 / 35.0, S_WLSWORDREADY_G9) = A_WeaponReady
	S_WLSWORDREADY_G9('WDHP', 3, 2.0 / 35.0, S_WLSWORDREADY_G10) = A_WeaponReady
	S_WLSWORDREADY_G10('WDHP', 4, 2.0 / 35.0, S_WLSWORDREADY_G11) = A_WeaponReady
	S_WLSWORDREADY_G11('WDHP', 4, 2.0 / 35.0, S_WLSWORDREADY_G) = A_WeaponReady

// 	** SECOND SHIELD STATE **

	S_WLSWORDREADY1_G('WDH1', 0, 2.0 / 35.0, S_WLSWORDREADY1_G1) = A_WeaponReady
	S_WLSWORDREADY1_G1('WDH1', 0, 2.0 / 35.0, S_WLSWORDREADY1_G2) = A_WeaponReady
	S_WLSWORDREADY1_G2('WDH1', 0, 2.0 / 35.0, S_WLSWORDREADY1_G3) = A_WeaponReady
	S_WLSWORDREADY1_G3('WDH1', 0, 2.0 / 35.0, S_WLSWORDREADY1_G4) = A_WeaponReady
	S_WLSWORDREADY1_G4('WDH1', 1, 2.0 / 35.0, S_WLSWORDREADY1_G5) = A_WeaponReady
	S_WLSWORDREADY1_G5('WDH1', 1, 2.0 / 35.0, S_WLSWORDREADY1_G6) = A_WeaponReady
	S_WLSWORDREADY1_G6('WDH1', 2, 2.0 / 35.0, S_WLSWORDREADY1_G7) = A_WeaponReady
	S_WLSWORDREADY1_G7('WDH1', 2, 2.0 / 35.0, S_WLSWORDREADY1_G8) = A_WeaponReady
	S_WLSWORDREADY1_G8('WDH1', 3, 2.0 / 35.0, S_WLSWORDREADY1_G9) = A_WeaponReady
	S_WLSWORDREADY1_G9('WDH1', 3, 2.0 / 35.0, S_WLSWORDREADY1_G10) = A_WeaponReady
	S_WLSWORDREADY1_G10('WDH1', 4, 2.0 / 35.0, S_WLSWORDREADY1_G11) = A_WeaponReady
	S_WLSWORDREADY1_G11('WDH1', 4, 2.0 / 35.0, S_WLSWORDREADY1_G) = A_WeaponReady

// 	** THIRD SHIELD STATE **

	S_WLSWORDREADY2_G('WDH2', 0, 2.0 / 35.0, S_WLSWORDREADY2_G1) = A_WeaponReady
	S_WLSWORDREADY2_G1('WDH2', 0, 2.0 / 35.0, S_WLSWORDREADY2_G2) = A_WeaponReady
	S_WLSWORDREADY2_G2('WDH2', 0, 2.0 / 35.0, S_WLSWORDREADY2_G3) = A_WeaponReady
	S_WLSWORDREADY2_G3('WDH2', 0, 2.0 / 35.0, S_WLSWORDREADY2_G4) = A_WeaponReady
	S_WLSWORDREADY2_G4('WDH2', 1, 2.0 / 35.0, S_WLSWORDREADY2_G5) = A_WeaponReady
	S_WLSWORDREADY2_G5('WDH2', 1, 2.0 / 35.0, S_WLSWORDREADY2_G6) = A_WeaponReady
	S_WLSWORDREADY2_G6('WDH2', 2, 2.0 / 35.0, S_WLSWORDREADY2_G7) = A_WeaponReady
	S_WLSWORDREADY2_G7('WDH2', 2, 2.0 / 35.0, S_WLSWORDREADY2_G8) = A_WeaponReady
	S_WLSWORDREADY2_G8('WDH2', 3, 2.0 / 35.0, S_WLSWORDREADY2_G9) = A_WeaponReady
	S_WLSWORDREADY2_G9('WDH2', 3, 2.0 / 35.0, S_WLSWORDREADY2_G10) = A_WeaponReady
	S_WLSWORDREADY2_G10('WDH2', 4, 2.0 / 35.0, S_WLSWORDREADY2_G11) = A_WeaponReady
	S_WLSWORDREADY2_G11('WDH2', 4, 2.0 / 35.0, S_WLSWORDREADY2_G) = A_WeaponReady

// 	** FOURTH SHIELD STATE**

	S_WLSWORDREADY3_G('WDH3', 0, 2.0 / 35.0, S_WLSWORDREADY3_G1) = A_WeaponReady
	S_WLSWORDREADY3_G1('WDH3', 0, 2.0 / 35.0, S_WLSWORDREADY3_G2) = A_WeaponReady
	S_WLSWORDREADY3_G2('WDH3', 0, 2.0 / 35.0, S_WLSWORDREADY3_G3) = A_WeaponReady
	S_WLSWORDREADY3_G3('WDH3', 0, 2.0 / 35.0, S_WLSWORDREADY3_G4) = A_WeaponReady
	S_WLSWORDREADY3_G4('WDH3', 1, 2.0 / 35.0, S_WLSWORDREADY3_G5) = A_WeaponReady
	S_WLSWORDREADY3_G5('WDH3', 1, 2.0 / 35.0, S_WLSWORDREADY3_G6) = A_WeaponReady
	S_WLSWORDREADY3_G6('WDH3', 2, 2.0 / 35.0, S_WLSWORDREADY3_G7) = A_WeaponReady
	S_WLSWORDREADY3_G7('WDH3', 2, 2.0 / 35.0, S_WLSWORDREADY3_G8) = A_WeaponReady
	S_WLSWORDREADY3_G8('WDH3', 3, 2.0 / 35.0, S_WLSWORDREADY3_G9) = A_WeaponReady
	S_WLSWORDREADY3_G9('WDH3', 3, 2.0 / 35.0, S_WLSWORDREADY3_G10) = A_WeaponReady
	S_WLSWORDREADY3_G10('WDH3', 4, 2.0 / 35.0, S_WLSWORDREADY3_G11) = A_WeaponReady
	S_WLSWORDREADY3_G11('WDH3', 4, 2.0 / 35.0, S_WLSWORDREADY3_G) = A_WeaponReady

// 	ATTACK FRAMES
//	FIRST STRIKE

	S_WLSWORDATK_G1('WDHP', 5, 3.0 / 35.0, S_WLSWORDATK_G2) = none
	S_WLSWORDATK_G2('WDHP', 5, 3.0 / 35.0, S_WLSWORDATK_G3) = none
	S_WLSWORDATK_G3('WDHP', 6, 2.0 / 35.0, S_WLSWORDATK_G4) = none
	S_WLSWORDATK_G4('WDHP', 6, 2.0 / 35.0, S_WLSWORDATK_G5) = none
	S_WLSWORDATK_G5('WDHP', 7, 1.0 / 35.0, S_WLSWORDATK_G6) = none
	S_WLSWORDATK_G6('WDHP', 7, 1.0 / 35.0, S_WLSWORDATK_G7) = none
	S_WLSWORDATK_G7('WDHP', 8, 1.0 / 35.0, S_WLSWORDATK_G8) = A_WLSwordAttack
	S_WLSWORDATK_G8('WDHP', 8, 1.0 / 35.0, S_WLSWORDATK_G9) = none
	S_WLSWORDATK_G9('WDHP', 9, 1.0 / 35.0, S_WLSWORDATK_G10) = none
	S_WLSWORDATK_G10('WDHP', 9, 1.0 / 35.0, S_WLSWORDATK_G11) = none
	S_WLSWORDATK_G11('WDHP', 10, 1.0 / 35.0, S_WLSWORDATK_G12) = none
	S_WLSWORDATK_G12('WDHP', 10, 1.0 / 35.0, S_WLSWORDATK_G13) = none
	S_WLSWORDATK_G13('WDHP', 11, 1.0 / 35.0, S_WLSWORDATK_G14, 0, -2) = none
	S_WLSWORDATK_G14('WDHP', 11, 1.0 / 35.0, S_WLSWORDATK_G15, -5, 0) = none
	S_WLSWORDATK_G15('WDHP', 12, 1.0 / 35.0, S_WLSWORDATK_G16, 0, 39) = none
	S_WLSWORDATK_G16('WDHP', 12, 1.0 / 35.0, S_WLSWORDATK_G17, -10, 0) = none
	S_WLSWORDATK_G17('WDHP', 13, 1.0 / 35.0, S_WLSWORDATK_G18) = none
	S_WLSWORDATK_G18('WDHP', 13, 2.0 / 35.0, S_WLSWORDATK_G19, -15, 0) = none
	S_WLSWORDATK_G19('WDHP', 13, 2.0 / 35.0, S_WLSWORDATK2_G1, -20, 0) = none

// 	SECOND STRIKE

	S_WLSWORDATK2_G1('WDHP', 14, 3.0 / 35.0, S_WLSWORDATK2_G2) = none
	S_WLSWORDATK2_G2('WDHP', 14, 3.0 / 35.0, S_WLSWORDATK2_G3, -35, 0) = none
	S_WLSWORDATK2_G3('WDHP', 15, 2.0 / 35.0, S_WLSWORDATK2_G4) = none
	S_WLSWORDATK2_G4('WDHP', 15, 2.0 / 35.0, S_WLSWORDATK2_G5, -30, 0) = none
	S_WLSWORDATK2_G5('WDHP', 16, 1.0 / 35.0, S_WLSWORDATK2_G6) = none
	S_WLSWORDATK2_G6('WDHP', 16, 1.0 / 35.0, S_WLSWORDATK2_G7, -25, 0) = none
	S_WLSWORDATK2_G7('WDHP', 17, 1.0 / 35.0, S_WLSWORDATK2_G8, 0, -2) = A_WLSwordAttack
	S_WLSWORDATK2_G8('WDHP', 17, 1.0 / 35.0, S_WLSWORDATK2_G9, -20, -2) = none
	S_WLSWORDATK2_G9('WDHP', 18, 1.0 / 35.0, S_WLSWORDATK2_G10) = none
	S_WLSWORDATK2_G10('WDHP', 18, 1.0 / 35.0, S_WLSWORDATK2_G11, -15, 0) = none
	S_WLSWORDATK2_G11('WDHP', 19, 1.0 / 35.0, S_WLSWORDATK2_G12, 0, 39) = none
	S_WLSWORDATK2_G12('WDHP', 19, 1.0 / 35.0, S_WLSWORDATK2_G13, -10, 0) = none
	S_WLSWORDATK2_G13('WDHP', 20, 1.0 / 35.0, S_WLSWORDATK2_G14) = none
	S_WLSWORDATK2_G14('WDHP', 20, 1.0 / 35.0, S_WLSWORDATK2_G15, -5, 0) = none
	S_WLSWORDATK2_G15('WDHP', 21, 2.0 / 35.0, S_WLSWORDATK2_G16) = A_ReFire
	S_WLSWORDATK2_G16('WDHP', 21, 2.0 / 35.0, S_WLSWORDATK2_G17, -10, 0) = none
	S_WLSWORDATK2_G17('WDHP', 0, 1.0 / 35.0, S_WLSWORDATK2_G18, 0, 60) = none
	S_WLSWORDATK2_G18('WDHP', 1, 1.0 / 35.0, S_WLSWORDATK2_G19, 0, 52) = none
	S_WLSWORDATK2_G19('WDHP', 2, 1.0 / 35.0, S_WLSWORDATK2_G20, 0, 44) = none
	S_WLSWORDATK2_G20('WDHP', 3, 1.0 / 35.0, S_WLSWORDATK2_G21, 0, 36) = none
	S_WLSWORDATK2_G21('WDHP', 4, 1.0 / 35.0, S_WLSWORDREADY_G) = none

// [FB] From here down come the shield action states
//	--- Shield Action States --- 
	S_WSHIELD1_G1('SHDS', 0, 2.0 / 35.0, S_WSHIELD1_G2) = A_WLShieldProtect
	S_WSHIELD1_G2('SHDS', 0, 2.0 / 35.0, S_WSHIELD1_G3) = A_ReFire
	S_WSHIELD1_G3('SHDS', 0, 2.0 / 35.0, S_WSHIELDX_G) = none
	S_WSHIELD2_G1('SHDS', 1, 2.0 / 35.0, S_WSHIELD2_G2) = A_WLShieldProtect
	S_WSHIELD2_G2('SHDS', 1, 2.0 / 35.0, S_WSHIELD2_G3) = A_ReFire
	S_WSHIELD2_G3('SHDS', 1, 2.0 / 35.0, S_WSHIELDX_G) = none
	S_WSHIELD3_G1('SHDS', 2, 2.0 / 35.0, S_WSHIELD3_G2) = A_WLShieldProtect
	S_WSHIELD3_G2('SHDS', 2, 2.0 / 35.0, S_WSHIELD3_G3) = A_ReFire
	S_WSHIELD3_G3('SHDS', 2, 2.0 / 35.0, S_WSHIELDX_G) = none
	S_WSHIELD4_G1('SHDS', 3, 2.0 / 35.0, S_WSHIELD4_G2) = A_WLShieldProtect
	S_WSHIELD4_G2('SHDS', 3, 2.0 / 35.0, S_WSHIELD4_G3) = A_ReFire
	S_WSHIELD4_G3('SHDS', 3, 2.0 / 35.0, S_WSHIELDX_G) = none
	S_WSHIELDX_G('WDHP', 0, 2.0 / 35.0, S_WLSWORDATK_G1) = none
}

/*FIFTH*/
defaultproperties
{
	WeaponType = HexenDefs::WP_FIFTH;
	Slot = 5;
	SelectionOrder = 3600;
	AmmoType1 = ItemManaBlue;
	AmmoUse1 = 15;
	UpState = S_WLSWORDUP_G;
	DownState = S_WLSWORDDOWN_G;
	ReadyState = S_WLSWORDREADY_G;
	AttackState = S_WSHIELD1_G1;
	HoldAttackState = S_WSHIELD1_G1;
	LongSwordRange = 4.0 * MELEERANGE;
	wis_mod = true;
	int_mod = false;
	dex_mod = true;
	str_mod = true;
	bBotChooseMelee = true;
	bBotChooseMedium = false;
	bBotChooseRanged = false;
	PickUpMessage = "LONG SWORD";
	Obituary = "$ob_longsword";
}
