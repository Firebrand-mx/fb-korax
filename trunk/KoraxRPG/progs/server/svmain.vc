//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

// MACROS ------------------------------------------------------------------

// CONSTANTS ---------------------------------------------------------------

// TYPES -------------------------------------------------------------------

// FUNCTION PROTOTYPES -----------------------------------------------------

// DATA DECLARATIONS -------------------------------------------------------

// CODE --------------------------------------------------------------------

//==========================================================================
//
//  CreateLevelInfo
//
//==========================================================================

LevelInfo CreateLevelInfo()
{
	return NewSpecialThinker(HexenLevelInfo);
}

//==========================================================================
//
//  G_InitNew
//
//==========================================================================

void G_InitNew(int skill)
{
	nomonsters = GetCvar("NoMonsters");
	fastparm = gameskill == sk_nightmare || GetCvar("Fast");
	randomclass = GetCvar("RandomClass");
}

//==========================================================================
//
//  StartLevelLoading
//
//==========================================================================

void StartLevelLoading()
{
	bodyqueslot = 0;
}

//==========================================================================
//
//  EndLevelLoading
//
//==========================================================================

void EndLevelLoading()
{
}

//==========================================================================
//
//  main
//
//==========================================================================

void main()
{
	SetSeqTrans('Platform', 0, SEQ_Platform);
	SetSeqTrans('Platform', 1, SEQ_Platform);	// a 'heavy' platform is just a platform
	SetSeqTrans('PlatformMetal', 2, SEQ_Platform);
	SetSeqTrans('Platform', 3, SEQ_Platform);	// same with a 'creak' platform
	SetSeqTrans('Silence', 4, SEQ_Platform);
	SetSeqTrans('Lava', 5, SEQ_Platform);
	SetSeqTrans('Water', 6, SEQ_Platform);
	SetSeqTrans('Ice', 7, SEQ_Platform);
	SetSeqTrans('Earth', 8, SEQ_Platform);
	SetSeqTrans('PlatformMetal2', 9, SEQ_Platform);

	SetSeqTrans('DoorNormal', 0, SEQ_Door);
	SetSeqTrans('DoorHeavy', 1, SEQ_Door);
	SetSeqTrans('DoorMetal', 2, SEQ_Door);
	SetSeqTrans('DoorCreak', 3, SEQ_Door);
	SetSeqTrans('Silence', 4, SEQ_Door);
	SetSeqTrans('Lava', 5, SEQ_Door);
	SetSeqTrans('Water', 6, SEQ_Door);
	SetSeqTrans('Ice', 7, SEQ_Door);
	SetSeqTrans('Earth', 8, SEQ_Door);
	SetSeqTrans('DoorMetal2', 9, SEQ_Door);

	SetSeqTrans('Wind', 0, SEQ_Environment);
}

//**************************************************************************
//
//  $Log$
//  Revision 1.3  2006/02/06 19:55:57  firebrand_kh
//  Added latest Vavoom changes
//
//  Revision 1.7  2006/02/05 18:50:55  dj_jl
//  Moved common utils to level info class or built-in.
//
//  Revision 1.6  2005/12/27 22:22:28  dj_jl
//  Created level info class, moved action special handling to it.
//
//  Revision 1.5  2005/11/20 12:41:35  dj_jl
//  Implemented support for sound sequence extensions.
//
//  Revision 1.4  2004/11/01 07:38:23  dj_jl
//  Almost all Hexen line specials are available in all games.
//
//  Revision 1.3  2002/01/07 12:25:58  dj_jl
//  Changed copyright year
//
//  Revision 1.2  2001/09/27 17:09:51  dj_jl
//  Changed LavaInflictor to pointer
//
//  Revision 1.1  2001/09/24 17:27:47  dj_jl
//  Renaming
//
//  Revision 1.2  2001/07/27 14:27:52  dj_jl
//  Update with Id-s and Log-s, some fixes
//
//**************************************************************************
