//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id: Inventory.vc 3787 2008-09-15 22:10:09Z dj_jl $
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************
//**
//**	Base class for all items that a player can carry.
//**
//**************************************************************************

class KRPGInventory : Inventory
	abstract;

//	Can be displayed in the spell bar / spell book
bool				bSpellBar;

//==========================================================================
//
//	PrevSpl
//
//	Return previous item with bSpellBar flag set.
//
//==========================================================================

Inventory PrevSpl()
{
	KRPGInventory Item = KRPGInventory(Inventory);
	while (Item && !Item.bSpellBar)
	{
		Item = KRPGInventory(Item.Inventory);
	}
	return Inventory(Item);
}

//==========================================================================
//
//	NextSpl
//
//	Return next item with bSpellBar flag set.
//
//==========================================================================

Inventory NextSpl()
{
	KRPGInventory Ret = none;
	KRPGInventory Item = KRPGInventory(EntityEx(Owner).Inventory);
	while (Item && Item != self)
	{
		if (Item.bSpellBar)
		{
			Ret = Item;
		}
		Item = KRPGInventory(Item.Inventory);
	}
	return Inventory(Ret);
}

defaultproperties
{
}
