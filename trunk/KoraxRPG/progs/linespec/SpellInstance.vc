//**************************************************************************
//**
//**	    ##   ##   ####   ######     ##    ##     ##
//**	    ##  ##   ##  ##  ##   ##  ##  ##   ### ###
//**	    ## ##   ##    ## ##   ## ##    ##   #####
//**	    ######  ##    ## #####   ########   #####
//**	    ## ###   ##  ##  ## ###  ##    ##  ### ###
//**	    ##   ##   ####   ##  ### ##    ## ##     ##
//**
//**				   ######  #####   ######
//**	               ##   ## ##  ## ##    ##
//**	     		   ##   ## ##  ## ##   
//**	               #####   #####  ##  ####
//**	     		   ## ###  ##     ###   ##
//**	     		   ##  ### ##      ######
//**
//**    $Id$
//**
//**    Copyright (C) 2004-2008 Korax Heritage Team
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class SpellInstance : Thinker
	abstract;

EntityEx	EInstigator;	// the caster object

name	CastSound;

bool	bIsNegative;
bool	bIsMagic;

int		Level;

float	LifeTime;
float	LifeDuration;

int		SpiritPowerRequired;

//==========================================================================
//
//	Tick
//
//==========================================================================

void Tick(float deltaTime)
{
	::Tick(deltaTime);

	if (LifeDuration > 0.0)
	{
		LifeTime -= deltaTime;
		if (LifeTime <= 0.0)
		{
			Dispell();
			return;
		}
	}

	Do(deltaTime);
}

//==========================================================================
//
//	Do
//
//==========================================================================

void Do(float deltaTime)
{
}

//==========================================================================
//
//	Activate
//
//==========================================================================

void Activate()
{
	LifeTime = LifeDuration;
}

//==========================================================================
//
//	Deactivate
//
//==========================================================================

void Deactivate()
{
}

//==========================================================================
//
//	Dispell
//
//==========================================================================

void Dispell()
{
	Deactivate();
	Destroy();
}


defaultproperties
{
	bIsNegative = false;
	bIsMagic = true;

	LifeTime = 0.0;
	LifeDuration = 0.0;
}
