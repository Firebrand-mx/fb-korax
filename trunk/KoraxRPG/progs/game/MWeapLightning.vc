//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class MWeapLightning : MageWeapon
	__mobjinfo__(8040);

//==========================================================================
//
//  A_LightningReady
//
//==========================================================================

final void A_LightningReady()
{
	A_WeaponReady();
	if (P_Random() < 160)
	{
		Owner.PlaySound('MageLightningReady', CHAN_WEAPON);
	}
}

//==========================================================================
//
//  A_MLightningAttack
//
//==========================================================================

final void A_MLightningAttack()
{
	LightningFloor fmo;
	LightningCeiling cmo;

	fmo = LightningFloor(Actor(Owner).SpawnPlayerMissile(LightningFloor));
	cmo = LightningCeiling(Actor(Owner).SpawnPlayerMissile(LightningCeiling));
	if (fmo)
	{
		fmo.ZigZagCount = 0;
		fmo.LightningLink = cmo;
		fmo.A_LightningZap();
	}
	if (cmo)
	{
		cmo.Tracer = none;	// mobj that it will track
		cmo.LightningLink = fmo;
		cmo.A_LightningZap();
	}
	Owner.PlaySound('MageLightningFire', CHAN_WEAPON);
	DepleteAmmoEx();
}

states
{
Ready:
	MLNG AAAAA 1 Bright A_WeaponReady
	MLNG A 1 Bright A_LightningReady
	MLNG BBBBBBCCCCC 1 Bright A_WeaponReady
	MLNG C 1 Bright A_LightningReady
	MLNG BBBBBB 1 Bright A_WeaponReady
	Loop
Deselect:
	MLNG A 1 Bright A_Lower
	Wait
Select:
	MLNG A 1 Bright A_Raise
	Wait
Fire:
	MLNG DE 3 Bright
	MLNG F 4 Bright A_MLightningAttack
	MLNG G 4 Bright
	MLNG H 3 Bright
	MLNG I 3 Bright
	MLNG I 6 Bright Offset(0, 199)
	MLNG C 2 Bright Offset(0, 55)
	MLNG B 2 Bright Offset(0, 50)
	MLNG B 2 Bright Offset(0, 45)
	MLNG B 2 Bright Offset(0, 40)
	Goto Ready
Spawn:
	WMLG ABCDEFGH 4 Bright
	Loop
}

defaultproperties
{
	WeaponClass = HexenDefs::PCLASS_MAGE;
	Slot = 3;
	SelectionOrder = 1100;
	AmmoType1 = Mana2;
	AmmoUse1 = 5;
	AmmoGive1 = 25;
	PSpriteSY = 20.0;
	bNoGravity = true;
	PickupMessage = "$txt_weapon_m3";
	BotCombatDist = 384.0;
	bBotProjectile = true;
	bDynamicLight = true;
	DLightColour = RGB(74, 77, 196);
	DLightRadius = 86.0;
}
