//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class CFlameMissile : Projectile;

float FlameSpeed;
Actor bmo;

//==========================================================================
//
//	BlasterHitMobj
//
//==========================================================================

bool BlasterHitMobj(Entity Other)
{
	bmo = Actor(Other);
	return ::BlasterHitMobj(Other);
}

//===========================================================================
//
//	SpawnBlasterEffects
//
//===========================================================================

void SpawnBlasterEffects()
{
	float z;
	Actor A;

	if (!--Special1)
	{
		Special1 = 4;
		z = Origin.z - 12.0;
		if (z < FloorZ)
		{
			z = FloorZ;
		}
		A = Spawn(CFlameFloor, vector(Origin.x, Origin.y, z));
		if (A)
		{
			A.Angles.yaw = Angles.yaw;
		}
	}
}

//==========================================================================
//
//	A_CFlamePuff
//
//==========================================================================

final void A_CFlamePuff()
{
	bInvisible = false;
	Velocity = vector(0.0, 0.0, 0.0);
	PlaySound('ClericFlameExplode', CHAN_VOICE);
}

//==========================================================================
//
//  A_CFlameMissile
//
//==========================================================================

final void A_CFlameMissile()
{
	int i;
	float an;
	float dist;
	Actor A;

	bInvisible = false;
	PlaySound('ClericFlameExplode', CHAN_VOICE);
	if (bmo && bmo.bShootable)
	{
		// Hit something, so spawn the flame circle around the thing
		dist = bmo.Radius + 18.0;
		for (i = 0; i < 4; i++)
		{
			an = itof(i) * 45.0;
			A = Spawn(CircleFlame, bmo.Origin +
				vector(dist * cos(an), dist * sin(an), 5.0));
			if (A)
			{
				A.Angles.yaw = an;
				A.Target = Target;
				A.Velocity.x = FlameSpeed * cos(an);
				A.Velocity.y = FlameSpeed * sin(an);
				A.Special1f = A.Velocity.x;
				A.Special2f = A.Velocity.y;
				A.StateTime -= Random() * 0.1;
			}
			A = Spawn(CircleFlame, bmo.Origin +
				vector(-dist * cos(an), -dist * sin(an), 5.0));
			if (A)
			{
				A.Angles.yaw = AngleMod360(180.0 + an);
				A.Target = Target;
				A.Velocity.x = -FlameSpeed * cos(an);
				A.Velocity.y = -FlameSpeed * sin(an);
				A.Special1f = A.Velocity.x;
				A.Special2f = A.Velocity.y;
				A.StateTime -= Random() * 0.1;
			}
		}
		SetState(FindState('FlamePuff'));
	}
}

states
{
Spawn:
	CFFX A 4 Bright
	CFFX A 1 A_CFlamePuff
	Goto Death+1
Death:
	CFFX A 1 Bright A_CFlameMissile
	CFFX ABC 3 Bright
	CFFX D 4 Bright
	CFFX E 3 Bright
	CFFX F 4 Bright
	CFFX G 3 Bright
	CFFX H 4 Bright
	CFFX I 3 Bright
	CFFX J 4 Bright
	CFFX K 3 Bright
	CFFX L 4 Bright
	CFFX M 3 Bright
	Stop
FlamePuff:
	CFFX ABC 3 Bright
	CFFX D 4 Bright
	CFFX E 3 Bright
	CFFX F 4 Bright
	CFFX G 3 Bright
	CFFX H 4 Bright
	CFFX I 3 Bright
	CFFX C 3 Bright
	CFFX D 4 Bright
	CFFX E 3 Bright
	CFFX F 4 Bright
	CFFX G 3 Bright
	CFFX H 4 Bright
	CFFX I 3 Bright
	CFFX J 4 Bright
	CFFX K 3 Bright
	CFFX L 4 Bright
	CFFX M 3 Bright
	Stop
}

defaultproperties
{
	Radius = 14.0;
	Height = 8.0;
	Speed = 7000.0;
	MissileDamage = 8;
	RenderStyle = STYLE_Add;
	bInvisible = true;
	DamageType = 'Fire';
	bBlaster = true;
	FlameSpeed = 9.0 / 20.0 * 35.0;
}
