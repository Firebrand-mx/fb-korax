//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class KRPGHeresiarch : IntelligentActor
	__mobjinfo__(10080);

//
// Sorcerer Variables
//

//      Special1f       Angle of ball 1 (all others relative to that)
//      SpecialCID      which ball to stop at in stop mode (MT_???)
//      Args[0]         Defense time
//      Args[1]         Number of full rotations since stopping mode
//      Args[2]         Target orbit speed for acceleration/deceleration
//      Args[3]         Movement mode (see SORC_ macros)
//      Args[4]         Current ball orbit speed

//==========================================================================
//
//  Died
//
//==========================================================================

void Died(EntityEx source, EntityEx inflictor)
{
	//	For Heresiarch special is actually the script to be executed.
	int Script = Special;
	Special = 0;

	::Died(source, inflictor);

	if (Script)
	{
		XLevel.StartACS(Script, 0, 0, 0, 0, self, NULL, 0, false, false);
	}
}

states
{
Spawn:
	SORC A 3
	SORC A 2 A_SorcSpinBalls
	SORC A 10 A_LookAI
	Wait
See:
	SORC ABCD 5 A_ChaseAI
	Loop
Pain:
	SORC G 8
	SORC G 8 A_Pain
	Goto See
Missile:
	SORC F 6 Bright A_FaceTarget
	SORC F 6 Bright A_SpeedBalls
	SORC F 6 Bright A_FaceTarget
	Wait
Attack1:
	SORC E 6 Bright
	SORC E 6 Bright A_SpawnFizzle
	SORC E 5 Bright A_FaceTarget
	Goto Attack1+1
Attack2:
	SORC E 2 Bright
	SORC E 2 Bright A_SorcBossAttack
	Goto See
Death:
	SORC H 5 Bright
	SORC I 5 Bright A_FaceTarget
	SORC J 5 Bright A_Scream
	SORC KLMNOPQRST 5 Bright
	SORC U 5 Bright A_NoBlocking
	SORC VWXY 5 Bright
	SORC Z -1 Bright
	Stop
}

defaultproperties
{
	Health = 5000;
	Radius = 40.0;
	Height = 110.0;
	Mass = 500.0;
	Speed = 16.0 * 35.0;
	PainChance = 0.0390625;
	MissileDamage = 9;
	bSolid = true;
	bShootable = true;
	bCountKill = true;
	bMonster = true;
	bActivatePushWall = true;
	bActivateMCross = true;
	bPassMobj = true;
	bCanUseWalls = true;
	bFloorClip = true;
	bNoBlood = true;
	bBoss = true;
	bNeverTarget = true;
	bFullVolActive = true;
	bNoIceDeath = true;
	bDeflect = true;
	SightSound = 'SorcererSight';
	ActiveSound = 'SorcererActive';
	PainSound = 'SorcererPain';
	DeathSound = 'SorcererDeathScream';
	Obituary = "$ob_heresiarch";
}
