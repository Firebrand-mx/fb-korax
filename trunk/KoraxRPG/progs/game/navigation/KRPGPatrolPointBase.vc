//**************************************************************************
//**
//**	    ##   ##   ####   ######     ##    ##     ##
//**	    ##  ##   ##  ##  ##   ##  ##  ##   ### ###
//**	    ## ##   ##    ## ##   ## ##    ##   #####
//**	    ######  ##    ## #####   ########   #####
//**	    ## ###   ##  ##  ## ###  ##    ##  ### ###
//**	    ##   ##   ####   ##  ### ##    ## ##     ##
//**
//**				   ######  #####   ######
//**	               ##   ## ##  ## ##    ##
//**	     		   ##   ## ##  ## ##   
//**	               #####   #####  ##  ####
//**	     		   ## ###  ##     ###   ##
//**	     		   ##  ### ##      ######
//**
//**    $Id: KRPGPatrolPointBase.vc 1983 2009-07-04 00:51:38Z crimsonwizard $
//**
//**    Copyright (C) 2004-2008 Korax Heritage Team
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class KRPGPatrolPointBase : PathNode
	abstract;

enum
{
	ARG_NEXTNODETAG		= 0,
	ARG_DELAY			= 1
};

//==========================================================================
//
//	BuildLinks
//
//	This implmenentation of BuildLinks provides compatibility with
//	ZDoom-style Patrol Points linking.
//
//==========================================================================

void BuildLinks()
{
	// Seek for FW and BW nodes
	if (!BW || !FW && Args[ARG_NEXTNODETAG])
	{
		KRPGPatrolPointBase PP;
		foreach AllThinkers(KRPGPatrolPointBase, PP)
		{
			if (!FW && PP.TID == Args[ARG_NEXTNODETAG])
			{
				FW = PP;
				PP.BW = self;
			}

			if (!BW && PP.Args[ARG_NEXTNODETAG] == TID)
			{
				BW = PP;
				PP.FW = self;
			}

			if (FW && BW)
			{
				break;
			}
		}
	}
}

defaultproperties
{
}
