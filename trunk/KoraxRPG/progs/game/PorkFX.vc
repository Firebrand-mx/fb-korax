//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class PorkFX : Projectile
	__scriptid__(40);

//==========================================================================
//
//  DoSpecialDamage
//
//==========================================================================

int DoSpecialDamage(EntityEx victim, EntityEx source, int damage)
{
	if (victim.bIsPlayer)
	{
		MorphPlayer(Actor(victim));
	}
	else
	{
		MorphMonster(Actor(victim));
	}
	return -1;	// Always return
}

//==========================================================================
//
//  MorphMonster
//
//==========================================================================

final bool MorphMonster(Actor victim)
{
	Actor monster;
	Actor fog;
	int i;

	if (victim.bIsPlayer)
		return false;
	if (!victim.bMonster)
		return false;
	if (victim.bBoss)
		return false;
	if (victim.bNoMorph)
		return false;

	fog = Spawn(TeleportFog, victim.Origin + vector(0.0, 0.0,
		TELEFOGHEIGHT));
	fog.PlaySound('Teleport', CHAN_VOICE);

	monster = Spawn(Pig, victim.Origin,,, false);
	monster.SpecialCID = class<Actor>(victim.Class);
	monster.Special1 = ftoi(MORPHTIME * 35.0) + P_Random();
	monster.RenderStyle = victim.RenderStyle;
	monster.Alpha = victim.Alpha;
	monster.Target = victim.Target;
	monster.Angles.yaw = victim.Angles.yaw;
	monster.TID = victim.TID;
	monster.Special = victim.Special;
	monster.InsertIntoTIDList(victim.TID);
	for (i = 0; i < 5; i++)
	{
		monster.Args[i] = victim.Args[i];
	}

	victim.RemoveFromTIDList();

	victim.SetState(victim.FindState('FreeTargMobj'));
	victim.MonsterMorphed();

	return true;
}

//==========================================================================
//
//  MorphPlayer
//
//  Returns true if the player gets turned into a pig
//
//==========================================================================

final bool MorphPlayer(Actor victim)
{
	Actor fog;
	Actor beastMo;
	int i;

	if (victim.bInvulnerable)
	{
		// Immune when invulnerable
		return false;
	}
	if (Player(victim.Player).MorphTime)
	{
		// Player is already a beast
		return false;
	}

	fog = Spawn(TeleportFog, victim.Origin + vector(0.0, 0.0,
		TELEFOGHEIGHT));
	fog.PlaySound('Teleport', CHAN_VOICE);

	beastMo = Spawn(PigPlayer, victim.Origin,,, false);
	beastMo.Tracer = Player(victim.Player).ReadyWeapon;
	beastMo.Angles = victim.Angles;
	beastMo.Player = victim.Player;
	beastMo.bIsPlayer = true;
	beastMo.Health = Player::MAXMORPHHEALTH;
	victim.Player.Health = beastMo.Health;
	victim.Player.MO = beastMo;
	victim.Player.Camera = beastMo;
	HexenArmor HArmor = HexenArmor(victim.FindInventory(HexenArmor));
	for (i = 0; i < 4; i++)
	{
		HArmor.Slots[i] = 0.0;
	}
	beastMo.ObtainInventory(victim);
	victim.Player.PClass = HexenDefs::PCLASS_PIG;
	beastMo.bFly = victim.bFly;
	Player(victim.Player).MorphTime = MORPHTIME;
	Player(victim.Player).ActivateMorphWeapon();

	victim.SetState(victim.FindState('FreeTargMobj'));

	return true;
}

states
{
Spawn:
	PRKM ABCDE 4
	Loop
Death:
	FHFX IJKL 3 Bright
	Stop
}

defaultproperties
{
	Radius = 8.0;
	Height = 8.0;
	Speed = 630.0;
	MissileDamage = 1;
	bActivateImpact = false;
	bActivatePCross = false;
}
