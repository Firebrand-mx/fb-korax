//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id: CWeapStaff.vc 2527 2007-07-29 08:18:44Z dj_jl $
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class CWeapStaff : ClericWeapon
	__mobjinfo__(10)
	__scriptid__(32);

int BlinkCount;
state BlinkState;
state Attack2State;

//==========================================================================
//
//  A_CStaffInitBlink
//
//==========================================================================

final void A_CStaffInitBlink()
{
	BlinkCount = (P_Random() >> 1) + 20;
}

//==========================================================================
//
//  A_CStaffCheckBlink
//
//==========================================================================

final void A_CStaffCheckBlink()
{
	if (!--BlinkCount)
	{
		Owner.Player.SetViewState(ps_weapon, BlinkState);
		BlinkCount = (P_Random() + 50) >> 2;
	}
}

//==========================================================================
//
//  A_CStaffCheck
//
//==========================================================================

final void A_CStaffCheck()
{
	Actor		pmo;
	int			damage;
	int			newLife;
	int			i;
	TAVec		angles;
	TVec		vforward;
	EntityEx	AimTarget;

	pmo = Actor(Owner);
	damage = 20 + (P_Random() & 15);
	AimTarget = pmo.AimEx(vforward, 3.0 * Actor::MELEERANGE / 2.0, 45.0 / 16.0, 3);
	if (AimTarget)
	{
		VectorAngles(&vforward, &angles);
		pmo.LineAttack(vforward, 1.5 * Actor::MELEERANGE, damage, CStaffPuff);
		pmo.Angles.yaw = atan2(AimTarget.Origin.y - pmo.Origin.y,
			AimTarget.Origin.x - pmo.Origin.x);
		if ((AimTarget.bIsPlayer || AimTarget.bMonster) &&
			!AimTarget.bDormant && !AimTarget.bInvulnerable)
		{
			newLife = Owner.Player.Health + (damage >> 3);
			newLife = newLife > 100 ? 100 : newLife;
			pmo.Health = newLife;
			Owner.Player.Health = newLife;
			Owner.Player.SetViewState(ps_weapon, Attack2State);
		}
		DepleteAmmoEx(false);
	}
}

//==========================================================================
//
//  A_CStaffAttack
//
//==========================================================================

final void A_CStaffAttack()
{
	EntityEx	mo;
	PlayerPawn	playPawn;

	DepleteAmmoEx();
	playPawn = PlayerPawn(Owner);
	mo = Actor(Owner).SpawnPlayerMissileAngle(CStaffMissile,
		playPawn.Angles.yaw - (45.0 / 15.0));
	if (mo)
	{
		CStaffMissile(mo).WeaveXY = 32;
	}
	mo = Actor(Owner).SpawnPlayerMissileAngle(CStaffMissile,
		playPawn.Angles.yaw + (45.0 / 15.0));
	if (mo)
	{
		CStaffMissile(mo).WeaveXY = 0;
	}
	playPawn.PlaySound('ClericCStaffFire', CHAN_WEAPON);
}

__states__
{
	S_CSTAFFREADY('CSSF', 2, 4.0 / 35.0, S_CSTAFFREADY1) = none
	S_CSTAFFREADY1('CSSF', 1, 3.0 / 35.0, S_CSTAFFREADY2) = A_CStaffInitBlink
	S_CSTAFFREADY2('CSSF', 0, 1.0 / 35.0, S_CSTAFFREADY3) = A_WeaponReady
	S_CSTAFFREADY3('CSSF', 0, 1.0 / 35.0, S_CSTAFFREADY4) = A_WeaponReady
	S_CSTAFFREADY4('CSSF', 0, 1.0 / 35.0, S_CSTAFFREADY5) = A_WeaponReady
	S_CSTAFFREADY5('CSSF', 0, 1.0 / 35.0, S_CSTAFFREADY6) = A_WeaponReady
	S_CSTAFFREADY6('CSSF', 0, 1.0 / 35.0, S_CSTAFFREADY7) = A_WeaponReady
	S_CSTAFFREADY7('CSSF', 0, 1.0 / 35.0, S_CSTAFFREADY8) = A_WeaponReady
	S_CSTAFFREADY8('CSSF', 0, 1.0 / 35.0, S_CSTAFFREADY9) = A_WeaponReady
	S_CSTAFFREADY9('CSSF', 0, 1.0 / 35.0, S_CSTAFFREADY2) = A_CStaffCheckBlink
	S_CSTAFFBLINK1('CSSF', 1, 1.0 / 35.0, S_CSTAFFBLINK2) = A_WeaponReady
	S_CSTAFFBLINK2('CSSF', 1, 1.0 / 35.0, S_CSTAFFBLINK3) = A_WeaponReady
	S_CSTAFFBLINK3('CSSF', 1, 1.0 / 35.0, S_CSTAFFBLINK4) = A_WeaponReady
	S_CSTAFFBLINK4('CSSF', 2, 1.0 / 35.0, S_CSTAFFBLINK5) = A_WeaponReady
	S_CSTAFFBLINK5('CSSF', 2, 1.0 / 35.0, S_CSTAFFBLINK6) = A_WeaponReady
	S_CSTAFFBLINK6('CSSF', 2, 1.0 / 35.0, S_CSTAFFBLINK7) = A_WeaponReady
	S_CSTAFFBLINK7('CSSF', 2, 1.0 / 35.0, S_CSTAFFBLINK8) = A_WeaponReady
	S_CSTAFFBLINK8('CSSF', 2, 1.0 / 35.0, S_CSTAFFBLINK9) = A_WeaponReady
	S_CSTAFFBLINK9('CSSF', 1, 1.0 / 35.0, S_CSTAFFBLINK10) = A_WeaponReady
	S_CSTAFFBLINK10('CSSF', 1, 1.0 / 35.0, S_CSTAFFBLINK11) = A_WeaponReady
	S_CSTAFFBLINK11('CSSF', 1, 1.0 / 35.0, S_CSTAFFREADY2) = A_WeaponReady
	S_CSTAFFDOWN('CSSF', 1, 3.0 / 35.0, S_CSTAFFDOWN2) = none
	S_CSTAFFDOWN2('CSSF', 2, 4.0 / 35.0, S_CSTAFFDOWN3) = none
	S_CSTAFFDOWN3('CSSF', 2, 1.0 / 35.0, S_CSTAFFDOWN3) = A_Lower
	S_CSTAFFUP('CSSF', 2, 1.0 / 35.0, S_CSTAFFUP) = A_Raise
	S_CSTAFFATK_1('CSSF', 0, 1.0 / 35.0, S_CSTAFFATK_2, 0, 45) = A_CStaffCheck
	S_CSTAFFATK_2('CSSF', 9, 1.0 / 35.0, S_CSTAFFATK_3, 0, 50) = A_CStaffAttack
	S_CSTAFFATK_3('CSSF', 9, 2.0 / 35.0, S_CSTAFFATK_4, 0, 50) = none
	S_CSTAFFATK_4('CSSF', 9, 2.0 / 35.0, S_CSTAFFATK_5, 0, 45) = none
	S_CSTAFFATK_5('CSSF', 0, 2.0 / 35.0, S_CSTAFFATK_6, 0, 40) = none
	S_CSTAFFATK_6('CSSF', 0, 2.0 / 35.0, S_CSTAFFREADY2, 0, 36) = none
	S_CSTAFFATK2_1('CSSF', 10, 10.0 / 35.0, S_CSTAFFREADY2, 0, 36) = none
	S_CSTAFF('WCSS', 0, -1.0, none) = none
}

defaultproperties
{
	WeaponClass = HexenDefs::PCLASS_CLERIC;
	Slot = 2;
	SelectionOrder = 1600;
	AmmoType1 = Mana1;
	AmmoUse1 = 1;
	AmmoGive1 = 25;
	PSpriteSY = 10.0;
	PickupMessage = "$txt_weapon_c2";
	BotCombatDist = 192.0;
	bBotProjectile = true;
	UpState = S_CSTAFFUP;
	DownState = S_CSTAFFDOWN;
	ReadyState = S_CSTAFFREADY;
	BlinkState = S_CSTAFFBLINK1;
	AttackState = S_CSTAFFATK_1;
	HoldAttackState = S_CSTAFFATK_1;
	Attack2State = S_CSTAFFATK2_1;
	IdleState = S_CSTAFF;
}
