
class ToxicMist : Mist
	__mobjinfo__(16006);


//==========================================================================
//
//  DoSpecialDamage
//
//==========================================================================

int DoSpecialDamage(EntityEx victim, EntityEx source, int damage)
{
	if (victim.bIsPlayer || victim.bMonster && P_Random() < 33)
	{
		//if (!KRPGActor(victim).GetCondition(ACPoisoned, Actor(source), 1))
		//{
			Actor(victim).CastCondition(ACPoisoned, true, Actor(source), 1, 5.0);
			Actor(victim).Damage(/*self*/none, Actor(source), 15 + (P_Random() & 15), 'Poison');	// Don't play painsound
		//}
		return -1;
	}
	return damage;
}

states
{
Small:
	FOGS ABCDEABCDEABCDEABCD 7 A_MistMove
	FOGS E 7 A_MistDecide
	Loop
Medium:
	FOGM ABCDEABCDEABCDEABCD 7 A_MistMove
	FOGM E 7 A_MistDecide
	Loop
Large:
	FOGL ABCDEABCDEABCDEABCD 7 A_MistMove
	FOGL E 7 A_MistDecide
	Loop
SmallDeath:
	FOGS E 5
	Stop
MediumDeath:
	FOGS ABCDE 5
	Goto SmallDeath
LargeDeath:
	FOGM ABCDE 4
	Goto MediumDeath
}

defaultproperties
{
	DamageType = 'Poison';
}
