//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class WeaponMageCone : Weapon;

//==========================================================================
//
//  A_FireConePL1
//
//==========================================================================

void A_FireConePL1(void)
{
	TAVec ang;
	int damage;
	int i;
	Actor pmo;
	ShardMissile mo;
	int conedone = false;

	pmo = Player.MO;
	Player.Mana[MANA_1] -=
		WeaponManaUse(Player.PClass, Player.ReadyWeapon);
	pmo.PlaySound('MageShardsFire', CHAN_WEAPON);

	damage = 90 + (P_Random() & 15);
	for (i = 0; i < 16; i++)
	{
		ang = pmo.Angles;
		ang.yaw = AngleMod360(ang.yaw + itof(i) * (45.0 / 16.0));
		pmo.AimLineAttack(&ang, MELEERANGE);
		if (linetarget)
		{
			pmo.bIceDamage = true;
			linetarget.Damage(pmo, pmo, damage);
			pmo.bIceDamage = false;
			conedone = true;
			break;
		}
	}

	// didn't find any creatures, so fire projectiles
	if (!conedone)
	{
		mo = ShardMissile(Player.SpawnPlayerMissile(ShardMissile));
		if (mo)
		{
			mo.bShardSpawnLeft = true;
			mo.bShardSpawnRight = true;
			mo.bShardSpawnUp = true;
			mo.bShardSpawnDown = true;
			mo._Special2 = 3;	// Set sperm count (levels of reproductivity)
			mo.Instigator = pmo;
			mo.Args[0] = 3;	// Mark Initial shard as super damage
		}
	}
}

__states__
{
	S_CONEREADY('CONE', 0, 1.0 / 35.0, S_CONEREADY) { A_WeaponReady(); }
	S_CONEDOWN('CONE', 0, 1.0 / 35.0, S_CONEDOWN) { A_Lower(); }
	S_CONEUP('CONE', 0, 1.0 / 35.0, S_CONEUP) { A_Raise(); }
	S_CONEATK1_1('CONE', 1, 3.0 / 35.0, S_CONEATK1_2) { }
	S_CONEATK1_2('CONE', 2, 4.0 / 35.0, S_CONEATK1_3) { }
	S_CONEATK1_3('CONE', 3, 3.0 / 35.0, S_CONEATK1_4) { }
	S_CONEATK1_4('CONE', 4, 5.0 / 35.0, S_CONEATK1_5) { }
	S_CONEATK1_5('CONE', 5, 3.0 / 35.0, S_CONEATK1_6) { A_FireConePL1(); }
	S_CONEATK1_6('CONE', 6, 3.0 / 35.0, S_CONEATK1_7) { }
	S_CONEATK1_7('CONE', 0, 9.0 / 35.0, S_CONEATK1_8) { }
	S_CONEATK1_8('CONE', 0, 10.0 / 35.0, S_CONEREADY) { A_ReFire(); }
}

defaultproperties
{
	Mana = MANA_1;
	UpState = S_CONEUP;
	DownState = S_CONEDOWN;
	ReadyState = S_CONEREADY;
	AttackState = S_CONEATK1_1;
	HoldAttackState = S_CONEATK1_3;
	PSpriteSY = 20.0;
}

//**************************************************************************
//
//  $Log$
//  Revision 1.3  2006/02/06 19:43:04  firebrand_kh
//  Added latest Vavoom changes
//
//  Revision 1.4  2005/12/11 21:31:40  dj_jl
//  Made path traversal callbacks class members.
//
//  Revision 1.3  2004/08/22 19:23:26  dj_jl
//  Moved many functions to player class.
//
//  Revision 1.2  2003/11/12 16:50:47  dj_jl
//  Changed player structure into a class
//
//  Revision 1.1  2002/10/26 16:32:27  dj_jl
//  New style of defining classes.
//
//**************************************************************************
