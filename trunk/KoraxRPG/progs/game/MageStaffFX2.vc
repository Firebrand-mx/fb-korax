//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class MageStaffFX2 : Projectile;

//==========================================================================
//
//	GetExplodeParms
//
//==========================================================================

void GetExplodeParms(out int damage, out float distance, out byte damageSelf)
{
	damage = 80;
	distance = 192.0;
	damageSelf = false;
}

//===========================================================================
//
//  FindEnemy
//
//===========================================================================

final void FindEnemy()
{
	Entity		Other;

	foreach RoughBlockSearch(Other, 10)
	{
		EntityEx link = EntityEx(Other);

		if (!(link.bMonster || link.bIsPlayer) || link == Target ||
			link.bDormant)
		{
			continue;
		}
		if (!link.bShootable)
		{
			continue;
		}
		if (Level.Game.netgame && !Level.Game.deathmatch && link.bIsPlayer)
		{
			continue;
		}
		if (CanSee(link))
		{
			float angle = AngleMod360(atan2(link.Origin.y - Target.Origin.y,
				link.Origin.x - Target.Origin.x) - Target.Angles.yaw);
			if (angle > 226.0 * 360.0 / 256.0 || angle < 30.0 * 360.0 / 256.0)
			{
				Tracer = link;
				return;
			}
		}
	}
}

//==========================================================================
//
//	SpecialMissileHit
//
//==========================================================================

int SpecialMissileHit(EntityEx Other)
{
	if (Other != Target)
	{
		// Class bosses not flagged boss so they can be blasted
		if (!Other.bIsPlayer && !Other.bBoss && !ClassBoss(Other))
		{
			Other.Damage(self, Target, 10, DamageType);
			return 1;
		}
	}
	return -1;
}

//==========================================================================
//
//  A_MStaffTrack
//
//==========================================================================

final void A_MStaffTrack()
{
	if (!Tracer && (P_Random() < 50))
	{
		FindEnemy();
	}
	SeekerMissile(2.0, 10.0);
}

states
{
Spawn:
	MSP2 ABCD 2 Bright A_MStaffTrack
	Loop
Death:
	MSP2 E 4 Bright
	MSP2 F 5 Bright A_Explode
	MSP2 GH 5 Bright
	MSP2 I 4 Bright
	Stop
}

defaultproperties
{
	Height = 8.0;
	Speed = 595.0;
	MissileDamage = 4;
	DamageType = 'Fire';
	bSeekerMissile = true;
	bExtremeDeath = true;
	DeathSound = 'MageStaffExplode';
}
