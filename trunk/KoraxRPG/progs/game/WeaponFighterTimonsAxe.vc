//**************************************************************************
//**
//**	    ##   ##   ####   ######     ##    ##     ##
//**	    ##  ##   ##  ##  ##   ##  ##  ##   ### ###
//**	    ## ##   ##    ## ##   ## ##    ##   #####
//**	    ######  ##    ## #####   ########   #####
//**	    ## ###   ##  ##  ## ###  ##    ##  ### ###
//**	    ##   ##   ####   ##  ### ##    ## ##     ##
//**
//**				   ######  #####   ######
//**	               ##   ## ##  ## ##    ##
//**	     		   ##   ## ##  ## ##   
//**	               #####   #####  ##  ####
//**	     		   ## ###  ##     ###   ##
//**	     		   ##  ### ##      ######
//**
//**    $Id: WeaponFighterTimonsAxe.vc 1921 2009-02-12 18:03:42Z firebrand_kh $
//**
//**    Copyright (C) 2004-2008 Korax Heritage Team
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class WeaponFighterTimonsAxe : WeaponFighterAxe
	game(GAME_Hexen)
	__mobjinfo__(8010)
	__scriptid__(27);

//==========================================================================
//
//	GetUpState
//
//==========================================================================

state GetUpState()
{
	return Ammo1.Amount > 0 ? FindState('GlowSelect') : ::GetUpState();
}

//==========================================================================
//
//	GetDownState
//
//==========================================================================

state GetDownState()
{
	return Ammo1.Amount > 0 ? FindState('GlowDeselect') : ::GetDownState();
}

//==========================================================================
//
//	GetReadyState
//
//==========================================================================

state GetReadyState()
{
	return Ammo1.Amount > 0 ? FindState('GlowReady') : ::GetReadyState();
}

//==========================================================================
//
//	GetAttackState
//
//==========================================================================

state GetAttackState(bool Hold)
{
	return Ammo1.Amount > 0 ? FindState('GlowFire') :	// Glowing axe
		::GetAttackState(Hold);
}

//==========================================================================
//
//  A_FAxeCheckReady
//
//==========================================================================

final void A_FAxeCheckReady()
{
	if (!bIsPlayer)
	{
		return;
	}
	Weapon Wpn = PlayerEx(Player).ReadyWeapon;

	if (Wpn.Ammo1.Amount > 0)
	{
		Player.SetViewState(ps_weapon, Wpn.FindState('GlowReady'));
	}
	else
	{
		A_WeaponReady();
	}
}

//==========================================================================
//
//  A_FAxeCheckReadyG
//
//==========================================================================

final void A_FAxeCheckReadyG()
{
	if (!bIsPlayer)
	{
		return;
	}
	Weapon Wpn = PlayerEx(Player).ReadyWeapon;

	if (Wpn.Ammo1.Amount <= 0)
	{
		Player.SetViewState(ps_weapon, Wpn.FindState('Ready'));
	}
	else
	{
		A_WeaponReady();
	}
}

//==========================================================================
//
//  A_FAxeCheckUp
//
//==========================================================================

final void A_FAxeCheckUp()
{
	if (!bIsPlayer)
	{
		return;
	}
	Weapon Wpn = PlayerEx(Player).ReadyWeapon;

	if (Wpn.Ammo1.Amount > 0)
	{
		Player.SetViewState(ps_weapon, Wpn.FindState('GlowSelect'));
	}
	else
	{
		A_Raise();
	}
}

//==========================================================================
//
//  A_FAxeCheckUpG
//
//==========================================================================

final void A_FAxeCheckUpG()
{
	if (!bIsPlayer)
	{
		return;
	}
	Weapon Wpn = PlayerEx(Player).ReadyWeapon;

	if (Wpn.Ammo1.Amount <= 0)
	{
		Player.SetViewState(ps_weapon, Wpn.FindState('Select'));
	}
	else
	{
		A_Raise();
	}
}

states
{
Ready:
	FAXE A 1 A_FAxeCheckReady
	Loop
Deselect:
	FAXE A 1 A_Lower
	Loop
Select:
	FAXE A 1 A_FAxeCheckUp
	Loop
Fire:
	FAXE B 4 Offset(15, 32)
	FAXE C 3 Offset(15, 32)
	FAXE D 2 Offset(15, 32)
	FAXE D 1 Offset(-5, 70) A_FAxeAttack
NoMoreMana:
	FAXE D 2 Offset(-25, 90)
	FAXE E 1 Offset(15, 32)
	FAXE E 2 Offset(10, 54)
	FAXE E 7 Offset(10, 150)
	FAXE A 1 Offset(0, 60) A_ReFire
	FAXE A 1 Offset(0, 52)
	FAXE A 1 Offset(0, 44)
	FAXE A 1 Offset(0, 36)
	FAXE A 1
	Goto Ready

GlowReady:
	FAXE LLLMMM 1 A_FAxeCheckReadyG
	Loop
GlowDeselect:
	FAXE L 1 A_Lower
	Loop
GlowSelect:
	FAXE L 1 A_FAxeCheckUpG
	Loop
GlowFire:
	FAXE N 4 Offset(15, 32)
	FAXE O 3 Offset(15, 32)
	FAXE P 2 Offset(15, 32)
	FAXE P 1 Offset(-5, 70) A_FAxeAttack
	FAXE P 2 Offset(-25, 90)
	FAXE Q 1 Offset(15, 32)
	FAXE Q 2 Offset(10, 54)
	FAXE Q 7 Offset(10, 150)
	FAXE A 1 Offset(0, 60) A_ReFire
	FAXE A 1 Offset(0, 52)
	FAXE A 1 Offset(0, 44)
	FAXE A 1 Offset(0, 36)
	FAXE A 1
	Goto Ready
Spawn:
	WFAX A -1
	Stop
}

defaultproperties
{
	SelectionOrder = 1500;
	AmmoType1 = Mana1;
	AmmoUse1 = 2;
	AmmoGive1 = 25;
	PSpriteSY = -12.0;
	bAmmoOptional = true;
	bAxeBlood = true;
	PickupMessage = "$txt_weapon_f2";
	BotCombatDist = 48.0;
	bBotMelee = true;
}
