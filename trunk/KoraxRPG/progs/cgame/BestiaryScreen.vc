//**************************************************************************
//**
//**	    ##   ##   ####   ######     ##    ##     ##
//**	    ##  ##   ##  ##  ##   ##  ##  ##   ### ###
//**	    ## ##   ##    ## ##   ## ##    ##   #####
//**	    ######  ##    ## #####   ########   #####
//**	    ## ###   ##  ##  ## ###  ##    ##  ### ###
//**	    ##   ##   ####   ##  ### ##    ## ##     ##
//**
//**				   ######  #####   ######
//**	               ##   ## ##  ## ##    ##
//**	     		   ##   ## ##  ## ##   
//**	               #####   #####  ##  ####
//**	     		   ## ###  ##     ###   ##
//**	     		   ##  ### ##      ######
//**
//**    $Id: BestiaryScreen.vc 2276 2017-04-05 15:10:27Z ramborc $
//**
//**    Copyright (C) 2004-2008 Korax Heritage Team
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class BestiaryScreen : KRPGMenuScreen;

KRPGPlayerReplicationInfo RepInfo;

const int
	TABLE_HEAD_Y		= 68,
	TABLE_STRING_DELTA	= 14;


//==========================================================================
//
//  OnDraw
//
//==========================================================================

 void OnDraw()
{
	::OnDraw();

	SetFont('smallfont');
	SetTextAlign(hcentre, vtop);
	DrawPic(0, 0, R_RegisterPic('journal'));
	ShadeRect(12, 78, 113, 289, GetCvarF('0.000000'));
	
	foreach ClGame.GLevel.LevelInfo.AllThinkers(KRPGPlayerReplicationInfo, RepInfo)
	{
		if (ClGame.cl.ClientNum == RepInfo.PlayerNum)
		{
		
			if (RepInfo.plclass == 0)
			{
			DrawPic(8, 80, R_RegisterPic('journf'));			
			}
			if (RepInfo.plclass == 1)
			{
			DrawPic(8, 80, R_RegisterPic('journc'));			
			}
			if (RepInfo.plclass == 2)
			{
			DrawPic(8, 80, R_RegisterPic('journm'));			
			}
			DrawText(160, TABLE_HEAD_Y + TABLE_STRING_DELTA, va("Bestiary" ), CR_TAN );
		}
	}
	
}

//==========================================================================
//
//  OnDestroy
//
//==========================================================================

void OnDestroy()
{
	::OnDestroy();

	ClientGame(ClGame).HideBestiaryScreen();
}

//==========================================================================
//
//	CreateChoices
//
//==========================================================================

void CreateChoices()
{
	MenuTextButton		Btn;
	int					currentY;
	
	currentY = ChoicesStartY;
	
	Btn = MenuTextButton(NewChild(MenuSmallTextButton));
	Btn.SetOrigin(ChoicesStartX + 14, currentY);
	Btn.Text = "Ettins";
	Btn.Activated = ShowBestiaryEttins;
	currentY += 28 + Btn.Height;

	Btn = MenuTextButton(NewChild(MenuSmallTextButton));
	Btn.SetOrigin(ChoicesStartX + 11, currentY);
	Btn.Text = "Centaurs";
	Btn.Activated = ShowBestiaryCentaurs;
	currentY += 28 + Btn.Height;

	Btn = MenuTextButton(NewChild(MenuSmallTextButton));
	Btn.SetOrigin(ChoicesStartX + 7, currentY);
	Btn.Text ="Chaos Serpents";
	Btn.Activated = ShowBestiarySerpents;
	currentY += 28 + Btn.Height;

	Btn = MenuTextButton(NewChild(MenuSmallTextButton));
	Btn.SetOrigin(ChoicesStartX - 1, currentY);
	Btn.Text = "Dark Clergy";
	Btn.Activated = ShowBestiaryClergy;
	currentY += 28 + Btn.Height;

	Btn = MenuTextButton(NewChild(MenuSmallTextButton));
	Btn.SetOrigin(ChoicesStartX - 1, currentY);
	Btn.Text = "Dragonkin";
	Btn.Activated = ShowBestiaryDragonkin;
	currentY += 28 + Btn.Height;
	
	Btn = MenuTextButton(NewChild(MenuSmallTextButton));
	Btn.SetOrigin(ChoicesStartX - 1, currentY);
	Btn.Text = "Stalkers";
	Btn.Activated = ShowBestiaryStalkers;
	currentY += 28 + Btn.Height;
	
	Btn = MenuTextButton(NewChild(MenuSmallTextButton));
	Btn.SetOrigin(ChoicesStartX - 1, currentY);
	Btn.Text = "Undead Creatures";
	Btn.Activated = ShowBestiaryUndead;
	currentY += 28 + Btn.Height;
	
	Btn = MenuTextButton(NewChild(MenuSmallTextButton));
	Btn.SetOrigin(ChoicesStartX - 1, currentY);
	Btn.Text = "Elemental Creatures";
	Btn.Activated = ShowBestiaryElementals;
	currentY += 28 + Btn.Height;

}

//==========================================================================
//
//	ShowBestiaryEttins
//
//==========================================================================

void ShowBestiaryEttins(Object Sender)
{
	ClientGame(ClGame).ShowBestiaryEttins();
}

//==========================================================================
//
//	ShowBestiaryCentaurs
//
//==========================================================================

void ShowBestiaryCentaurs(Object Sender)
{
	ClientGame(ClGame).ShowBestiaryCentaurs();
}

//==========================================================================
//
//	ShowBestiarySerpents
//
//==========================================================================

void ShowBestiarySerpents(Object Sender)
{
	ClientGame(ClGame).ShowBestiarySerpents();
}

//==========================================================================
//
//	ShowBestiaryClergy
//
//==========================================================================

void ShowBestiaryClergy(Object Sender)
{
	ClientGame(ClGame).ShowBestiaryClergy();
}

//==========================================================================
//
//	ShowBestiaryDragonkin
//
//==========================================================================

void ShowBestiaryDragonkin(Object Sender)
{
	ClientGame(ClGame).ShowBestiaryDragonkin();
}

//==========================================================================
//
//	ShowBestiaryStalkers
//
//==========================================================================

void ShowBestiaryStalkers(Object Sender)
{
	ClientGame(ClGame).ShowBestiaryStalkers();
}

//==========================================================================
//
//	ShowBestiaryUndead
//
//==========================================================================

void ShowBestiaryUndead(Object Sender)
{
	ClientGame(ClGame).ShowBestiaryUndead();
}

//==========================================================================
//
//	ShowBestiaryElementals
//
//==========================================================================

void ShowBestiaryElementals(Object Sender)
{
	ClientGame(ClGame).ShowBestiaryElementals();
}


defaultproperties
{
	X = 0;
	Y = 0;
	Width = 640;
	Height = 480;
	TitleX = 320;
	ChoicesStartX = 285;
	ChoicesStartY = 130;
/*	ScaleX = 2.0;
	ScaleY = 2.4;*/
	Title = "Bestiary";
}

