//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class ClericStaffMissile : Projectile;

int WeaveXY;

//==========================================================================
//
//  InflictorModifyDamage
//
//==========================================================================

int InflictorModifyDamage(Actor victim, Actor source, int damage)
{
	// Cleric Serpent Staff does poison damage
	if (victim.bIsPlayer)
	{
		victim.PoisonPlayer(source, 20);
		damage >>= 1;
	}
	return damage;
}

//============================================================================
//
//  A_CStaffMissileSlither
//
//============================================================================

void A_CStaffMissileSlither()
{
	float newX, newY;
	float angle;

	angle = AngleMod360(Angles.yaw + 90.0);
	newX = Origin.x - cos(angle) * Level.Game.FloatBobOffsets[WeaveXY];
	newY = Origin.y - sin(angle) * Level.Game.FloatBobOffsets[WeaveXY];
	WeaveXY = (WeaveXY + 3) & 63;
	newX += cos(angle) * Level.Game.FloatBobOffsets[WeaveXY];
	newY += sin(angle) * Level.Game.FloatBobOffsets[WeaveXY];
	TryMove(vector(newX, newY, Origin.z));
}

__states__
{
	S_CSTAFF_MISSILE1('CSSF', 3 | FF_FULLBRIGHT, 1.0 / 35.0, S_CSTAFF_MISSILE2) { A_CStaffMissileSlither(); }
	S_CSTAFF_MISSILE2('CSSF', 3 | FF_FULLBRIGHT, 1.0 / 35.0, S_CSTAFF_MISSILE3) { A_CStaffMissileSlither(); }
	S_CSTAFF_MISSILE3('CSSF', 4 | FF_FULLBRIGHT, 1.0 / 35.0, S_CSTAFF_MISSILE4) { A_CStaffMissileSlither(); }
	S_CSTAFF_MISSILE4('CSSF', 4 | FF_FULLBRIGHT, 1.0 / 35.0, S_CSTAFF_MISSILE1) { A_CStaffMissileSlither(); }
	S_CSTAFF_MISSILE_X1('CSSF', 5 | FF_FULLBRIGHT, 4.0 / 35.0, S_CSTAFF_MISSILE_X2) { }
	S_CSTAFF_MISSILE_X2('CSSF', 6 | FF_FULLBRIGHT, 4.0 / 35.0, S_CSTAFF_MISSILE_X3) { }
	S_CSTAFF_MISSILE_X3('CSSF', 7 | FF_FULLBRIGHT, 3.0 / 35.0, S_CSTAFF_MISSILE_X4) { }
	S_CSTAFF_MISSILE_X4('CSSF', 8 | FF_FULLBRIGHT, 3.0 / 35.0, none) { }
}

defaultproperties
{
	Radius = 12.0;
	Height = 10.0;
	Speed = 770.0;
	MissileDamage = 5;
	IdleState = S_CSTAFF_MISSILE1;
	DeathState = S_CSTAFF_MISSILE_X1;
	DeathSound = 'ClericCStaffExplode';
	Effects = HexenDefs::EF_DL_GREEN;

	//[CW]
	deathmsgi[0] = 9;
}
