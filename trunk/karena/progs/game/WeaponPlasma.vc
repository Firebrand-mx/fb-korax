//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class WeaponPlasma : WeaponDoomBase;

//===========================================================================
//
//  A_FirePlasma
//
//===========================================================================

void A_FirePlasma(void)
{
	Actor mo;

	UseWeaponMana();

	Player.SetPsprite(ps_flash, FlashState + (P_Random() & 1));

	mo = Player.SpawnPlayerMissile(PlasmaShot);
	if (mo && int_mod)
	{
		mo.MissileDamage = mo.MissileDamage * Player.intelligence / 10;
	}
	Player.MO.PlaySound('PlasmaFire', CHAN_WEAPON);
}

__states__
{
	S_PLASMA('PLSG', 0, 'weapons/v_plasma.md2', 0, 1.0 / 35.0, S_PLASMA) { A_WeaponReady(); }
	S_PLASMADOWN('PLSG', 0, 'weapons/v_plasma.md2', 1, 1.0 / 35.0, S_PLASMADOWN) { A_Lower(); }
	S_PLASMAUP('PLSG', 0, 'weapons/v_plasma.md2', 2, 1.0 / 35.0, S_PLASMAUP) { A_Raise(); }
	S_PLASMA1('PLSG', 0, 'weapons/v_plasma.md2', 3, 3.0 / 35.0, S_PLASMA2) { A_FirePlasma(); }
	S_PLASMA2('PLSG', 1, 'weapons/v_plasma.md2', 4, 20.0 / 35.0, S_PLASMA) { A_ReFire(); }
	S_PLASMAFLASH1('PLSF', 0 | FF_FULLBRIGHT, 4.0 / 35.0, S_LIGHTDONE) { /*A_Light1();*/ }
	S_PLASMAFLASH2('PLSF', 1 | FF_FULLBRIGHT, 4.0 / 35.0, S_LIGHTDONE) { /*A_Light1();*/ }
}

defaultproperties
{
	UpState = S_PLASMAUP;
	DownState = S_PLASMADOWN;
	ReadyState = S_PLASMA;
	AttackState = S_PLASMA1;
	FlashState = S_PLASMAFLASH1;
//	ThirdPersonModel = 'weapons/g_plasma.md2';
	HoldAttackState = S_PLASMA1;
	Mana = MANA_3;
	manause = 8;
	wis_mod = true;
	int_mod = true;
	dex_mod = false;
	str_mod = false;
	PickUpMessage = "PLASMA RIFLE";
}

//**************************************************************************
//
//  $Log$
//  Revision 1.4  2005/07/27 21:00:06  firebrand_kh
//  Balanced weapon damage rates & mana usage
//
//  Revision 1.3  2005/02/03 01:05:06  firebrand_kh
//  Fixed Doom Guy weapon bug with the new effects
//
//  Revision 1.2  2004/12/09 00:03:57  firebrand_kh
//  Added stuff for the Doom Guy weapon effects
//
//  Revision 1.1  2004/11/16 13:33:22  dj_jl
//  Initial import.
//
//  Revision 1.2  2003/11/12 16:48:33  dj_jl
//  Changed player structure into a class
//
//  Revision 1.1  2002/10/26 16:32:20  dj_jl
//  New style of defining classes.
//
//**************************************************************************
