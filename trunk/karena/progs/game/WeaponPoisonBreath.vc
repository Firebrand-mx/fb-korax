//**************************************************************************
//**
//**	    ##   ##   ####   ######     ##    ##     ##
//**	    ##  ##   ##  ##  ##   ##  ##  ##   ### ###
//**	    ## ##   ##    ## ##   ## ##    ##   #####
//**	    ######  ##    ## #####   ########   #####
//**	    ## ###   ##  ##  ######  ##    ##  ### ###
//**	    ##   ##   ####   ##  ### ##    ## ##     ##
//**
//**		##    ######    ##### ###   ##    ##
//**	      ##  ##  ##   ##  #####  ####  ##  ##  ##
//**	     ##    ## ##   ## ##      ##### ## ##    ##
//**	     ######## #####   #####   ## ##### ########
//**	     ##    ## ######  ##      ##  #### ##    ##
//**	     ##    ## ##  ###  #####  ##   ### ##    ##
//**
//**    $Id$
//**
//**    Copyright (C) 2004-2006 Korax Heritage Team
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class WeaponPoisonBreath : Weapon;

//============================================================================
//
//  A_PoisonBreathFire
//
//============================================================================

void A_PoisonBreathFire(bool use_mana, int Children)
{
	TAVec angles;
	TVec vforward;
	TVec org;
	PlayerPawn pmo;

	pmo = PlayerPawn(Owner);

	angles = pmo.Angles;
	pmo.AimLineAttack(&angles, 16.0 * 64.0);
	if (!pmo.linetarget)
	{
		angles.yaw = AngleMod360(angles.yaw + 45.0 / 8.0);
		pmo.AimLineAttack(&angles, 16.0 * 64.0);
		if (!pmo.linetarget)
		{
			angles.yaw = AngleMod360(angles.yaw - 45.0 / 4.0);
			pmo.AimLineAttack(&angles, 16.0 * 64.0);
			if (!pmo.linetarget)
			{
				angles.yaw = pmo.Angles.yaw;
			}
		}
	}
	org = pmo.Origin;
	org.z = pmo.Origin.z + 4.0 * 8.0 - tan(pmo.Angles.pitch);
	org.z -= pmo.FloorClip;
	
	Actor mo = HexenLevelInfo(Level).Spawn(PoisonCloud, org);

	if (mo)
	{
		mo.Instigator = pmo;
		mo.Angles = angles;
		AngleVector(&angles, &vforward);

		mo.Speed = 320.0;//90.0;
		mo.bMissile = true;
		mo.bRip = true;
		vforward.z = 0.0;

		mo.Velocity = vforward * mo.Speed;
		mo.Origin += mo.Velocity;

		if (!mo.TryMove(mo.Origin))
		{
			mo.SetState(PoisonCloud::S_POISONCLOUD_X2);
		}
		else
		{
			PoisonCloud pc = PoisonCloud(mo);
			pc.InitCloud(pmo);
			pc.SpawnChildren = Children;	// [CW] advanced feature for Cleric weapon
			pc.LifeCount = 1;
			pc.deathmsgi = deathmsgi;
		}
	}

	if (use_mana)	
		UseWeaponMana();
}

__states__
{
	S_PCPOISONREADY('CPOI', 0, 1.0 / 35.0, S_PCPOISONREADY) = A_WeaponReady
	S_PCPOISONDOWN('CPOI', 0, 1.0 / 35.0, S_PCPOISONDOWN) = A_Lower
	S_PCPOISONUP('CPOI', 0, 1.0 / 35.0, S_PCPOISONUP) = A_Raise
	S_PCPOISONATK_1('CPOI', 0, 2.0 / 35.0, S_PCPOISONATK_2, 0, 40) = none
	S_PCPOISONATK_2('CPOI', 1, 1.0 / 35.0, S_PCPOISONATK_3, 0, 50) = none
	S_PCPOISONATK_3('CPOI', 1, 1.0 / 35.0, S_PCPOISONATK_4, 0, 36) = none
	S_PCPOISONATK_4('CPOI', 2 | FF_FULLBRIGHT, 4.0 / 35.0, S_PCPOISONATK_5) = none
	S_PCPOISONATK_5('CPOI', 2 | FF_FULLBRIGHT, 4.0 / 35.0, S_PCPOISONATK_6) { A_PoisonBreathFire(true, 3); }
	S_PCPOISONATK_6('CPOI', 2 | FF_FULLBRIGHT, 4.0 / 35.0, S_PCPOISONATK_7) { A_PoisonBreathFire(false, 2); }
	S_PCPOISONATK_7('CPOI', 2 | FF_FULLBRIGHT, 4.0 / 35.0, S_PCPOISONATK_8) { A_PoisonBreathFire(false, 1); }
	S_PCPOISONATK_8('CPOI', 2 | FF_FULLBRIGHT, 4.0 / 35.0, S_PCPOISONATK_9) { A_PoisonBreathFire(false, 0); }
	S_PCPOISONATK_9('CPOI', 2 | FF_FULLBRIGHT, 4.0 / 35.0, S_PCPOISONATK_10) { A_PoisonBreathFire(false, 0); }
	S_PCPOISONATK_10('CPOI', 3 | FF_FULLBRIGHT, 4.0 / 35.0, S_PCPOISONATK_11) = none
	S_PCPOISONATK_11('CPOI', 3, 1.0 / 35.0, S_PCPOISONATK_12, 0, 40) = none
	S_PCPOISONATK_12('CPOI', 3, 1.0 / 35.0, S_PCPOISONATK_13, 0, 55) = none
	S_PCPOISONATK_13('CPOI', 3, 1.0 / 35.0, S_PCPOISONATK_14, 0, 60) = none
	S_PCPOISONATK_14('CPOI', 3, 1.0 / 35.0, S_PCPOISONATK_15, 0, 75) = none
	S_PCPOISONATK_15('CPOI', 3, 1.0 / 35.0, S_PCPOISONATK_16, 0, 80) = none
	S_PCPOISONATK_16('CPOI', 3, 1.0 / 35.0, S_PCPOISONATK_17, 0, 95) = none
	S_PCPOISONATK_17('CPOI', 3, 1.0 / 35.0, S_PCPOISONATK_18, 0, 100) = none
	S_PCPOISONATK_18('CPOI', 3, 1.0 / 35.0, S_PCPOISONATK_19, 0, 115) = none
	S_PCPOISONATK_19('CPOI', 3, 1.0 / 35.0, S_PCPOISONATK_20, 0, 120) = none
	S_PCPOISONATK_20('CPOI', 3, 1.0 / 35.0, S_PCPOISONATK_21, 0, 135) = none
	S_PCPOISONATK_21('CPOI', 3, 1.0 / 35.0, S_PCPOISONATK_22, 0, 140) = none
	S_PCPOISONATK_22('CPOI', 3, 1.0 / 35.0, S_PCPOISONATK_23, 0, 155) = none
	S_PCPOISONATK_23('CPOI', 3, 1.0 / 35.0, S_PCPOISONATK_24, 0, 160) = none
	S_PCPOISONATK_24('CPOI', 3, 1.0 / 35.0, S_PCPOISONATK_25, 0, 175) = none
	S_PCPOISONATK_25('CPOI', 3, 1.0 / 35.0, S_PCPOISONREADY, 0, 180) = none
}

/*SIXTH*/
defaultproperties
{
	Mana = HexenDefs::MANA_2;
	manause = 15;
	UpState = S_PCPOISONUP;
	DownState = S_PCPOISONDOWN;
	ReadyState = S_PCPOISONREADY;
	AttackState = S_PCPOISONATK_1;
	HoldAttackState = S_PCPOISONATK_1;
	PSpriteSY = 10.0;
	wis_mod = true;
	int_mod = false;
	dex_mod = false;
	str_mod = false;
	PickUpMessage = "POISON BREATH";

	deathmsgi = 8;
}
