//**************************************************************************
//**
//**	    ##   ##   ####   ######     ##    ##     ##
//**	    ##  ##   ##  ##  ##   ##  ##  ##   ### ###
//**	    ## ##   ##    ## ##   ## ##    ##   #####
//**	    ######  ##    ## #####   ########   #####
//**	    ## ###   ##  ##  ######  ##    ##  ### ###
//**	    ##   ##   ####   ##  ### ##    ## ##     ##
//**
//**		##    ######    ##### ###   ##    ##
//**	      ##  ##  ##   ##  #####  ####  ##  ##  ##
//**	     ##    ## ##   ## ##      ##### ## ##    ##
//**	     ######## #####   #####   ## ##### ########
//**	     ##    ## ######  ##      ##  #### ##    ##
//**	     ##    ## ##  ###  #####  ##   ### ##    ##
//**
//**    $Id$
//**
//**    Copyright (C) 2004-2006 Korax Heritage Team
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class DarknessMissile : Effect;

int LifeCount;

//==========================================================================
//
//  DoSpecialDamage
//
//==========================================================================

int DoSpecialDamage(EntityEx victim, EntityEx source, int damage)
{
	if (victim.bIsPlayer && !victim.bDormant)
	{
		KArenaActor(victim).BlindPlayer(Actor(source), 20);
	}
	return -1;
}

//==========================================================================
//
//	InitMe
//
//==========================================================================

void InitMe(EntityEx InstigatedBy)
{
	LifeCount = 36 + (P_Random() & 7);
	Target = InstigatedBy;
	Radius = 20.0;
	Height = 14.0;
	bColideWithThings = true;
	bColideWithWorld = true;
}

//==========================================================================
//
//  A_Attack
//
//==========================================================================

final void A_Attack()
{
	RadiusAttack(Target, 4, 40.0, false);
}

//==========================================================================
//
//  A_ChkDeath
//
//==========================================================================

final void A_ChkDeath()
{
	if (!--LifeCount)
	{
		SetState(FindState('Death'));
	}
}

states
{
Spawn:
	DRKM ABC 3 A_Attack
	DRKM D 3 A_ChkDeath
	Loop
Death:
	DRKM EFGH 3
	Stop
}

defaultproperties
{
	Radius = 1.0;
	Height = 1.0;
	Mass = 99999.0;
	bDropOff = true;
	bColideWithWorld = false;
	bColideWithThings = false;
	bNoDamageThrust = true;
	DeathSound = 'FighterHammerExplode';
	DLightColour = RGB(1, 1, 1);
	DLightRadius = 126.0;
	//Obituary = "$ob_darkness";
}
