//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class WeaponStaff : Weapon;

//===========================================================================
//
//  A_StaffAttackPL1
//
//===========================================================================

void A_StaffAttackPL1(void)
{
	TAVec angles;
	int damage;
	TVec vforward;
	Actor Owner = Player.MO;

	damage = 5 + (P_Random() & 15);
	if (str_mod)
	{
		damage=damage*Player.strength/10;
	}
	angles = Owner.Angles;
	angles.yaw = AngleMod360(angles.yaw +
		(Random() - Random()) * 45.0 / 8.0);
	AimLineAttack(Owner, &angles, 2.0 * MELEERANGE);
	if (linetarget)
	{
		AngleVector(&angles, &vforward);
		PuffType = StaffPuff;
		LineAttack(Owner, vforward, 2.0 * MELEERANGE, damage);
		if (linetarget.bCountKill || linetarget.bIsPlayer)
		{
			linetarget.Thrust(angles.yaw, 2.0);
		}
		Player.AdjustPlayerAngle();
	}
	else
	{
		// didn't find any creatures, so try to strike any walls
		angles = Player.MO.Angles;
		AimLineAttack(Player.MO, &angles, MELEERANGE);
		AngleVector(&angles, &vforward);
		PuffType = StaffPuff;
		if (LineAttack(Player.MO, vforward, MELEERANGE, damage))
		{
			Player.MO.PlaySound('StaffHit', CHAN_WEAPON);
		}
	}
}

__states__
{
	S_STAFFREADY('CSTF', 0, 1.0 / 35.0, S_STAFFREADY) { A_WeaponReady(); }
	S_STAFFDOWN('CSTF', 0, 1.0 / 35.0, S_STAFFDOWN) { A_Lower(); }
	S_STAFFUP('CSTF', 0, 1.0 / 35.0, S_STAFFUP) { A_Raise(); }
	S_STAFFATK1_1('CSTF', 1, 6.0 / 35.0, S_STAFFATK1_2) { }
	S_STAFFATK1_2('CSTF', 2, 8.0 / 35.0, S_STAFFATK1_3) { A_StaffAttackPL1(); }
	S_STAFFATK1_3('CSTF', 1, 8.0 / 35.0, S_STAFFREADY) { A_ReFire(); }
}

defaultproperties
{
	Mana = MANA_NONE;
	UpState = S_STAFFUP;
	DownState = S_STAFFDOWN;
	ReadyState = S_STAFFREADY;
	AttackState = S_STAFFATK1_1;
	HoldAttackState = S_STAFFATK1_1;
	PSpriteSY = 0.0;
	wis_mod = false;
	int_mod = false;
	dex_mod = true;
	str_mod = true;
}

//**************************************************************************
//
//  $Log$
//  Revision 1.1  2004/11/16 13:33:22  dj_jl
//  Initial import.
//
//  Revision 1.2  2003/11/12 16:49:44  dj_jl
//  Changed player structure into a class
//
//  Revision 1.1  2002/10/26 16:32:23  dj_jl
//  New style of defining classes.
//
//**************************************************************************
