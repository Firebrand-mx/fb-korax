//**************************************************************************
//**
//**	    ##   ##   ####   ######     ##    ##     ##
//**	    ##  ##   ##  ##  ##   ##  ##  ##   ### ###
//**	    ## ##   ##    ## ##   ## ##    ##   #####
//**	    ######  ##    ## #####   ########   #####
//**	    ## ###   ##  ##  ######  ##    ##  ### ###
//**	    ##   ##   ####   ##  ### ##    ## ##     ##
//**
//**		##    ######    ##### ###   ##    ##
//**	      ##  ##  ##   ##  #####  ####  ##  ##  ##
//**	     ##    ## ##   ## ##      ##### ## ##    ##
//**	     ######## #####   #####   ## ##### ########
//**	     ##    ## ######  ##      ##  #### ##    ##
//**	     ##    ## ##  ###  #####  ##   ### ##    ##
//**
//**    $Id$
//**
//**    Copyright (C) 2004-2006 Korax Heritage Team
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class WeaponFighterHammer : WeaponEx;

bool bThrowHammer;
float HammerRange;

//============================================================================
//
//  A_FHammerAttack
//
//============================================================================

void A_FHammerAttack()
{
	bThrowHammer = true;
}

//============================================================================
//
//  A_FHammerThrow
//
//============================================================================

void A_FHammerThrow()
{
	if (!bThrowHammer)
	{
		return;
	}
	UseWeaponMana();
	Actor(Owner).SpawnPlayerMissile(HammerMissile);
}

__states__
{
	S_FHAMMERREADY('FHMR', 0, 1.0 / 35.0, S_FHAMMERREADY) = A_WeaponReady
	S_FHAMMERDOWN('FHMR', 0, 1.0 / 35.0, S_FHAMMERDOWN) = A_Lower
	S_FHAMMERUP('FHMR', 0, 1.0 / 35.0, S_FHAMMERUP) = A_Raise
	S_FHAMMERATK_1('FHMR', 1, 6.0 / 35.0, S_FHAMMERATK_2, 5, 0) = none
	S_FHAMMERATK_2('FHMR', 2, 3.0 / 35.0, S_FHAMMERATK_3, 5, 0) { A_FHammerAttack(); }
	S_FHAMMERATK_3('FHMR', 3, 3.0 / 35.0, S_FHAMMERATK_4, 5, 0) = none
	S_FHAMMERATK_4('FHMR', 4, 2.0 / 35.0, S_FHAMMERATK_5, 5, 0) = none
	S_FHAMMERATK_5('FHMR', 4, 10.0 / 35.0, S_FHAMMERATK_6, 5, 150) { A_FHammerThrow(); }
	S_FHAMMERATK_6('FHMR', 0, 1.0 / 35.0, S_FHAMMERATK_7, 0, 60) = none
	S_FHAMMERATK_7('FHMR', 0, 1.0 / 35.0, S_FHAMMERATK_8, 0, 55) = none
	S_FHAMMERATK_8('FHMR', 0, 1.0 / 35.0, S_FHAMMERATK_9, 0, 50) = none
	S_FHAMMERATK_9('FHMR', 0, 1.0 / 35.0, S_FHAMMERATK_10, 0, 45) = none
	S_FHAMMERATK_10('FHMR', 0, 1.0 / 35.0, S_FHAMMERATK_11, 0, 40) = none
	S_FHAMMERATK_11('FHMR', 0, 1.0 / 35.0, S_FHAMMERATK_12, 0, 35) = none
	S_FHAMMERATK_12('FHMR', 0, 1.0 / 35.0, S_FHAMMERREADY) = none
}

/*SIXTH*/
defaultproperties
{
	WeaponType = HexenDefs::WP_SIXTH;
	Slot = 6;
	SelectionOrder = 2100;
	AmmoType1 = ItemManaGreen;
	AmmoUse1 = 20;
	//needsnomana = true;
	UpState = S_FHAMMERUP;
	DownState = S_FHAMMERDOWN;
	ReadyState = S_FHAMMERREADY;
	AttackState = S_FHAMMERATK_1;
	HoldAttackState = S_FHAMMERATK_1;
	PSpriteSY = -10.0;
	HammerRange = MELEERANGE + MELEERANGE / 2.0;
	wis_mod = true;
	int_mod = true;
	dex_mod = true;
	str_mod = true;
	bBotChooseMelee = false;
	bBotChooseMedium = true;
	bBotChooseRanged = true;
	PickUpMessage = "HAMMER OF RETRIBUTION";
	Obituary = "$ob_hammer";
}
