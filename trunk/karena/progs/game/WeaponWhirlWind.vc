//**************************************************************************
//**
//**	    ##   ##   ####   ######     ##    ##     ##
//**	    ##  ##   ##  ##  ##   ##  ##  ##   ### ###
//**	    ## ##   ##    ## ##   ## ##    ##   #####
//**	    ######  ##    ## #####   ########   #####
//**	    ## ###   ##  ##  ######  ##    ##  ### ###
//**	    ##   ##   ####   ##  ### ##    ## ##     ##
//**
//**		##    ######    ##### ###   ##    ##
//**	      ##  ##  ##   ##  #####  ####  ##  ##  ##
//**	     ##    ## ##   ## ##      ##### ## ##    ##
//**	     ######## #####   #####   ## ##### ########
//**	     ##    ## ######  ##      ##  #### ##    ##
//**	     ##    ## ##  ###  #####  ##   ### ##    ##
//**
//**    $Id$
//**
//**    Copyright (C) 2004-2006 Korax Heritage Team
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************
//
//	!!!! UNUSED !!!!
//
//**************************************************************************

class WeaponWhirlWind : KArenaWeapon;

//==========================================================================
//
//  A_FireWhirlWind
//
//==========================================================================

final void A_FireWhirlWind()
{
	EntityEx mo;

	mo = Actor(Owner).SpawnPlayerMissile_2(MageWhirlWind);
	if (mo)
	{
		//mo.Origin.z -= 32.0;
		//mo.Target = Actor(Owner);
		mo.Tracer = Actor(mo.RoughMonsterSearch(10));
		mo.Health = 20 * TICRATE;	// Duration
		if (int_mod)
		{
			if(!active_damage)
			{
				mo.MissileDamage = mo.MissileDamage * Player(Owner.Player).intelligence / 10;
			}
			else // [FB] PI Damage
			{
				mo.MissileDamage = (mo.MissileDamage * Player(Owner.Player).intelligence / 10) * ftoi(3.1415);
			}
		}
		Owner.PlaySound('MageShardsFire', CHAN_WEAPON);
		mo.PlaySound('WhirlWind3', CHAN_WEAPON);
	}
	UseWeaponMana();
}

states
{
Ready:
	CONE A 1 A_WeaponReady
	Loop
Deselect:
	CONE A 1 A_Lower
	Loop
Select:
	CONE A 1 A_Raise
	Loop
Fire:
	CONE B 3
	CONE C 4
Hold:
	CONE D 3
	CONE E 5
	CONE F 3 A_FireWhirlWind
	CONE G 3
	CONE A 9
	CONE A 10 A_ReFire
	Goto Ready
}

/*SIXTH*/
defaultproperties
{
	AmmoType1 = ItemManaGreen;
	AmmoUse1 = 20;
	PSpriteSY = 20.0;
	wis_mod = true;
	int_mod = true;
	dex_mod = false;
	str_mod = false;
	bBotChooseMelee = false;
	bBotChooseMedium = false;
	bBotChooseRanged = false;
	PickupMessage = "WHIRLWIND SPELL";
}
