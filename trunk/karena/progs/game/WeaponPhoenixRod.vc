//**************************************************************************
//**
//**	    ##   ##   ####   ######     ##    ##     ##
//**	    ##  ##   ##  ##  ##   ##  ##  ##   ### ###
//**	    ## ##   ##    ## ##   ## ##    ##   #####
//**	    ######  ##    ## #####   ########   #####
//**	    ## ###   ##  ##  ######  ##    ##  ### ###
//**	    ##   ##   ####   ##  ### ##    ## ##     ##
//**
//**		##    ######    ##### ###   ##    ##
//**	      ##  ##  ##   ##  #####  ####  ##  ##  ##
//**	     ##    ## ##   ## ##      ##### ## ##    ##
//**	     ######## #####   #####   ## ##### ########
//**	     ##    ## ######  ##      ##  #### ##    ##
//**	     ##    ## ##  ###  #####  ##   ### ##    ##
//**
//**    $Id$
//**
//**    Copyright (C) 2004-2006 Korax Heritage Team
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class WeaponPhoenixRod : Weapon;

int FlameCount;	// for flame thrower duration

state Attack2ShutdownState;

//==========================================================================
//
//	WeaponLevel2Fade
//
//==========================================================================
/*
void WeaponLevel2Fade()
{
	if (StateNum != ReadyState2 && StateNum != UpState2)
	{
		SetState(ReadyState);
		UseWeaponMana();
		Player.Refire = 0;
	}
}
*/
//===========================================================================
//
//  A_FirePhoenixPL1
//
//===========================================================================

void A_FirePhoenixPL1()
{
	Actor A;
	TVec vforward;

	UseWeaponMana();
	Player.MO.PlaySound('PhoenixFire', CHAN_WEAPON);
	A = Player(Player).SpawnPlayerMissile(PhoenixFX1);
	if (A && int_mod)
	{
		if(!active_damage)
		{
			A.MissileDamage = A.MissileDamage * Player(Player).intelligence / 10;
		}
		else // [FB] PI Damage
		{
			A.MissileDamage = (A.MissileDamage * Player(Player).intelligence / 10) * ftoi(3.1415);
		}
	}
	AngleVector(&Player.MO.Angles, &vforward);
	Player.MO.Velocity -= vforward * 140.0;
}

//===========================================================================
//
//  A_InitPhoenixPL2
//
//===========================================================================

void A_InitPhoenixPL2()
{
	FlameCount = 2 * 35;
}

//===========================================================================
//
//  A_FirePhoenixPL2
//
//  Flame thrower effect.
//
//===========================================================================

void A_FirePhoenixPL2()
{
	Actor A;
	TVec dir;
	TVec org;
	if (--FlameCount == 0)
	{
		// Out of flame
		Player.SetViewState(ps_weapon, Attack2ShutdownState);
		Player(Player).Refire = 0;
		return;
	}
	org.x = Player.MO.Origin.x + (Random() - Random()) * 2.0;
	org.y = Player.MO.Origin.y + (Random() - Random()) * 2.0;
	org.z = Player.MO.Origin.z + 26.0 - sin(Player.MO.Angles.pitch);
	org.z -= Player.MO.FloorClip;
	A = HexenLevelInfo(Player.Level).Spawn(PhoenixFX2, org);
	if (int_mod)
	{
		if(!active_damage)
		{
			A.MissileDamage = A.MissileDamage * Player(Player).intelligence / 10;
		}
		else // [FB] PI Damage
		{
			A.MissileDamage = (A.MissileDamage * Player(Player).intelligence / 10) * ftoi(3.1415);
		}
	}
	A.Instigator = Actor(Player.MO);
	A.Angles.yaw = Player.MO.Angles.yaw;
	A.Angles.pitch = Player.MO.Angles.pitch;
	AngleVector(&A.Angles, &dir);
	A.Velocity = Player.MO.Velocity + A.Speed * dir;
	if (!Player(Player).Refire || !(Player.Level.Game.level->tictime % 38))
	{
		Player.MO.PlaySound('PhoenixHit2', CHAN_WEAPON);
	}
	A.CheckMissileSpawn();
}

//===========================================================================
//
//  A_ShutdownPhoenixPL2
//
//===========================================================================

void A_ShutdownPhoenixPL2()
{
	UseWeaponMana();
}

__states__
{
	S_PHOENIXREADY('PHNX', 0, 1.0 / 35.0, S_PHOENIXREADY) { A_WeaponReady(); }
	S_PHOENIXREADY2('PHX2', 0, 1.0 / 35.0, S_PHOENIXREADY2_1) { A_WeaponReady(); }
	S_PHOENIXREADY2_1('PHX2', 1, 1.0 / 35.0, S_PHOENIXREADY2) { A_WeaponReady(); }
	S_PHOENIXDOWN('PHNX', 0, 1.0 / 35.0, S_PHOENIXDOWN) { A_Lower(); }
	S_PHOENIXDOWN2('PHX2', 0, 1.0 / 35.0, S_PHOENIXDOWN2) { A_Lower(); }
	S_PHOENIXUP('PHNX', 0, 1.0 / 35.0, S_PHOENIXUP) { A_Raise(); }
	S_PHOENIXUP2('PHX2', 0, 1.0 / 35.0, S_PHOENIXUP2) { A_Raise(); }
	S_PHOENIXATK1_1('PHNX', 1, 5.0 / 35.0, S_PHOENIXATK1_2) { }
	S_PHOENIXATK1_2('PHNX', 2, 7.0 / 35.0, S_PHOENIXATK1_3) { A_FirePhoenixPL1(); }
	S_PHOENIXATK1_3('PHNX', 3, 4.0 / 35.0, S_PHOENIXATK1_4) { }
	S_PHOENIXATK1_4('PHNX', 1, 4.0 / 35.0, S_PHOENIXATK1_5) { }
	S_PHOENIXATK1_5('PHNX', 1, 0.0 / 35.0, S_PHOENIXREADY) { A_ReFire(); }
	S_PHOENIXATK2_1('PHX2', 2, 3.0 / 35.0, S_PHOENIXATK2_2) { A_InitPhoenixPL2(); }
	S_PHOENIXATK2_2('PHX2', 3 | FF_FULLBRIGHT, 1.0 / 35.0, S_PHOENIXATK2_3) { A_FirePhoenixPL2(); }
	S_PHOENIXATK2_3('PHX2', 2, 4.0 / 35.0, S_PHOENIXATK2_4) { A_ReFire(); }
	S_PHOENIXATK2_4('PHX2', 2, 4.0 / 35.0, S_PHOENIXREADY2) { A_ShutdownPhoenixPL2(); }
}

/*SEVENTH*/
defaultproperties
{
	Mana = HexenDefs::MANA_3;
	manause = 15;
	UpState = S_PHOENIXUP;
	DownState = S_PHOENIXDOWN;
	ReadyState = S_PHOENIXREADY;
	AttackState = S_PHOENIXATK1_1;
	HoldAttackState = S_PHOENIXATK1_1;
	PSpriteSY = 15.0;
	wis_mod = true;
	int_mod = true;
	dex_mod = false;
	str_mod = false;
	PickUpMessage = "PHOENIX ROD";
}
