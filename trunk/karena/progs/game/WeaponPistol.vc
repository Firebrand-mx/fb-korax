//**************************************************************************
//**
//**	    ##   ##   ####   ######     ##    ##     ##
//**	    ##  ##   ##  ##  ##   ##  ##  ##   ### ###
//**	    ## ##   ##    ## ##   ## ##    ##   #####
//**	    ######  ##    ## #####   ########   #####
//**	    ## ###   ##  ##  ######  ##    ##  ### ###
//**	    ##   ##   ####   ##  ### ##    ## ##     ##
//**
//**		##    ######    ##### ###   ##    ##
//**	      ##  ##  ##   ##  #####  ####  ##  ##  ##
//**	     ##    ## ##   ## ##      ##### ## ##    ##
//**	     ######## #####   #####   ## ##### ########
//**	     ##    ## ######  ##      ##  #### ##    ##
//**	     ##    ## ##  ###  #####  ##   ### ##    ##
//**
//**    $Id$
//**
//**    Copyright (C) 2004-2006 Korax Heritage Team
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class WeaponPistol : Weapon;

//===========================================================================
//
//  A_FirePistol
//
//===========================================================================

final void A_FirePistol()
{
	TVec dir;
	TAVec angles;

	Owner.PlaySound('PistolFire', CHAN_WEAPON);

	Owner.SetState(Actor(Owner).MissileState);
	UseWeaponMana();

	Owner.Player.SetViewState(ps_flash, FlashState);

	angles = Owner.Angles;
	Actor(Owner).AimLineAttack(&angles, MISSILERANGE);
	AngleVector(&angles, &dir);
//	dir = Aim(Player.MO, 16.0 * 64.0);
	GunShot(Actor(Owner), !Player(Owner.Player).Refire, dir);
	Owner.Effects |= HexenDefs::EF_DL_MUZZLEFLASH;
}

__states__
{
	S_PISTOL('PISG', 0, 1.0 / 35.0, S_PISTOL) = A_WeaponReady
	S_PISTOLDOWN('PISG', 0, 1.0 / 35.0, S_PISTOLDOWN) = A_Lower
	S_PISTOLUP('PISG', 0, 1.0 / 35.0, S_PISTOLUP) = A_Raise
	S_PISTOL1('PISG', 0, 4.0 / 35.0, S_PISTOL2) = none
	S_PISTOL2('PISG', 1, 6.0 / 35.0, S_PISTOL3) = A_FirePistol
	S_PISTOL3('PISG', 2, 4.0 / 35.0, S_PISTOL4) = none
	S_PISTOL4('PISG', 1, 5.0 / 35.0, S_PISTOL) = A_ReFire
	S_PISTOLFLASH('PISF', 0 | FF_FULLBRIGHT, 7.0 / 35.0, S_PISTOL_LIGHTDONE) = A_Light1
	S_PISTOL_LIGHTDONE('PISG', 0, 0.0 / 35.0, none) = A_Light0
}

defaultproperties
{
	UpState = S_PISTOLUP;
	DownState = S_PISTOLDOWN;
	ReadyState = S_PISTOL;
	AttackState = S_PISTOL1;
	FlashState = S_PISTOLFLASH;
	HoldAttackState = S_PISTOL1;
	Mana = HexenDefs::MANA_1;
	manause = 2;
	wis_mod = true;
	int_mod = true;
	dex_mod = false;
	str_mod = false;

	bInstantRanged = true;
	deathmsgi = 26;
}
