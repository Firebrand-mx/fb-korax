//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class ThrowingBomb : Projectile;

//===========================================================================
//
//  A_CheckThrowBomb
//
//===========================================================================

final void A_CheckThrowBomb()
{
	if (fabs(Velocity.x) < 1.5 * 35.0 &&
		fabs(Velocity.y) < 1.5 * 35.0 &&
		Velocity.z < 2.0 * 35.0 && State == GetStatePlus(IdleState, 5))
	{
		SetState(FindState('Landed'));
		Origin.z = FloorZ;
		Velocity.z = 0.0;
		BounceType = BOUNCE_None;
		bMissile = false;
	}
	if (!--Health)
	{
		SetState(FindState('Death'));
	}
}

states
{
Spawn:
	THRW A 4 A_CheckThrowBomb
	THRW BCDEF 3 A_CheckThrowBomb
	Loop
Landed:
	THRW G 6 A_CheckThrowBomb
	THRW F 4 A_CheckThrowBomb
	THRW H 6 A_CheckThrowBomb
	THRW F 4 A_CheckThrowBomb
	THRW G 6 A_CheckThrowBomb
	THRW F 3 A_CheckThrowBomb
	Wait
Death:
	CFCF Q 4 Bright A_NoGravity
	CFCF R 3 Bright A_Scream
	CFCF S 4 Bright A_Explode
	CFCF T 3 Bright
	CFCF U 4 Bright
	CFCF W 3 Bright
	CFCF X 4 Bright
	CFCF Z 3 Bright
	Stop
}

defaultproperties
{
	Health = 48;
	Radius = 8.0;
	Height = 10.0;
	Speed = 420.0;
	BounceType = BOUNCE_Hexen;
	DamageType = 'Fire';
	bNoGravity = false;
	bNoTeleport = false;
	bActivateImpact = false;
	bActivatePCross = false;
	bDynamicLight = false;
	ExplodeEffect = RGB(255, 128, 0);
	SightSound = 'FlechetteBounce';
	DeathSound = 'FlechetteExplode';
}
