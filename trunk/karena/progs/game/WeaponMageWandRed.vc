//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class WeaponMageWandRed : Weapon;

//==========================================================================
//
//  A_MWandAttack
//
//==========================================================================

void A_MWandAttack(int when)
{
	Actor mo;
	mo = Player(Player).SpawnPlayerMissile(MageWandRedMissile);
	if (mo && int_mod)
	{
		if(!active_damage)
		{
			mo.MissileDamage = mo.MissileDamage * Player(Player).intelligence / 10;
		}
		else // [FB] PI Damage
		{
			mo.MissileDamage = (mo.MissileDamage * Player(Player).intelligence / 10) * ftoi(3.1415);
		}
	}
	Player.MO.PlaySound('MageWandFire', CHAN_WEAPON);
	if (when == 1)
	{
		UseWeaponMana();
	}
}

__states__
{
	S_MWANDREDREADY('MWN3', 0, 1.0 / 35.0, S_MWANDREDREADY) { A_WeaponReady(); }
	S_MWANDREDDOWN('MWN3', 0, 1.0 / 35.0, S_MWANDREDDOWN) { A_Lower(); }
	S_MWANDREDUP('MWN3', 0, 1.0 / 35.0, S_MWANDREDUP) { A_Raise(); }
	S_MWANDREDATK_1('MWN3', 0, 6.0 / 35.0, S_MWANDREDATK_2) { }
	S_MWANDREDATK_2('MWN3', 1 | FF_FULLBRIGHT, 2.0 / 35.0, S_MWANDREDATK_3) { SY = 48.0; A_MWandAttack(1); }
	S_MWANDREDATK_3('MWN3', 0, 2.0 / 35.0, S_MWANDREDATK_4) { }
	S_MWANDREDATK_4('MWN3', 1 | FF_FULLBRIGHT, 2.0 / 35.0, S_MWANDREDATK_5) { SY = 48.0; A_MWandAttack(2); }
	S_MWANDREDATK_5('MWN3', 0, 2.0 / 35.0, S_MWANDREDATK_6) { }
	S_MWANDREDATK_6('MWN3', 1 | FF_FULLBRIGHT, 2.0 / 35.0, S_MWANDREDATK_7) { SY = 48.0; A_MWandAttack(3); }
	S_MWANDREDATK_7('MWN3', 0, 3.0 / 35.0, S_MWANDREDATK_8) { SY = 40.0; }
	S_MWANDREDATK_8('MWN3', 0, 8.0 / 35.0, S_MWANDREDREADY) { SY = 36.0; A_ReFire(); }
}

/*THIRD*/
defaultproperties
{
	Mana = HexenDefs::MANA_2;
	manause = 3;
	UpState = S_MWANDREDUP;
	DownState = S_MWANDREDDOWN;
	ReadyState = S_MWANDREDREADY;
	AttackState = S_MWANDREDATK_1;
	HoldAttackState = S_MWANDREDATK_1;
	PSpriteSY = 9.0;
	wis_mod = true;
	int_mod = true;
	dex_mod = false;
	str_mod = false;
	PickUpMessage = "FIRE WAND";
}
