//**************************************************************************
//**
//**	    ##   ##   ####   ######     ##    ##     ##
//**	    ##  ##   ##  ##  ##   ##  ##  ##   ### ###
//**	    ## ##   ##    ## ##   ## ##    ##   #####
//**	    ######  ##    ## #####   ########   #####
//**	    ## ###   ##  ##  ######  ##    ##  ### ###
//**	    ##   ##   ####   ##  ### ##    ## ##     ##
//**
//**		##    ######    ##### ###   ##    ##
//**	      ##  ##  ##   ##  #####  ####  ##  ##  ##
//**	     ##    ## ##   ## ##      ##### ## ##    ##
//**	     ######## #####   #####   ## ##### ########
//**	     ##    ## ######  ##      ##  #### ##    ##
//**	     ##    ## ##  ###  #####  ##   ### ##    ##
//**
//**    $Id$
//**
//**    Copyright (C) 2004-2006 Korax Heritage Team
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class MorningStarMissile : Projectile;

//==========================================================================
//
//	GetExplodeParms
//
//==========================================================================

void GetExplodeParms(out int damage, out float distance, out byte damageSelf)
{
	damage = 80;		
	if (Target && Target.bIsPlayer)
	{
		damage = damage * Player(Target.Player).intelligence / 10;
	}
}

//==========================================================================
//
//  A_MorningBallImpact
//
//==========================================================================

final void A_MorningBallImpact()
{
	int i;
	KArenaActor tiny;
	float angle;

	if (Origin.z <= FloorZ)
	{
		bNoGravity = true;
		Origin.z += 48.0;
	}
	//RadiusAttack(25, 0, 0);
	for (i = 0; i < 4; i++)
	{
		tiny = Spawn(SmallMorningBall, Origin);
		tiny.SpawnCombatAttributes(KArenaActor(Target), self);
		//tiny.Target = Target;
		//if (Target)
		//	tiny.PInstigator = Player(Target.Player);
		angle = itof(i) * 90.0;
		tiny.Angles.yaw = angle;
		tiny.Velocity.x = 6.7 * cos(angle) * 35.0;
		tiny.Velocity.y = 6.7 * sin(angle) * 35.0;
		tiny.Velocity.z = (8.0 + Random() * 2.0) * 35.0;
		tiny.CheckMissileSpawn();
	}
}

states
{
Spawn:
	DRFX ABCDEF 4 Bright
	Loop
Death:
	DRFX GHI 4 Bright
	DRFX J 4 Bright A_MorningBallImpact
	DRFX K 3 Bright A_Explode
	DRFX L 3 Bright
	Stop
}

defaultproperties
{
	Radius = 12.0;
	Height = 10.0;
	Speed = 840.0;
	MissileDamage = 6;
	DamageType = 'Fire';
	bActivateImpact = true;
	bActivatePCross = true;
	DeathSound = 'DragonFireballExplode';
	DLightColour = RGB(255, 128, 0);
	DLightRadius = 118.0;
	//Obituary = "$ob_morningstar";
}
