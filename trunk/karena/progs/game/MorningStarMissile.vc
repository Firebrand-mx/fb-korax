//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class MorningStarMissile : Projectile;

//==========================================================================
//
//  A_MorningBallImpact
//
//==========================================================================

void A_MorningBallImpact()
{
	int i;
	Actor tiny;
	float angle;

	if (Origin.z <= FloorZ)
	{
		bNoGravity = true;
		Origin.z += 48.0;
	}
	//RadiusAttack(25, 0, 0);
	for (i = 0; i < 4; i++)
	{
		tiny = Spawn(SmallMorningBall, Origin);
		tiny.Instigator = self;
		angle = itof(i) * 90.0;
		tiny.Angles.yaw = angle;
		tiny.Velocity.x = 6.7 * cos(angle) * 35.0;
		tiny.Velocity.y = 6.7 * sin(angle) * 35.0;
		tiny.Velocity.z = (8.0 + Random() * 2.0) * 35.0;
		tiny.CheckMissileSpawn();
	}
}

__states__
{
	S_MORNING_BALL_FX1_1('DRFX', 0 | FF_FULLBRIGHT, 4.0 / 35.0, S_MORNING_BALL_FX1_2) { }
	S_MORNING_BALL_FX1_2('DRFX', 1 | FF_FULLBRIGHT, 4.0 / 35.0, S_MORNING_BALL_FX1_3) { }
	S_MORNING_BALL_FX1_3('DRFX', 2 | FF_FULLBRIGHT, 4.0 / 35.0, S_MORNING_BALL_FX1_4) { }
	S_MORNING_BALL_FX1_4('DRFX', 3 | FF_FULLBRIGHT, 4.0 / 35.0, S_MORNING_BALL_FX1_5) { }
	S_MORNING_BALL_FX1_5('DRFX', 4 | FF_FULLBRIGHT, 4.0 / 35.0, S_MORNING_BALL_FX1_6) { }
	S_MORNING_BALL_FX1_6('DRFX', 5 | FF_FULLBRIGHT, 4.0 / 35.0, S_MORNING_BALL_FX1_1) { }
	S_MORNING_BALL_FX1_X1('DRFX', 6 | FF_FULLBRIGHT, 4.0 / 35.0, S_MORNING_BALL_FX1_X2) { }
	S_MORNING_BALL_FX1_X2('DRFX', 7 | FF_FULLBRIGHT, 4.0 / 35.0, S_MORNING_BALL_FX1_X3) { }
	S_MORNING_BALL_FX1_X3('DRFX', 8 | FF_FULLBRIGHT, 4.0 / 35.0, S_MORNING_BALL_FX1_X4) { }
	S_MORNING_BALL_FX1_X4('DRFX', 9 | FF_FULLBRIGHT, 4.0 / 35.0, S_MORNING_BALL_FX1_X5) { A_MorningBallImpact(); }
	S_MORNING_BALL_FX1_X5('DRFX', 10 | FF_FULLBRIGHT, 3.0 / 35.0, S_MORNING_BALL_FX1_X6) { A_Explode(); }
	S_MORNING_BALL_FX1_X6('DRFX', 11 | FF_FULLBRIGHT, 3.0 / 35.0, none) { }
}

defaultproperties
{
	Radius = 12.0;
	Height = 10.0;
	Speed = 840.0;
	MissileDamage = 6;
	bFireDamage = true;
	bActivateImpact = true;
	bActivatePCross = true;
	IdleState = S_MORNING_BALL_FX1_1;
	DeathState = S_MORNING_BALL_FX1_X1;
	DeathSound = 'DragonFireballExplode';
	Effects = HexenDefs::EF_DL_WHITE;

	//[CW]
	deathmsgi[0] = 42;
}

//**************************************************************************
//
//  Revision 1.1  2002/10/26 16:32:26  dj_jl
//  New style of defining classes.
//
//**************************************************************************
