//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class WeaponBFG : WeaponDoomBase;

//===========================================================================
//
//  A_BFGsound
//
//===========================================================================

void A_BFGsound(void)
{
	Player.MO.PlaySound('BFGFire', CHAN_WEAPON);
}

//===========================================================================
//
//  A_FireBFG
//
//===========================================================================

void A_FireBFG(void)
{
	Actor mo;
	UseWeaponMana();
	mo = Player.SpawnPlayerMissile(BFGShot);
	if (mo && int_mod)
	{
		if(!active_damage)
		{
			mo.MissileDamage = mo.MissileDamage * Player.intelligence /10;
		}
		else // [FB] PI Damage
		{
			mo.MissileDamage = (mo.MissileDamage * Player.intelligence /10) * ftoi(3.1415);
		}
	}
}

__states__
{
	S_BFG('BFGG', 0, 1.0 / 35.0, S_BFG) { A_WeaponReady(); }
	S_BFGDOWN('BFGG', 0, 1.0 / 35.0, S_BFGDOWN) { A_Lower(); }
	S_BFGUP('BFGG', 0, 1.0 / 35.0, S_BFGUP) { A_Raise(); }
	S_BFG1('BFGG', 0, 20.0 / 35.0, S_BFG2) { A_BFGsound(); }
	S_BFG2('BFGG', 1, 10.0 / 35.0, S_BFG3) { A_GunFlash(S_BFGFLASH1); }
	S_BFG3('BFGG', 1, 10.0 / 35.0, S_BFG4) { A_FireBFG(); }
	S_BFG4('BFGG', 1, 20.0 / 35.0, S_BFG) { A_ReFire(); }
	S_BFGFLASH1('BFGF', 0 | FF_FULLBRIGHT, 11.0 / 35.0, S_BFGFLASH2) { /*A_Light1();*/ }
	S_BFGFLASH2('BFGF', 1 | FF_FULLBRIGHT, 6.0 / 35.0, S_LIGHTDONE) { /*A_Light2();*/ }
}

defaultproperties
{
	UpState = S_BFGUP;
	DownState = S_BFGDOWN;
	ReadyState = S_BFG;
	AttackState = S_BFG1;
	FlashState = S_BFGFLASH1;
	HoldAttackState = S_BFG1;
	Mana = NUMMANA;
	manause = 100;
	wis_mod = true;
	int_mod = true;
	dex_mod = false;
	str_mod = false;
	PickUpMessage = "BFG 9000";
}

//**************************************************************************
//
//  $Log$
//  Revision 1.4  2005/08/12 23:04:25  firebrand_kh
//  Fixed weapons to work with the PI Damage artifact
//
//  Revision 1.3  2005/08/08 18:16:51  firebrand_kh
//  Took out model definitions
//
//  Revision 1.2  2005/02/03 01:05:06  firebrand_kh
//  Fixed Doom Guy weapon bug with the new effects
//
//  Revision 1.1  2004/11/16 13:33:22  dj_jl
//  Initial import.
//
//  Revision 1.2  2003/11/12 16:48:33  dj_jl
//  Changed player structure into a class
//
//  Revision 1.1  2002/10/26 16:32:20  dj_jl
//  New style of defining classes.
//
//**************************************************************************
