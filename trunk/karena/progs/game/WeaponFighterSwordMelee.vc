//**************************************************************************
//**
//**	    ##   ##   ####   ######     ##    ##     ##
//**	    ##  ##   ##  ##  ##   ##  ##  ##   ### ###
//**	    ## ##   ##    ## ##   ## ##    ##   #####
//**	    ######  ##    ## #####   ########   #####
//**	    ## ###   ##  ##  ######  ##    ##  ### ###
//**	    ##   ##   ####   ##  ### ##    ## ##     ##
//**
//**		##    ######    ##### ###   ##    ##
//**	      ##  ##  ##   ##  #####  ####  ##  ##  ##
//**	     ##    ## ##   ## ##      ##### ## ##    ##
//**	     ######## #####   #####   ## ##### ########
//**	     ##    ## ######  ##      ##  #### ##    ##
//**	     ##    ## ##  ###  #####  ##   ### ##    ##
//**
//**    $Id$
//**
//**    Copyright (C) 2004-2006 Korax Heritage Team
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class WeaponFighterSwordMelee : WeaponEx;

float SwordRange;

//==========================================================================
//
//  A_FSwordMeleeAttack
//
//==========================================================================

final void A_FSwordMeleeAttack()
{
	Actor		pmo = Actor(Owner);
	float		power;
	int			damage;
	TAVec		angles;
	TVec		vforward;
	EntityEx	AimTarget;

	damage = 125; //100 + (P_Random() & 30) + (P_Random() & 15);
	if (str_mod)
	{
		if(!active_damage)
		{
			damage = damage * Player(Owner.Player).strength / 10;
		}
		else // [FB] PI Damage
		{
			damage = (damage * Player(Owner.Player).strength / 10) * ftoi(3.1415);
		}
	}
	power = 0.0;
	AimTarget = pmo.AimEx(vforward, SwordRange, 45.0 / 16.0, 16, MELEERANGE);
	if (AimTarget)
	{
		VectorAngles(&vforward, &angles);
		if (pmo.LineAttack(vforward, SwordRange, damage, AxePuff))
		{
			pmo.PlaySound('FighterHammerMiss', CHAN_WEAPON);
		}
		if (AimTarget.bMonster || AimTarget.bIsPlayer)
		{
			AimTarget.Thrust(angles.yaw, power);
		}
		Player(Owner.Player).AdjustPlayerAngle(AimTarget);
		UseWeaponMana();
	}
	else
	{
		// didn't find any creatures, so try to strike any walls
		if (pmo.LineAttack(vforward, MELEERANGE, damage, AxePuff))
		{
			pmo.PlaySound('FighterHammerMiss', CHAN_WEAPON);
		}
	}
}

__states__
{
	S_FSWORDMELEEREADY('FSD2', 0, 1.0 / 35.0, S_FSWORDMELEEREADY) = A_WeaponReady
	S_FSWORDMELEEDOWN('FSD2', 0, 1.0 / 35.0, S_FSWORDMELEEDOWN) = A_Lower
	S_FSWORDMELEEUP('FSD2', 0, 1.0 / 35.0, S_FSWORDMELEEUP) = A_Raise
	S_FSWORDMELEEATK_1('FSD2', 1, 4.0 / 35.0, S_FSWORDMELEEATK_2, 15, 32) = none
	S_FSWORDMELEEATK_2('FSD2', 2, 3.0 / 35.0, S_FSWORDMELEEATK_3, 15, 32) = none
	S_FSWORDMELEEATK_3('FSD2', 3, 2.0 / 35.0, S_FSWORDMELEEATK_4, 15, 32) = none
	S_FSWORDMELEEATK_4('FSD2', 3, 1.0 / 35.0, S_FSWORDMELEEATK_5, -5, 70) = A_FSwordMeleeAttack
	S_FSWORDMELEEATK_5('FSD2', 3, 2.0 / 35.0, S_FSWORDMELEEATK_6, -25, 90) = none
	S_FSWORDMELEEATK_6('FSD2', 4, 1.0 / 35.0, S_FSWORDMELEEATK_7, 15, 32) = none
	S_FSWORDMELEEATK_7('FSD2', 4, 2.0 / 35.0, S_FSWORDMELEEATK_8, 10, 54) = none
	S_FSWORDMELEEATK_8('FSD2', 4, 7.0 / 35.0, S_FSWORDMELEEATK_9, 10, 150) = none
	S_FSWORDMELEEATK_9('FSD2', 0, 1.0 / 35.0, S_FSWORDMELEEATK_10, 0, 60) = A_ReFire
	S_FSWORDMELEEATK_10('FSD2', 0, 1.0 / 35.0, S_FSWORDMELEEATK_11, 0, 52) = none
	S_FSWORDMELEEATK_11('FSD2', 0, 1.0 / 35.0, S_FSWORDMELEEATK_12, 0, 44) = none
	S_FSWORDMELEEATK_12('FSD2', 0, 1.0 / 35.0, S_FSWORDMELEEATK_13, 0, 36) = none
	S_FSWORDMELEEATK_13('FSD2', 0, 1.0 / 35.0, S_FSWORDMELEEREADY) = none
}

/*SEVENTH*/
defaultproperties
{
	WeaponType = HexenDefs::WP_SEVENTH;
	ManaType1 = ItemManaCombined;
	manause = 50;
	UpState = S_FSWORDMELEEUP;
	DownState = S_FSWORDMELEEDOWN;
	ReadyState = S_FSWORDMELEEREADY;
	AttackState = S_FSWORDMELEEATK_1;
	HoldAttackState = S_FSWORDMELEEATK_1;
	PSpriteSY = 12.0;
	SwordRange = MELEERANGE + MELEERANGE;
	wis_mod = true;
	int_mod = false;
	dex_mod = true;
	str_mod = true;
	PickUpMessage = "HALF QUIETUS";
	Obituary = "$ob_quietusmelee";
}
