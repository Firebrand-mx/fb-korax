//**************************************************************************
//**
//**	    ##   ##   ####   ######     ##    ##     ##
//**	    ##  ##   ##  ##  ##   ##  ##  ##   ### ###
//**	    ## ##   ##    ## ##   ## ##    ##   #####
//**	    ######  ##    ## #####   ########   #####
//**	    ## ###   ##  ##  ######  ##    ##  ### ###
//**	    ##   ##   ####   ##  ### ##    ## ##     ##
//**
//**		##    ######    ##### ###   ##    ##
//**	      ##  ##  ##   ##  #####  ####  ##  ##  ##
//**	     ##    ## ##   ## ##      ##### ## ##    ##
//**	     ######## #####   #####   ## ##### ########
//**	     ##    ## ######  ##      ##  #### ##    ##
//**	     ##    ## ##  ###  #####  ##   ### ##    ##
//**
//**    $Id$
//**
//**    Copyright (C) 2004-2006 Korax Heritage Team
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class WeaponWitchavenFireballSpell : KArenaWeapon;

//==========================================================================
//
//	WFireballSpawn
//
//==========================================================================

final void WFireballSpawn(float angle)
{
	EntityEx mo;

	if (!bIsPlayer)
	{
		return;
	}
	KArenaWeapon Wpn = KArenaWeapon(PlayerEx(Player).ReadyWeapon);

	mo = KArenaActor(self).SpawnPlayerMissileAngle_2(Wpn, FireBallMissile, angle);

	if (mo)
	{
		//mo.Target = Actor(Owner);
		mo.Tracer = Actor(mo.RoughMonsterSearch(2));
		Wpn.ApplyDamageModifiers(mo.MissileDamage);
	}
}

//==========================================================================
//
//  A_WFireballAttack
//
//==========================================================================

final void A_WFireballAttack()
{
	float angle;

	if (!bIsPlayer)
	{
		return;
	}
	KArenaWeapon Wpn = KArenaWeapon(PlayerEx(Player).ReadyWeapon);

	Wpn.UseWeaponMana();
	angle = Angles.yaw;

	if (Player(Player).exp_level >= 1 && Player(Player).exp_level < 3)
	{
		WFireballSpawn(angle);
	}
	if (Player(Player).exp_level >= 3 && Player(Player).exp_level < 4)
	{
		WFireballSpawn(angle - 2.5);
		WFireballSpawn(angle);
	}
	if (Player(Player).exp_level >= 4 && Player(Player).exp_level < 5)
	{
		WFireballSpawn(angle - 2.5);
		WFireballSpawn(angle);
		WFireballSpawn(angle + 2.5);
	}
	if (Player(Player).exp_level >= 5)
	{
		WFireballSpawn(angle - 5.0);
		WFireballSpawn(angle - 2.5);
		WFireballSpawn(angle);
		WFireballSpawn(angle + 2.5);
	}	

	PlaySound('MageStaffFire', CHAN_WEAPON);
}

states
{
Ready:
	WEFR A 1 Offset(0, 15) A_WeaponReady
	Loop
Deselect:
	WEFR A 1 A_Lower
	Loop
Select:
	WEFR A 1 A_Raise
	Loop
Fire:
	WEFR B 2
	WEFR C 2 Bright Offset(0, 20)
	WEFR DE 2 Bright
	WEFR F 2 Bright A_WFireballAttack
	WEFR GH 2 Bright
	WEFR IJ 2
	Goto Ready
}

/*SIXTH*/
defaultproperties
{
	Slot = 6;
	SelectionOrder = 2600;
	AmmoType1 = ItemManaGreen;
	AmmoUse1 = 30;
	PSpriteSY = 20.0;
	BotCombatDist = 256.0 + MISSILERANGE;
	wis_mod = true;
	int_mod = true;
	dex_mod = false;
	str_mod = false;
	bBotChooseMelee = false;
	bBotChooseMedium = true;
	bBotChooseRanged = true;
	bBotProjectile = true;
	refire_tics = 12.0;
	fire_tics = 6.0;
	PickupMessage = "FIREBALL SPELL";
	RangedObituary = "$ob_wfireball";
}
