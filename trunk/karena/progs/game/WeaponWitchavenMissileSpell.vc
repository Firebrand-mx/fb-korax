//**************************************************************************
//**
//**	    ##   ##   ####   ######     ##    ##     ##
//**	    ##  ##   ##  ##  ##   ##  ##  ##   ### ###
//**	    ## ##   ##    ## ##   ## ##    ##   #####
//**	    ######  ##    ## #####   ########   #####
//**	    ## ###   ##  ##  ######  ##    ##  ### ###
//**	    ##   ##   ####   ##  ### ##    ## ##     ##
//**
//**		##    ######    ##### ###   ##    ##
//**	      ##  ##  ##   ##  #####  ####  ##  ##  ##
//**	     ##    ## ##   ## ##      ##### ## ##    ##
//**	     ######## #####   #####   ## ##### ########
//**	     ##    ## ######  ##      ##  #### ##    ##
//**	     ##    ## ##  ###  #####  ##   ### ##    ##
//**
//**    $Id$
//**
//**    Copyright (C) 2004-2006 Korax Heritage Team
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class WeaponWitchavenMissileSpell : KArenaWeapon;

//==========================================================================
//
//	WMissileSpawn
//
//==========================================================================

final void WMissileSpawn(float angle)
{
	EntityEx mo;

	mo = KArenaPlayerPawn(Owner).SpawnPlayerMissileAngle_2(self, MagicMissile, angle);

	if (mo)
	{
		MagicMissile(mo).FindEnemy();
		ApplyDamageModifiers(mo.MissileDamage);
	}
}

//==========================================================================
//
//  A_WMMissilesAttack
//
//==========================================================================

final void A_WMMissilesAttack() self(KArenaPlayerPawn)
{
	float angle;

	if (!bIsPlayer)
	{
		return;
	}
	WeaponWitchavenMissileSpell Wpn = WeaponWitchavenMissileSpell(PlayerEx(Player).ReadyWeapon);

	Wpn.UseWeaponMana();
	angle = Angles.yaw;

	if (Player(Player).exp_level >= 1 && Player(Player).exp_level < 2)
	{
		Wpn.WMissileSpawn(angle - 2.5);
		Wpn.WMissileSpawn(angle - 5.0);
		Wpn.WMissileSpawn(angle + 2.5);
		Wpn.WMissileSpawn(angle + 5.0);

	}
	if (Player(Player).exp_level >= 2 && Player(Player).exp_level < 4)
	{
		Wpn.WMissileSpawn(angle - 5.0);
		Wpn.WMissileSpawn(angle - 2.5);
		Wpn.WMissileSpawn(angle);
		Wpn.WMissileSpawn(angle + 2.5);
		Wpn.WMissileSpawn(angle + 5.0);
	}
	if (Player(Player).exp_level >= 4 && Player(Player).exp_level < 5)
	{
		Wpn.WMissileSpawn(angle - 7.5);
		Wpn.WMissileSpawn(angle - 5.0);
		Wpn.WMissileSpawn(angle - 2.5);
		Wpn.WMissileSpawn(angle);
		Wpn.WMissileSpawn(angle + 2.5);
		Wpn.WMissileSpawn(angle + 5.0);
		Wpn.WMissileSpawn(angle + 7.5);
	}
	if (Player(Player).exp_level >= 5)
	{
		Wpn.WMissileSpawn(angle - 10.0);
		Wpn.WMissileSpawn(angle - 7.5);
		Wpn.WMissileSpawn(angle - 5.0);
		Wpn.WMissileSpawn(angle - 2.5);
		Wpn.WMissileSpawn(angle);
		Wpn.WMissileSpawn(angle + 2.5);
		Wpn.WMissileSpawn(angle + 5.0);
		Wpn.WMissileSpawn(angle + 7.5);
		Wpn.WMissileSpawn(angle + 10.0);
	}

	PlaySound('MageStaffFire', CHAN_WEAPON);
}

states
{
Ready:
	WENC A 1 A_WeaponReady
	Loop
Deselect:
	WENC A 1 A_Lower
	Loop
Select:
	WENC A 1 A_Raise
	Loop
Fire:
	WENC BCDEFGHI 2
	WENC J 2 Bright A_WMMissilesAttack
	WENC KLMNO 2 Bright
	WENC PQ 2
	Goto Ready
}

/*FOURTH*/
defaultproperties
{
	Slot = 4;
	SelectionOrder = 4600;
	AmmoType1 = ItemManaRed;
	AmmoUse1 = 10;
	PSpriteSY = 20.0;
	BotCombatDist = 384.0 + MISSILERANGE;
	wis_mod = true;
	int_mod = true;
	dex_mod = false;
	str_mod = false;
	bBotChooseMelee = false;
	bBotChooseMedium = true;
	bBotChooseRanged = true;
	bBotProjectile = true;
	PickupMessage = "MAGIC MISSILES";
	Obituary = "$ob_magicmissile";
	refire_tics = 20.0;
	fire_tics = 16.0;
}
