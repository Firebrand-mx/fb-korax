//**************************************************************************
//**
//**	    ##   ##   ####   ######     ##    ##     ##
//**	    ##  ##   ##  ##  ##   ##  ##  ##   ### ###
//**	    ## ##   ##    ## ##   ## ##    ##   #####
//**	    ######  ##    ## #####   ########   #####
//**	    ## ###   ##  ##  ######  ##    ##  ### ###
//**	    ##   ##   ####   ##  ### ##    ## ##     ##
//**
//**		    ##    ######    ##### ###   ##    ##
//**	      ##  ##  ##   ##  #####  ####  ##  ##  ##
//**	     ##    ## ##   ## ##      ##### ## ##    ##
//**	     ######## #####   #####   ## ##### ########
//**	     ##    ## ######  ##      ##  #### ##    ##
//**	     ##    ## ##  ###  #####  ##   ### ##    ##
//**
//**    $Id$
//**
//**    Copyright (C) 2004-2006 Korax Heritage Team
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class BFGShot : Projectile;

//===========================================================================
//
//  A_BFGSpray
//
//  Spawn a BFG explosion on every monster in view
//
//===========================================================================

final void A_BFGSpray()
{
	int i;
	int j;
	int damage;
	TAVec aimAng;
	Actor emo;

	// offset angles from its attack angle
	for (i = 0; i < 40; i++)
	{
		aimAng = Angles;
		aimAng.yaw = AngleMod360(aimAng.yaw - 45.0 + 90.0 / 40.0 * itof(i));

		// target is the originator (player)
		//  of the missile
		Instigator.AimLineAttack(&aimAng, 16.0 * 64.0);
		if (!Instigator.linetarget)
		{
			continue;
		}

		emo = Spawn(ExtraBFG, Instigator.linetarget.Origin +
			vector(0.0, 0.0, Instigator.linetarget.Height / 4.0));

		SendExplosion2(HexenDefs::EF_DL_GREEN, emo.Origin);

		damage = 0;
		for (j = 0; j < 100; j++)
			damage += 10; //(P_Random() & 7) + 1;

		Instigator.linetarget.Damage(Instigator, Instigator, damage);
	}
}

__states__
{
	S_BFGSHOT('BFS1', 0 | FF_FULLBRIGHT, 4.0 / 35.0, S_BFGSHOT2) = none
	S_BFGSHOT2('BFS1', 1 | FF_FULLBRIGHT, 4.0 / 35.0, S_BFGSHOT) = none
	S_BFGLAND('BFE1', 0 | FF_FULLBRIGHT, 8.0 / 35.0, S_BFGLAND2) = none
	S_BFGLAND2('BFE1', 1 | FF_FULLBRIGHT, 8.0 / 35.0, S_BFGLAND3) = none
	S_BFGLAND3('BFE1', 2 | FF_FULLBRIGHT, 8.0 / 35.0, S_BFGLAND4) = A_BFGSpray
	S_BFGLAND4('BFE1', 3 | FF_FULLBRIGHT, 8.0 / 35.0, S_BFGLAND5) = none
	S_BFGLAND5('BFE1', 4 | FF_FULLBRIGHT, 8.0 / 35.0, S_BFGLAND6) = none
	S_BFGLAND6('BFE1', 5 | FF_FULLBRIGHT, 8.0 / 35.0, none) = none
}

defaultproperties
{
	Radius = 13.0;
	Height = 8.0;
	Speed = 875.0;
	MissileDamage = 300;
	Alpha = 0.666;
	IdleState = S_BFGSHOT;
	DeathState = S_BFGLAND;
	DeathSound = 'RocketExplode';
	Effects = HexenDefs::EF_DL_GREEN;

	//[CW]
	//deathmsgi[0] = 39;
	deathmsgi = 32;
}
