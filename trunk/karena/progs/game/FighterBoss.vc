//**************************************************************************
//**
//**	    ##   ##   ####   ######     ##    ##     ##
//**	    ##  ##   ##  ##  ##   ##  ##  ##   ### ###
//**	    ## ##   ##    ## ##   ## ##    ##   #####
//**	    ######  ##    ## #####   ########   #####
//**	    ## ###   ##  ##  ######  ##    ##  ### ###
//**	    ##   ##   ####   ##  ### ##    ## ##     ##
//**
//**		##    ######    ##### ###   ##    ##
//**	      ##  ##  ##   ##  #####  ####  ##  ##  ##
//**	     ##    ## ##   ## ##      ##### ## ##    ##
//**	     ######## #####   #####   ## ##### ########
//**	     ##    ## ######  ##      ##  #### ##    ##
//**	     ##    ## ##  ###  #####  ##   ### ##    ##
//**
//**    $Id$
//**
//**    Copyright (C) 2004-2006 Korax Heritage Team
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class FighterBoss : ClassBoss
	__mobjinfo__(10100);

//==========================================================================
//
//  A_FighterAttack
//
//==========================================================================

final void A_FighterAttack()
{
	if (!Target)
		return;

	SpawnMissileAngle(FighterSwordMissile,
		AngleMod360(Angles.yaw + 45.0 / 4.0), 0.0);
	SpawnMissileAngle(FighterSwordMissile,
		AngleMod360(Angles.yaw + 45.0 / 8.0), 0.0);
	SpawnMissileAngle(FighterSwordMissile, Angles.yaw, 0.0);
	SpawnMissileAngle(FighterSwordMissile,
		AngleMod360(Angles.yaw - 45.0 / 8.0), 0.0);
	SpawnMissileAngle(FighterSwordMissile,
		AngleMod360(Angles.yaw - 45.0 / 4.0), 0.0);
	PlaySound('FighterSwordFire', CHAN_WEAPON);
}

//==========================================================================
//
//  A_FighterBurnScream
//
//==========================================================================

final void A_FighterBurnScream()
{
	PlaySound('PlayerFighterBurnDeath', CHAN_VOICE);
}

states
{
Spawn:
	PLAY A 2
	PLAY A 3 A_ClassBossHealth
	PLAY A 5 A_Look
	Wait
See:
	PLAY ABCD 4 A_FastChase
	Loop
Melee:
Missile:
	PLAY E 8 A_FaceTarget
	PLAY F 8 A_FighterAttack
	Goto See
Pain:
	PLAY G 4
	PLAY G 4 A_Pain
	Goto See
Death:
	PLAY H 6
	PLAY I 6 A_Scream
	PLAY JK 6
	PLAY L 6 A_NoBlocking
	PLAY M 6
	PLAY N -1
	Stop
XDeath:
	PLAY O 5 A_Scream
	PLAY P 5
	PLAY R 5 A_NoBlocking
	PLAY STUV 5
	PLAY W -1
	Stop
Ice:
	PLAY X 5 A_FreezeDeath
	PLAY X 1 A_FreezeDeathChunks
	Wait
Burn:
	FDTH A 5 Bright A_FighterBurnScream
	FDTH B 4 Bright
	FDTH G 5 Bright
	FDTH H 4 Bright A_Scream
	FDTH I 5 Bright
	FDTH J 4 Bright
	FDTH K 5 Bright
	FDTH L 4 Bright
	FDTH M 5 Bright
	FDTH N 4 Bright
	FDTH O 5 Bright
	FDTH P 4 Bright
	FDTH Q 5 Bright
	FDTH R 4 Bright
	FDTH S 5 Bright A_NoBlocking
	FDTH T 4 Bright
	FDTH U 5 Bright
	FDTH V 4 Bright
	ACLO E 35 A_CheckPlayerDone
	Wait
BurnGone:
	ACLO E 8
	Stop
}

defaultproperties
{
	Health = 800;
	GibsHealth = -400;
	Radius = 16.0;
	Height = 64.0;
	Mass = 100.0;
	Speed = 25.0 * 35.0;
	PainChance = 0.1953125;
	PainSound = 'PlayerFighterPain';
	DeathSound = 'PlayerFighterCrazyDeath';
	RangedObituary = "$ob_zedek";
}
