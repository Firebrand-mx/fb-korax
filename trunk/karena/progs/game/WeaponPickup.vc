//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class WeaponPickup : Inventory
	abstract;

int WeaponClass;
int WeaponType;

//==========================================================================
//
//  TryPickup
//
//==========================================================================

bool TryPickup(EntityEx Toucher)
{
	bool gaveMana;
	bool gaveWeapon;
	/*bool mm1;
	bool mm2;
	bool mm3;*/

/*	if ((WeaponType > WP_FOURTH && P.Player.exp_level < 2) ||
	    (WeaponType == WP_EIGHTH && P.Player.exp_level < 3))
	{
		centreprint(P.Player, "YOU CAN'T USE THE %s",
		            P.Player.GetWeaponPickupText(WeaponType));
		return;
	}*/

//[Korax]	
/*	if (Toucher.Player.PClass != WeaponClass)
	{
		// Wrong class, but try to pick up for mana
		if (Level.Game.netgame && !Level.Game.deathmatch)
		{
			// Can't pick up weapons for other classes in coop netplay
			return;
		}
		if (WeaponType == HexenDefs::WP_SECOND)
		{
			if (!Player(Toucher.Player).GiveMana(HexenDefs::MANA_1, 25))
			{
				return;
			}
		}
		else
		{
			if (!Player(Toucher.Player).GiveMana(HexenDefs::MANA_2, 25))
			{
				return;
			}
		}
	}
	else if (Level.Game.netgame && !Level.Game.deathmatch)
	{
		// Cooperative net-game
		if (Player(Toucher.Player).WeaponOwned[WeaponType])
		{
			return;
		}
		Player(Toucher.Player).WeaponOwned[WeaponType] = true;
		if (WeaponType == HexenDefs::WP_SECOND)
		{
			Player(Toucher.Player).GiveMana(HexenDefs::MANA_1, 25);
		}
		else
		{
			Player(Toucher.Player).GiveMana(HexenDefs::MANA_2, 25);
		}
		Player(Toucher.Player).PendingWeapon = WeaponType;
		remove = false;
	}
	else*/
	{
		// Deathmatch or single player game
		/*if (WeaponType == HexenDefs::WP_SECOND)
		{
			gaveMana = Player(Toucher.Player).GiveMana(HexenDefs::MANA_1, 25);
		}
		else
		{
			gaveMana = Player(Toucher.Player).GiveMana(HexenDefs::MANA_2, 25);
		}*/
		if (Player(Toucher.Player).WeaponOwned[WeaponType])
		{
			gaveWeapon = false;
			if (MainGameInfo(Level.Game).whatmana[WeaponType] == HexenDefs::NUMMANA)
			{
				gaveMana = Player(Toucher.Player).GiveMana(HexenDefs::MANA_123, 25);
				/*mm1 = Player(Toucher.Player).GiveMana(HexenDefs::MANA_1, 25);
				mm2 = Player(Toucher.Player).GiveMana(HexenDefs::MANA_2, 25);
				mm3 = Player(Toucher.Player).GiveMana(HexenDefs::MANA_3, 25);

				if (!mm1 && !mm2 && !mm3)
				{
					gaveMana = 0;
				}
				else
				{
					gaveMana = 1;
				}*/
			}
			else
				gaveMana = Player(Toucher.Player).GiveMana(MainGameInfo(Level.Game).whatmana[WeaponType], 25);
		}
		else
		{
			gaveWeapon = true;
			Player(Toucher.Player).WeaponOwned[WeaponType] = true;
			if (WeaponType > Player(Toucher.Player).ReadyWeapon)
			{
				// Only switch to more powerful weapons
				Player(Toucher.Player).PendingWeapon = WeaponType;
			}
			
			if (MainGameInfo(Level.Game).whatmana[WeaponType] == HexenDefs::NUMMANA)
			{
				gaveMana = Player(Toucher.Player).GiveMana(HexenDefs::MANA_123, 25);
				/*mm1 = Player(Toucher.Player).GiveMana(HexenDefs::MANA_1, 25);
				mm2 = Player(Toucher.Player).GiveMana(HexenDefs::MANA_2, 25);
				mm3 = Player(Toucher.Player).GiveMana(HexenDefs::MANA_3, 25);

				if (!mm1 && !mm2 && !mm3)
				{
					gaveMana = 0;
				}
				else
				{
					gaveMana = 1;
				}*/
			}
			else
				gaveMana = Player(Toucher.Player).GiveMana(MainGameInfo(Level.Game).whatmana[WeaponType], 25/*manaadding[P.Player.PClass*NUMWEAPONS+WeaponType]*/);
		}
		if (!gaveWeapon && !gaveMana)
		{
			// Player didn't need the weapon or any mana
			return false;
		}
	}

	PickupMessage = Player(Toucher.Player).GetWeaponPickupText(WeaponType);

	GoAwayAndDie();
	return true;
}

//==========================================================================
//
//	GetPickupMessage
//
//==========================================================================

string GetPickupMessage()
{
	return PickupMessage;
}

defaultproperties
{
	Height = 32.0;
	bSpecial = true;
	bNoPassMobj = true;
	bFloatBob = true;
	PickupSound = 'PickupWeapon';
}
