//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class WeaponPickup : WeaponEx
	abstract;

//==========================================================================
//
//  TryPickup
//
//==========================================================================

bool TryPickup(EntityEx Toucher)
{
	class<WeaponEx> WpnClass = PlayerPawn(Toucher).WeaponClasses[Slot - 1];
	if (!WpnClass)
	{
		return false;
	}
	Inventory Wpn = Toucher.FindInventory(WpnClass);

	if (Wpn)
	{
		bool gaveMana = false;
		if (Player(Toucher.Player).GiveMana(AmmoType1, AmmoGive1))
		{
			gaveMana = true;
		}
		if (Player(Toucher.Player).GiveMana(AmmoType2, AmmoGive2))
		{
			gaveMana = true;
		}
		if (Player(Toucher.Player).GiveMana(AmmoType3, AmmoGive3))
		{
			gaveMana = true;
		}
		if (!gaveMana)
		{
			// Player didn't need any mana
			return false;
		}
		PickupMessage = WpnClass.default.PickupMessage;
		GoAwayAndDie();
		return true;
	}

/*	if ((WeaponType > WP_FOURTH && P.Player.exp_level < 2) ||
	    (WeaponType == WP_EIGHTH && P.Player.exp_level < 3))
	{
		centreprint(P.Player, "YOU CAN'T USE THE %s",
		            P.Player.GetWeaponPickupText(WeaponType));
		return;
	}*/

	Player(Toucher.Player).GiveMana(AmmoType1, AmmoGive1);
	Player(Toucher.Player).GiveMana(AmmoType2, AmmoGive2);
	Player(Toucher.Player).GiveMana(AmmoType3, AmmoGive3);

	Wpn = Spawn(WpnClass);
	Wpn.AttachToOwner(Toucher);
	if (Slot > Player(Toucher.Player).ReadyWeapon.Slot)
	{
		// Only switch to more powerful weapons
		Player(Toucher.Player).PendingWeapon = WeaponEx(Wpn);
	}

	PickupMessage = Wpn.PickupMessage;
	GoAwayAndDie();
	return true;
}

//==========================================================================
//
//	GetPickupMessage
//
//==========================================================================

string GetPickupMessage()
{
	return PickupMessage;
}

defaultproperties
{
	Height = 32.0;
	bFloatBob = true;
	AmmoGive1 = 25;
	AmmoGive2 = 25;
	AmmoGive3 = 25;
	PickupSound = 'PickupWeapon';
}
