//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class LightningFloor : LightningMissile;

//==========================================================================
//
//  A_LastZap
//
//==========================================================================

final void A_LastZap()
{
	Actor A;

	A = Spawn(LightningZap, Origin);
	if (A)
	{
		A.SetState(LightningZap::S_LIGHTNING_ZAP_X1);
		A.Velocity.z = 40.0 * 35.0;
	}
}

__states__
{
	S_LIGHTNING_FLOOR1('MLFX', 4 | FF_FULLBRIGHT, 2.0 / 35.0, S_LIGHTNING_FLOOR2) = A_LightningZap
	S_LIGHTNING_FLOOR2('MLFX', 5 | FF_FULLBRIGHT, 2.0 / 35.0, S_LIGHTNING_FLOOR3) = A_LightningClip
	S_LIGHTNING_FLOOR3('MLFX', 6 | FF_FULLBRIGHT, 2.0 / 35.0, S_LIGHTNING_FLOOR4) = A_LightningClip
	S_LIGHTNING_FLOOR4('MLFX', 7 | FF_FULLBRIGHT, 2.0 / 35.0, S_LIGHTNING_FLOOR1) = A_LightningClip
	S_LIGHTNING_F_X1('MLF2', 5 | FF_FULLBRIGHT, 2.0 / 35.0, S_LIGHTNING_F_X2) = A_LightningRemove
	S_LIGHTNING_F_X2('MLF2', 6 | FF_FULLBRIGHT, 3.0 / 35.0, S_LIGHTNING_F_X3) = none
	S_LIGHTNING_F_X3('MLF2', 7 | FF_FULLBRIGHT, 3.0 / 35.0, S_LIGHTNING_F_X4) = none
	S_LIGHTNING_F_X4('MLF2', 8 | FF_FULLBRIGHT, 3.0 / 35.0, S_LIGHTNING_F_X5) = none
	S_LIGHTNING_F_X5('MLF2', 9 | FF_FULLBRIGHT, 3.0 / 35.0, S_LIGHTNING_F_X6) = none
	S_LIGHTNING_F_X6('MLF2', 10 | FF_FULLBRIGHT, 3.0 / 35.0, S_LIGHTNING_F_X7) = none
	S_LIGHTNING_F_X7('MLF2', 11 | FF_FULLBRIGHT, 3.0 / 35.0, S_LIGHTNING_F_X8) = none
	S_LIGHTNING_F_X8('MLF2', 12 | FF_FULLBRIGHT, 3.0 / 35.0, S_LIGHTNING_F_X9) = none
	S_LIGHTNING_F_X9('ACLO', 4, 20.0 / 35.0, S_LIGHTNING_F_X10) = none
	S_LIGHTNING_F_X10('MLF2', 13 | FF_FULLBRIGHT, 3.0 / 35.0, S_LIGHTNING_F_X11) = none
	S_LIGHTNING_F_X11('MLF2', 14 | FF_FULLBRIGHT, 3.0 / 35.0, S_LIGHTNING_F_X12) = none
	S_LIGHTNING_F_X12('MLF2', 15 | FF_FULLBRIGHT, 4.0 / 35.0, S_LIGHTNING_F_X13) = none
	S_LIGHTNING_F_X13('MLF2', 16 | FF_FULLBRIGHT, 3.0 / 35.0, S_LIGHTNING_F_X14) = none
	S_LIGHTNING_F_X14('MLF2', 15 | FF_FULLBRIGHT, 3.0 / 35.0, S_LIGHTNING_F_X15) = none
	S_LIGHTNING_F_X15('MLF2', 16 | FF_FULLBRIGHT, 4.0 / 35.0, S_LIGHTNING_F_X16) = A_LastZap
	S_LIGHTNING_F_X16('MLF2', 15 | FF_FULLBRIGHT, 3.0 / 35.0, S_LIGHTNING_F_X17) = none
	S_LIGHTNING_F_X17('MLF2', 14 | FF_FULLBRIGHT, 3.0 / 35.0, S_LIGHTNING_F_X18) = none
	S_LIGHTNING_F_X18('MLF2', 15 | FF_FULLBRIGHT, 3.0 / 35.0, S_LIGHTNING_F_X19) = none
	S_LIGHTNING_F_X19('MLF2', 15 | FF_FULLBRIGHT, 1.0 / 35.0, S_FREETARGMOBJ) = A_HideThing
}

defaultproperties
{
	IdleState = S_LIGHTNING_FLOOR1;
	DeathState = S_LIGHTNING_F_X1;
	MaxStepHeight = 99999.0;
	bIgnoreFloorStep = true;
}
