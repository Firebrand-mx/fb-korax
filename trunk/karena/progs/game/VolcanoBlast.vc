//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class VolcanoBlast : Projectile;

//==========================================================================
//
//  A_BeastPuff
//
//==========================================================================

void A_BeastPuff()
{
	TVec org;

	if (P_Random() > 64)
	{
		org.x = Origin.x + (Random() - Random()) * 4.0;
		org.y = Origin.y + (Random() - Random()) * 4.0;
		org.z = Origin.z + (Random() - Random()) * 4.0;
		Spawn(Puffy, org);
	}
}

//==========================================================================
//
//  A_VolcBallImpact
//
//==========================================================================

void A_VolcBallImpact()
{
	int i;
	Actor tiny;
	float angle;

	if (Origin.z <= FloorZ)
	{
		bNoGravity = true;
		Origin.z += 28.0;
	}
	P_RadiusAttack(25, 25.0, false);
	for (i = 0; i < 4; i++)
	{
		tiny = Spawn(VolcanoTBlast, Origin);
		tiny.Instigator = self;
		angle = itof(i) * 90.0;
		tiny.Angles.yaw = angle;
		tiny.Velocity.x = 0.7 * cos(angle) * 35.0;
		tiny.Velocity.y = 0.7 * sin(angle) * 35.0;
		tiny.Velocity.z = (3.0 + Random() * 6.0) * 35.0;
		tiny.CheckMissileSpawn();
	}
}

__states__
{
	S_VOLCANOBALL1('VFBL', 0, 4.0 / 35.0, S_VOLCANOBALL2) { A_BeastPuff(); }
	S_VOLCANOBALL2('VFBL', 1, 4.0 / 35.0, S_VOLCANOBALL1) { A_BeastPuff(); }
	S_VOLCANOBALLX1('XPL1', 0, 4.0 / 35.0, S_VOLCANOBALLX2) { A_VolcBallImpact(); }
	S_VOLCANOBALLX2('XPL1', 1, 4.0 / 35.0, S_VOLCANOBALLX3) { }
	S_VOLCANOBALLX3('XPL1', 2, 4.0 / 35.0, S_VOLCANOBALLX4) { }
	S_VOLCANOBALLX4('XPL1', 3, 4.0 / 35.0, S_VOLCANOBALLX5) { }
	S_VOLCANOBALLX5('XPL1', 4, 4.0 / 35.0, S_VOLCANOBALLX6) { }
	S_VOLCANOBALLX6('XPL1', 5, 4.0 / 35.0, none) { }
}

defaultproperties
{
	Radius = 8.0;
	Height = 8.0;
	Speed = 70.0;
	MissileDamage = 2;
	bFireDamage = true;
	bNoGravity = false;
	IdleState = S_VOLCANOBALL1;
	DeathState = S_VOLCANOBALLX1;
	DeathSound = 'VolcanoHit';
	Effects = HexenDefs::EF_DL_RED;
}

//**************************************************************************
//
//  $Log$
//  Revision 1.4  2006/03/12 19:37:09  dj_jl
//  States as objects, added state variable type.
//
//  Revision 1.3  2006/02/17 19:17:51  dj_jl
//  Moved common defs to classes.
//
//  Revision 1.2  2005/12/11 21:37:29  dj_jl
//  Made path traversal callbacks class members.
//
//  Revision 1.1  2005/10/25 17:58:38  firebrand_kh
//  Initial Import
//
//  Revision 1.2  2005/07/07 17:55:51  dj_jl
//  More vertical velocity for volcano projectiles.
//
//  Revision 1.1  2002/10/26 16:32:23  dj_jl
//  New style of defining classes.
//
//**************************************************************************
