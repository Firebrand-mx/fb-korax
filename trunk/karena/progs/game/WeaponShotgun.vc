//**************************************************************************
//**
//**	    ##   ##   ####   ######     ##    ##     ##
//**	    ##  ##   ##  ##  ##   ##  ##  ##   ### ###
//**	    ## ##   ##    ## ##   ## ##    ##   #####
//**	    ######  ##    ## #####   ########   #####
//**	    ## ###   ##  ##  ######  ##    ##  ### ###
//**	    ##   ##   ####   ##  ### ##    ## ##     ##
//**
//**		##    ######    ##### ###   ##    ##
//**	      ##  ##  ##   ##  #####  ####  ##  ##  ##
//**	     ##    ## ##   ## ##      ##### ## ##    ##
//**	     ######## #####   #####   ## ##### ########
//**	     ##    ## ######  ##      ##  #### ##    ##
//**	     ##    ## ##  ###  #####  ##   ### ##    ##
//**
//**    $Id$
//**
//**    Copyright (C) 2004-2006 Korax Heritage Team
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class WeaponShotgun : Weapon;

//===========================================================================
//
//  A_FireShotgun
//
//===========================================================================

void A_FireShotgun()
{
	int i;
	TVec dir;
	TAVec angles;

	Player.MO.PlaySound('ShotgunFire', CHAN_WEAPON);
	Player.MO.SetState(Actor(Player.MO).MissileState);

	UseWeaponMana();

	Player(Player).SetPsprite(ps_flash, FlashState);

	angles = Player.MO.Angles;
	Actor(Player.MO).AimLineAttack(&angles, MISSILERANGE);
	AngleVector(&angles, &dir);
//	dir = Aim(Player.MO, 16.0 * 64.0);
	for (i = 0; i < 10/*7*/; i++)
	{
		GunShot(Actor(Player.MO), false, dir);
	}
	Player.MO.Effects |= HexenDefs::EF_DL_MUZZLEFLASH;
}

__states__
{
	S_SGUN('SHTG', 0, 1.0 / 35.0, S_SGUN) { A_WeaponReady(); }
	S_SGUNDOWN('SHTG', 0, 1.0 / 35.0, S_SGUNDOWN) { A_Lower(); }
	S_SGUNUP('SHTG', 0, 1.0 / 35.0, S_SGUNUP) { A_Raise(); }
	S_SGUN1('SHTG', 0, 3.0 / 35.0, S_SGUN2) { }
	S_SGUN2('SHTG', 0, 7.0 / 35.0, S_SGUN3) { A_FireShotgun(); }
	S_SGUN3('SHTG', 1, 5.0 / 35.0, S_SGUN4) { }
	S_SGUN4('SHTG', 2, 5.0 / 35.0, S_SGUN5) { }
	S_SGUN5('SHTG', 3, 4.0 / 35.0, S_SGUN6) { }
	S_SGUN6('SHTG', 2, 5.0 / 35.0, S_SGUN7) { }
	S_SGUN7('SHTG', 1, 5.0 / 35.0, S_SGUN8) { }
	S_SGUN8('SHTG', 0, 3.0 / 35.0, S_SGUN9) { }
	S_SGUN9('SHTG', 0, 7.0 / 35.0, S_SGUN) { A_ReFire(); }
	S_SGUNFLASH1('SHTF', 0 | FF_FULLBRIGHT, 4.0 / 35.0, S_SGUNFLASH2) { A_Light1(); }
	S_SGUNFLASH2('SHTF', 1 | FF_FULLBRIGHT, 3.0 / 35.0, S_SGUN_LIGHTDONE) { A_Light2(); }
	S_SGUN_LIGHTDONE('SHTG', 0, 0.0 / 35.0, none) { A_Light0(); }
}

defaultproperties
{
	UpState = S_SGUNUP;
	DownState = S_SGUNDOWN;
	ReadyState = S_SGUN;
	AttackState = S_SGUN1;
	FlashState = S_SGUNFLASH1;
	HoldAttackState = S_SGUN1;
	Mana = HexenDefs::MANA_2;
	manause = 10;
	wis_mod = true;
	int_mod = true;
	dex_mod = false;
	str_mod = false;
	PickUpMessage = "SHOTGUN";
}
