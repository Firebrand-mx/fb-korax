//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class MenuChoice_Level : MenuChoiceEnum;

string MapLumpNames[32];

bool MapPrefixIs(int i, string Prefix)
{
	int			TmpName[3];

	strcpy(ARR2STR(TmpName), P_GetMapLumpName(i));
	strsetchar(ARR2STR(TmpName), strlen(Prefix), 0);
	return !stricmp(ARR2STR(TmpName), Prefix);
}

void InitMapList(int GameType)
{
	int i;
	int Idx;
#ifdef FIXME
	int count = 0;

	for (i = 1; i <= 99; i++)
	{
		int map = P_TranslateMap(i);

		if (map != -1)
		{
			EnumNames[count] = P_GetMapName(map);
			count++;
		}
	}
	MaxValue = count;
#else
	Idx = 0;
	for (i = 1; i <= 32; i++)
	{
		switch (GameType)
		{
		case 0:	//	Cooperative
			if (!MapPrefixIs(i, "map"))
				continue;
			break;
		case 1:	//	Deathmatch
		case 2:	//	Team deathmatch.
			if (!MapPrefixIs(i, "dm"))
				continue;
			break;
		}
		EnumNames[Idx] = P_GetMapName(i);
		MapLumpNames[Idx] = P_GetMapLumpName(i);
		Idx++;
	}
	MaxValue = Idx;
#endif
	Value = 0;
}

void InitWindow()
{
	::InitWindow();
	InitMapList(1);
}

defaultproperties
{
	Text = "Level";
}

//**************************************************************************
//
//  $Log$
//  Revision 1.2  2005/09/13 17:51:19  dj_jl
//  Level list depending on game type.
//
//  Revision 1.1  2004/11/16 13:33:19  dj_jl
//  Initial import.
//
//  Revision 1.1  2002/10/26 16:32:24  dj_jl
//  New style of defining classes.
//
//**************************************************************************
