//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class LevelInfo : Thinker
	native
	abstract;

//==========================================================================
//
//  SpawnSpecials
//
//==========================================================================

void SpawnSpecials()
{
}

//==========================================================================
//
//  UpdateSpecials
//
//==========================================================================

void UpdateSpecials()
{
}

//==========================================================================
//
//  FindLine
//
//==========================================================================

line_t* FindLine(int lineTag, int *searchPosition)
{
	return NULL;
}

//==========================================================================
//
//  PolyThrustMobj
//
//==========================================================================

void PolyThrustMobj(Entity A, TVec thrustDir, polyobj_t * po)
{
}

//==========================================================================
//
//  PolyBusy
//
//==========================================================================

bool PolyBusy(int polyobj)
{
	return false;
}

//==========================================================================
//
//	ThingCount
//
//==========================================================================

int ThingCount(int type, int tid)
{
	return 0;
}

//==========================================================================
//
//	FindMobjFromTID
//
//==========================================================================

Entity FindMobjFromTID(int tid, int *searchPosition)
{
	int i;

	for (i = *searchPosition + 1; TIDList[i] != 0; i++)
	{
		if (TIDList[i] == tid)
		{
			*searchPosition = i;
			return TIDMobj[i];
		}
	}
	*searchPosition = -1;
	return none;
}

//==========================================================================
//
//  ExecuteActionSpecial
//
//==========================================================================

bool ExecuteActionSpecial(int Special, int Arg1, int Arg2, int Arg3,
	int Arg4, int Arg5, line_t* line, int side, Entity A)
{
	return false;
}

//==========================================================================
//
//	EV_ThingProjectile
//
//==========================================================================

bool EV_ThingProjectile(int Arg1, int Arg2, int Arg3, int Arg4, int Arg5,
	bool gravity, int newtid)
{
	return false;
}

//==========================================================================
//
//  StartPlaneWatcher
//
//==========================================================================

void StartPlaneWatcher(Actor it, line_t* line, int lineSide, bool ceiling,
	int tag, int height, int special, int arg0, int arg1, int arg2, int arg3,
	int arg4)
{
}

defaultproperties
{
}

//**************************************************************************
//
//  $Log$
//  Revision 1.1  2005/12/29 17:32:11  dj_jl
//  Created level info class, moved action special handling to it.
//
//**************************************************************************
