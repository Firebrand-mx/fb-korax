//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class SectorThinker : Thinker;

sector_t*		Sector;
int				ThinkerState;

//==========================================================================
//
//	Archive
//
//==========================================================================

void Archive()
{
	//	There must be a betetr way of doing this.
	ThinkerState = 0;
	if (Sector->FloorData == self)
		ThinkerState |= 1;
	if (Sector->CeilingData == self)
		ThinkerState |= 2;
	if (Sector->LightingData == self)
		ThinkerState |= 4;
	Sector = SectorToNum(Sector);
}

//==========================================================================
//
//	Unarchive
//
//==========================================================================

void Unarchive()
{
	Sector = NumToSector(Sector);
	if (ThinkerState & 1)
		Sector->FloorData = self;
	if (ThinkerState & 2)
		Sector->CeilingData = self;
	if (ThinkerState & 4)
		Sector->LightingData = self;
}

defaultproperties
{
}

//**************************************************************************
//
//  $Log$
//  Revision 1.2  2005/03/01 15:33:57  dj_jl
//  Big update of line specials.
//
//  Revision 1.1  2004/11/16 13:33:18  dj_jl
//  Initial import.
//
//  Revision 1.1  2002/10/26 16:32:17  dj_jl
//  New style of defining classes.
//
//**************************************************************************
