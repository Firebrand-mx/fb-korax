//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class Level : Object
	native;

//	Flags.
native bool			bForServer;	//	True if this level belongs to the server.
native bool			bExtended;	//	True if level was in Hexen format.
native bool			bGLNodesV5;	//	True if using version 5 GL nodes.

//
//	MAP related Lookup tables.
//	Store VERTEXES, LINEDEFS, SIDEDEFS, etc.
//

native int			NumVertexes;
native TVec*		Vertexes;

native int			NumSectors;
native sector_t*	Sectors;

native int			NumSides;
native side_t*		Sides;

native int			NumLines;
native line_t*		Lines;

native int			__NumSegs;
native void*		__Segs;

native int			__NumSubsectors;
native void*		__Subsectors;

native int			__NumNodes;
native void*		__Nodes;

native void*		__VisData;
native void*		__NoVis;

// !!! Used only during level loading
native int			NumThings;
native mthing_t*	Things;

native void*		__BlockMapLump;
native void*		__BlockMap;
native int			__BlockMapWidth;
native int			__BlockMapHeight;
native float		BlockMapOrgX;
native float		BlockMapOrgY;
native void*		__BlockLinks;
native void*		__PolyBlockMap;

native void*		__RejectMatrix;

//	Strife conversations.
native int				NumGenericSpeeches;
native RogueConSpeech*	GenericSpeeches;

native int				NumLevelSpeeches;
native RogueConSpeech*	LevelSpeeches;

//	List of all poly-objects on the level.
native int			__NumPolyObjs;
native void*		__PolyObjs;

native Thinker		__ThinkerHead;
native Thinker		__ThinkerTail;

//
//	Natives
//

native sector_t *PointInSector(TVec Point);

defaultproperties
{
}

//**************************************************************************
//
//  $Log$
//  Revision 1.4  2006/03/06 13:10:48  dj_jl
//  Thunker list in level.
//
//  Revision 1.4  2006/02/25 17:15:55  dj_jl
//  Implemented proper serialisation of the objects.
//
//  Revision 1.3  2005/11/14 19:34:43  dj_jl
//  Added support for version 5 GL nodes.
//
//  Revision 1.2  2004/12/03 16:15:46  dj_jl
//  Implemented support for extended ACS format scripts, functions, libraries and more.
//
//  Revision 1.1  2002/10/26 16:32:17  dj_jl
//  New style of defining classes.
//
//**************************************************************************
