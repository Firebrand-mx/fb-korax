//------------------------------------------------------------------------------
class Actor extends Actor
	native
{
	action native A_FadeAway(float fadealpha, float fadescale, optional int fadehealth);
	action native A_GenericFloorFire(class<Actor> ffclass);
	
	action native A_KRPGPain();
	
	action native A_GenericDoBlur(int CountMask, int CountAdd, float ThrustForce, name SoundName);
	action native A_GenericSpawnBlur(class<Actor> BlurClass, state AfterState);

	//
	//	KRPG style Generic monster attacks
	//

	action native A_SimpleMissileAttack(class<Actor> missiletype, name soundname,
								 optional bool bPlaySoundAlways);
	action native A_PredictingMissileAttack(class<Actor> MissileType, float PredictionChance, float MaxAngle, optional float SpawnHeight,
					optional int SpawnXYOffset, optional float Angle, optional int AimMode,	optional float Pitch);
	action native A_AimGrenade(class<Actor> itemtype, float pitch, float maxspeed,
						state failedstate, optional EntityEx aimtarget);
	action native A_ThrowAimedGrenade(class<Actor> itemtype, float pitch, float maxspeed,
						  optional eval float spawnheight, optional float precision,
						  optional EntityEx aimtarget, optional evalnot bool useammo);
	action native A_MartyrDetonate(int damage, int distance, class<Actor> effecttype,
							int effectamount, float effectspread, optional float effectradialvelocity);
}

//------------------------------------------------------------------------------
class HexenWeapon extends Actor
	native
{
	//
	//	Behavior
	//
	
	
	//
	//	KRPG style Generic weapon attacks
	//

	action native WA_MeleeAttack();
	action native WA_MeleeAttackSpecialAtk(int SpecialAtkTime,
								   float SpecialAtkFactor,
								   name SpecialAtkState,
								   optional float SpecialAtkThrust,
								   optional class<Actor> SpecialAtkPuffType,
								   optional name SpecialAtkSound,
								   optional name SpecialAtkHitSound,
								   optional name SpecialAtkExtraSound);
	action native WA_MissileAttack();
	
	//
	//	Special attacks
	//
	
	action native WA_CStaffCheck();
	action native WA_CStaffAttack();
	action native WA_CFlameAttack();
	action native WA_FHammerAttack();
	action native WA_FHammerThrow();
        action native WA_CEveStarProjectile();
	action native WA_FSwordAttack();
	action native WA_FireConePL1();
	action native WA_MLightningAttack();
	action native A_PoisonBreathFire(bool use_mana, int Children);
        action native A_GoldenRain();
}

//------------------------------------------------------------------------------
class KRPGPawn extends Actor
	native
{
	
}

//------------------------------------------------------------------------------
class IntelligentActor extends Actor
	native
{
	action native A_KRPGPain();

	action native A_LookAI();
	action native A_ChaseAI();
	
	// fixme? move to krpgactor?
	action native A_AttackLeap(float ForceXY, float ForceZ);
}

//------------------------------------------------------------------------------
class KRPGPatrolPointBase extends Actor
	native
{
}

#include "actors/krpg/animals.txt"
#include "actors/krpg/bishop.txt"
#include "actors/krpg/centaur.txt"
#include "actors/krpg/classboss.txt"
#include "actors/krpg/clericweapons.txt"
#include "actors/krpg/demons.txt"
#include "actors/krpg/dragon.txt"
#include "actors/krpg/ettin.txt"
#include "actors/krpg/fighterweapons.txt"
#include "actors/krpg/firedemon.txt"
#include "actors/krpg/gold.txt"
#include "actors/krpg/guardians.txt"
#include "actors/krpg/heresiarch.txt"
#include "actors/krpg/iceguy.txt"
#include "actors/krpg/korax.txt"
#include "actors/krpg/krpgdecorations.txt"
#include "actors/krpg/mageweapons.txt"
#include "actors/krpg/mana.txt"
#include "actors/krpg/navigation.txt"
#include "actors/krpg/npcs.txt"
#include "actors/krpg/npcmap07.txt"
#include "actors/krpg/npcmap08.txt"
#include "actors/krpg/npcmap09.txt"
#include "actors/krpg/npcmap11.txt"
#include "actors/krpg/npcmap12.txt"
#include "actors/krpg/npcmap13.txt"
#include "actors/krpg/npcmap14.txt"
#include "actors/krpg/npcmap15.txt"
#include "actors/krpg/npcmap16.txt"
#include "actors/krpg/npcmap17.txt"
#include "actors/krpg/npcmap18.txt"
#include "actors/krpg/npcmap19.txt"
#include "actors/krpg/npcmap20.txt"
#include "actors/krpg/npcmap21.txt"
#include "actors/krpg/npcmap22.txt"
#include "actors/krpg/npcmap23.txt"
#include "actors/krpg/npcmap24.txt"
#include "actors/krpg/npcmap25.txt"
#include "actors/krpg/npcmap26.txt"
#include "actors/krpg/npcmap27.txt"
#include "actors/krpg/npcmap28.txt"
#include "actors/krpg/npcmap29.txt"
#include "actors/krpg/npcmap30.txt"
#include "actors/krpg/npcmap31.txt"
#include "actors/krpg/npcmap32.txt"
#include "actors/krpg/npcmap33.txt"
#include "actors/krpg/npcmap34.txt"
#include "actors/krpg/npcmap35.txt"
#include "actors/krpg/npcmap36.txt"
#include "actors/krpg/npcmap37.txt"
#include "actors/krpg/npcmap38.txt"
#include "actors/krpg/npcmap39.txt"
#include "actors/krpg/npcmap40.txt"
#include "actors/krpg/npcmap41.txt"
#include "actors/krpg/npcmap42.txt"
#include "actors/krpg/npcmap43.txt"
#include "actors/krpg/npcmap44.txt"
#include "actors/krpg/npcmap45.txt"
#include "actors/krpg/npcmap46.txt"
#include "actors/krpg/npcmap47.txt"
#include "actors/krpg/npcmap51.txt"
#include "actors/krpg/npcmap70.txt"
#include "actors/krpg/players.txt"
#include "actors/krpg/serpent.txt"
#include "actors/krpg/shrinkprojectiles.txt"
#include "actors/krpg/townfolk.txt"
#include "actors/krpg/wraith.txt"


/*
//------------------------------------------------------------------------------
actor KRPGArtiTorch : ArtiTorch replaces ArtiTorch
{
//	Powerup.Type DLTorch
//	Powerup.Type PowerDLTorch
}
*/
//------------------------------------------------------------------------------
actor KRPGPorkFX : PorkFX replaces PorkFX
{
	MorphProjectile.MonsterClass "KRPGPig"
	MorphProjectile.PlayerClass "KRPGPigPlayer"
}

//------------------------------------------------------------------------------
actor KRPGPig : Pig replaces Pig
{
	+Living
}
