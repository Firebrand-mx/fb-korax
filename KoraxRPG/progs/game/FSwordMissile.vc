//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class FSwordMissile : Projectile;

//==========================================================================
//
//  DoSpecialDamage
//
//==========================================================================

int DoSpecialDamage(EntityEx victim, EntityEx source, int damage)
{
	if (victim.bIsPlayer)
	{
		damage -= damage >> 2;
	}
	return damage;
}

//==========================================================================
//
//	GetExplodeParms
//
//==========================================================================

void GetExplodeParms(out int damage, out float distance, out byte damageSelf)
{
	// Fighter Runesword
	damage = 64;
	damageSelf = false;
}

//==========================================================================
//
//  A_FSwordFlames
//
//==========================================================================

final void A_FSwordFlames()
{
	int i;

	for (i = 1 + (P_Random() & 3); i; i--)
	{
		Spawn(FSwordFlame, Origin + vector((Random() - 0.5) * 16.0,
			(Random() - 0.5) * 16.0, (Random() - 0.5) * 8.0));
	}
}

states
{
Spawn:
	FSFX ABC 3 Bright
	Loop
Death:
	FSFX D 4 Bright
	FSFX E 3 Bright A_FSwordFlames
	FSFX F 4 Bright A_Explode
	FSFX G 3 Bright
	FSFX H 4 Bright
	FSFX I 3 Bright
	FSFX J 4 Bright
	FSFX KLM 3 Bright
	Stop
}

defaultproperties
{
	Radius = 16.0;
	Height = 8.0;
	Speed = 1050.0;
	MissileDamage = 8;
	RenderStyle = STYLE_Add;
	bExtremeDeath = true;
	DeathSound = 'FighterSwordExplode';
}
