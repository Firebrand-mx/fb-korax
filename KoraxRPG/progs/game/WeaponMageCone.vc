//**************************************************************************
//**
//**	    ##   ##   ####   ######     ##    ##     ##
//**	    ##  ##   ##  ##  ##   ##  ##  ##   ### ###
//**	    ## ##   ##    ## ##   ## ##    ##   #####
//**	    ######  ##    ## #####   ########   #####
//**	    ## ###   ##  ##  ## ###  ##    ##  ### ###
//**	    ##   ##   ####   ##  ### ##    ## ##     ##
//**
//**				   ######  #####   ######
//**	               ##   ## ##  ## ##    ##
//**	     		   ##   ## ##  ## ##   
//**	               #####   #####  ##  ####
//**	     		   ## ###  ##     ###   ##
//**	     		   ##  ### ##      ######
//**
//**    $Id: template.vc 1638 2008-08-28 19:10:17Z firebrand_kh $
//**
//**    Copyright (C) 2004-2008 Korax Heritage Team
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class WeaponMageCone : KRPGWeapon;

//==========================================================================
//
//  A_KRPGFireConePL1
//
//==========================================================================

final void A_KRPGFireConePL1() self(Actor)
{
	TAVec			ang;
	int				damage;
	int				i;
	FrostMissile	mo;
	int				conedone = false;
	TVec			Dir;
	EntityEx		AimTarget;

	if (!bIsPlayer)
	{
		return;
	}
	Weapon Wpn = KRPGPlayerBase(Player).ReadyWeapon;

	PlaySound('MageShardsFire', CHAN_WEAPON);

	damage = 90 + (P_Random() & 15) * (KRPGPlayerBase(Player).wisdom / 10);
	for (i = 0; i < 16; i++)
	{
		ang = Angles;
		ang.yaw = AngleMod360(ang.yaw + itof(i) * (45.0 / 16.0));
		AimTarget = AimLineAttack(Dir, ang, MELEERANGE);
		if (AimTarget)
		{
			AimTarget.Damage(self, self, damage, 'Ice');
			conedone = true;
			break;
		}
	}

	// didn't find any creatures, so fire projectiles
	if (!conedone)
	{
		mo = FrostMissile(SpawnPlayerMissile(FrostMissile));
		if (mo)
		{
			mo.bShardSpawnLeft = true;
			mo.bShardSpawnRight = true;
			mo.bShardSpawnUp = true;
			mo.bShardSpawnDown = true;
			mo.Special2 = 3;	// Set sperm count (levels of reproductivity)
			mo.Target = self;
			mo.Args[0] = 3;	// Mark Initial shard as super damage
		}
	}

	KRPGWeapon(Wpn).UseWeaponMana();
}

	states
	{
	Ready:
		CONE A 1 A_WeaponReady
		Loop
	Deselect:
		CONE A 1 A_Lower
		Loop
	Select:
		CONE A 1 A_Raise
		Loop
	Fire:
		CONE B 3
		CONE C 4
	Hold:
		CONE D 3
		CONE E 5
		CONE F 3 A_KRPGFireConePL1
		CONE G 3
		CONE A 9
		CONE A 10 A_ReFire
		Goto Ready
	}

defaultproperties
{
	Slot = 2;
	SelectionOrder = 1700;
	AmmoType1 = Mana1;
	AmmoUse1 = 3;
	PSpriteSY = 20.0;
	BotCombatDist = 256.0;
	bBotMelee = false;
	bBotProjectile = true;
	PickupMessage = "FROST SHARDS";
	HitObituary = "$ob_frost";
	Obituary = "$ob_frost";
}
