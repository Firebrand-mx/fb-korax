//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************
//
//	!!!! UNUSED !!!!
//
//**************************************************************************

class MageStaffFX : Projectile;

int WeaveXY;
int WeaveZ;

//==========================================================================
//
//	GetExplodeParms
//
//==========================================================================

void GetExplodeParms(out int damage, out float distance, out byte damageSelf)
{
	damage = 64;
	distance = 192.0;
	damageSelf = false;
}

//==========================================================================
//
//  A_MStaffWeave
//
//==========================================================================

final void A_MStaffWeave()
{
	float newX, newY;
	float angle;

	angle = AngleMod360(Angles.yaw + 90.0);
	newX = Origin.x - cos(angle) * Level.Game.FloatBobOffsets[WeaveXY] * 4.0;
	newY = Origin.y - sin(angle) * Level.Game.FloatBobOffsets[WeaveXY] * 4.0;
	WeaveXY = (WeaveXY + 6) & 63;
	newX += cos(angle) * Level.Game.FloatBobOffsets[WeaveXY] * 4.0;
	newY += sin(angle) * Level.Game.FloatBobOffsets[WeaveXY] * 4.0;
	TryMove(vector(newX, newY, Origin.z));
	Origin.z -= Level.Game.FloatBobOffsets[WeaveZ] * 2.0;
	WeaveZ = (WeaveZ + 3) & 63;
	Origin.z += Level.Game.FloatBobOffsets[WeaveZ] * 2.0;
	if (Origin.z <= FloorZ)
	{
		Origin.z = FloorZ + 1.0;
	}
}

states
{
Spawn:
	MSP1 ABCDEF 3 Bright A_MStaffWeave
	Loop
Death:
	MSP1 G 4 Bright
	MSP1 H 5 Bright A_Explode
	MSP1 I 4 Bright
	MSP1 J 5 Bright
	MSP1 K 4 Bright
	MSP1 L 5 Bright
	MSP1 M 4 Bright
	MSP1 N 5 Bright
	MSP1 OP 4 Bright
	Stop
}

defaultproperties
{
	Radius = 16.0;
	Height = 8.0;
	Speed = 700.0;
	MissileDamage = 6;
	bRip = true;
	DamageType = 'Fire';
	DeathSound = 'MageStaffExplode';
	bDynamicLight = true;
	DLightColour = RGB(255, 63, 0);
	DLightRadius = 134.0;
}
