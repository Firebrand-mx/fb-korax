//**************************************************************************
//**
//**	    ##   ##   ####   ######     ##    ##     ##
//**	    ##  ##   ##  ##  ##   ##  ##  ##   ### ###
//**	    ## ##   ##    ## ##   ## ##    ##   #####
//**	    ######  ##    ## #####   ########   #####
//**	    ## ###   ##  ##  ## ###  ##    ##  ### ###
//**	    ##   ##   ####   ##  ### ##    ## ##     ##
//**
//**				   ######  #####   ######
//**	               ##   ## ##  ## ##    ##
//**	     		   ##   ## ##  ## ##   
//**	               #####   #####  ##  ####
//**	     		   ## ###  ##     ###   ##
//**	     		   ##  ### ##      ######
//**
//**    $Id: RainPillarGold.vc 1638 2008-08-28 19:10:17Z firebrand_kh $
//**
//**    Copyright (C) 2004-2008 Korax Heritage Team
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

//
// [KRPG] copied from Heretic RainPillar with some modifications
//

class RainPillarGold : Actor;

//==========================================================================
//
//  DoSpecialDamage
//
//==========================================================================

int DoSpecialDamage(EntityEx victim, EntityEx source, int damage)
{
	if (Actor(victim).bBoss)
	{
		// Decrease damage for bosses
		damage >>= 1;
	}
	return ::DoSpecialDamage(victim, source, damage);
}

//===========================================================================
//
//  A_RainImpact
//
//===========================================================================

final void A_RainImpact()
{
	if (Origin.z > FloorZ)
	{
		SetState(FindState('AirDeath'));
	}
	else if (P_Random() < 40)
	{
		HitFloorType();
	}
}

states
{
Spawn:
	FX21 A -1 Bright
	Stop
Death:
	FX21 B 4 Bright A_RainImpact
	FX21 CDEF 4 Bright
	Stop
AirDeath:
	FX21 GHI 4 Bright
	Stop
}

defaultproperties
{
	Radius = 5.0;
	Height = 12.0;
	Speed = 420.0;
	MissileDamage = 3;
	RenderStyle = STYLE_Add;
	bMissile = true;
	bNoBlockmap = true;
	bDropOff = true;
	bNoGravity = true;
	bNoTeleport = true;
	bActivateImpact = true;
	bActivatePCross = true;
	bBloodSplatter = true;
	bDynamicLight = true;
	DLightColour = RGB(236, 164, 3);
	DLightRadius = 100.0;
}
