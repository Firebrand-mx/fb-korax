//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class Ettin : Pawn
	__mobjinfo__(10030);

//============================================================================
//
//  A_EttinAttack
//
//============================================================================

void A_EttinAttack(void)
{
	if (CheckMeleeRange())
	{
		Enemy.Damage(self, self, HITDICE(2));
	}
}

//============================================================================
//
//  A_DropMace
//
//============================================================================

void A_DropMace(void)
{
	Actor mace;

	mace = Spawn(EttinMace, Origin + vector(0.0, 0.0, Height / 2.0));
	if (mace)
	{
		mace.Velocity.x = (Random() - 0.5) * 8.0 * 35.0;
		mace.Velocity.y = (Random() - 0.5) * 8.0 * 35.0;
		mace.Velocity.z = (10.0 + Random() * 4.0) * 35.0;
		mace.Instigator = self;
	}
}

__states__
{
	S_ETTIN_LOOK1('ETTN', 0, 'monsters/ettin/base.md2', 0, 10.0 / 35.0, S_ETTIN_LOOK2) { A_Look(); }
	S_ETTIN_LOOK2('ETTN', 0, 'monsters/ettin/base.md2', 0, 10.0 / 35.0, S_ETTIN_LOOK1) { A_Look(); }
	S_ETTIN_CHASE1('ETTN', 0, 'monsters/ettin/base.md2', 1, 5.0 / 35.0, S_ETTIN_CHASE2) { A_Chase(); }
	S_ETTIN_CHASE2('ETTN', 1, 'monsters/ettin/base.md2', 2, 5.0 / 35.0, S_ETTIN_CHASE3) { A_Chase(); }
	S_ETTIN_CHASE3('ETTN', 2, 'monsters/ettin/base.md2', 3, 5.0 / 35.0, S_ETTIN_CHASE4) { A_Chase(); }
	S_ETTIN_CHASE4('ETTN', 3, 'monsters/ettin/base.md2', 4, 5.0 / 35.0, S_ETTIN_CHASE1) { A_Chase(); }
	S_ETTIN_PAIN1('ETTN', 7, 'monsters/ettin/base.md2', 5, 7.0 / 35.0, S_ETTIN_CHASE1) { A_Pain(); }
	S_ETTIN_ATK1_1('ETTN', 4, 'monsters/ettin/base.md2', 7, 6.0 / 35.0, S_ETTIN_ATK1_2) { A_FaceTarget(); }
	S_ETTIN_ATK1_2('ETTN', 5, 'monsters/ettin/base.md2', 8, 6.0 / 35.0, S_ETTIN_ATK1_3) { A_FaceTarget(); }
	S_ETTIN_ATK1_3('ETTN', 6, 'monsters/ettin/base.md2', 9, 8.0 / 35.0, S_ETTIN_CHASE1) { A_EttinAttack(); }
	S_ETTIN_DEATH1_1('ETTN', 8, 'monsters/ettin/base.md2', 10, 4.0 / 35.0, S_ETTIN_DEATH1_2) { }
	S_ETTIN_DEATH1_2('ETTN', 9, 'monsters/ettin/base.md2', 11, 4.0 / 35.0, S_ETTIN_DEATH1_3) { }
	S_ETTIN_DEATH1_3('ETTN', 10, 'monsters/ettin/base.md2', 12, 4.0 / 35.0, S_ETTIN_DEATH1_4) { A_Scream(); }
	S_ETTIN_DEATH1_4('ETTN', 11, 'monsters/ettin/base.md2', 13, 4.0 / 35.0, S_ETTIN_DEATH1_5) { A_NoBlocking(); }
	S_ETTIN_DEATH1_5('ETTN', 12, 'monsters/ettin/base.md2', 14, 4.0 / 35.0, S_ETTIN_DEATH1_6) { A_QueueCorpse(); }
	S_ETTIN_DEATH1_6('ETTN', 13, 'monsters/ettin/base.md2', 15, 4.0 / 35.0, S_ETTIN_DEATH1_7) { }
	S_ETTIN_DEATH1_7('ETTN', 14, 'monsters/ettin/base.md2', 16, 4.0 / 35.0, S_ETTIN_DEATH1_8) { }
	S_ETTIN_DEATH1_8('ETTN', 15, 'monsters/ettin/base.md2', 17, 4.0 / 35.0, S_ETTIN_DEATH1_9) { }
	S_ETTIN_DEATH1_9('ETTN', 16, 'monsters/ettin/base.md2', 18, -1.0, S_NULL) { }
	S_ETTIN_DEATH2_1('ETTB', 0, 'monsters/ettin/die.md2', 0, 4.0 / 35.0, S_ETTIN_DEATH2_2) { }
	S_ETTIN_DEATH2_2('ETTB', 1, 'monsters/ettin/die.md2', 1, 4.0 / 35.0, S_ETTIN_DEATH2_3) { A_NoBlocking(); }
	S_ETTIN_DEATH2_3('ETTB', 2, 'monsters/ettin/die.md2', 2, 4.0 / 35.0, S_ETTIN_DEATH2_4) { A_DropMace(); }
	S_ETTIN_DEATH2_4('ETTB', 3, 'monsters/ettin/die.md2', 3, 4.0 / 35.0, S_ETTIN_DEATH2_5) { A_Scream(); }
	S_ETTIN_DEATH2_5('ETTB', 4, 'monsters/ettin/die.md2', 4, 4.0 / 35.0, S_ETTIN_DEATH2_6) { A_QueueCorpse(); }
	S_ETTIN_DEATH2_6('ETTB', 5, 'monsters/ettin/die.md2', 5, 4.0 / 35.0, S_ETTIN_DEATH2_7) { }
	S_ETTIN_DEATH2_7('ETTB', 6, 'monsters/ettin/die.md2', 6, 4.0 / 35.0, S_ETTIN_DEATH2_8) { }
	S_ETTIN_DEATH2_8('ETTB', 7, 'monsters/ettin/die.md2', 7, 4.0 / 35.0, S_ETTIN_DEATH2_9) { }
	S_ETTIN_DEATH2_9('ETTB', 8, 'monsters/ettin/die.md2', 8, 4.0 / 35.0, S_ETTIN_DEATH2_0) { }
	S_ETTIN_DEATH2_0('ETTB', 9, 'monsters/ettin/die.md2', 9, 4.0 / 35.0, S_ETTIN_DEATH2_A) { }
	S_ETTIN_DEATH2_A('ETTB', 10, 'monsters/ettin/die.md2', 10, 4.0 / 35.0, S_ETTIN_DEATH2_B) { }
	S_ETTIN_DEATH2_B('ETTB', 11, 'monsters/ettin/die.md2', 11, -1.0, S_NULL) { }
	S_ETTIN_ICE1('ETTN', 17, 'monsters/ettin/ice.md2', 0, 5.0 / 35.0, S_ETTIN_ICE2) { A_FreezeDeath(); }
	S_ETTIN_ICE2('ETTN', 17, 'monsters/ettin/ice.md2', 0, 1.0 / 35.0, S_ETTIN_ICE2) { A_FreezeDeathChunks(); }
}

defaultproperties
{
	Health = 175;
	GibsHealth = -87;
	Radius = 25.0;
	Height = 68.0;
	Mass = 175.0;
	StepSpeed = 13.0;
	PainChance = 0.234375;
	bNoPassMobj = true;
	IdleState = S_ETTIN_LOOK1;
	SeeState = S_ETTIN_CHASE1;
	MeleeState = S_ETTIN_ATK1_1;
	PainState = S_ETTIN_PAIN1;
	DeathState = S_ETTIN_DEATH1_1;
	GibsDeathState = S_ETTIN_DEATH2_1;
	IceDeathState = S_ETTIN_ICE1;
	SightSound = 'EttinSight';
	ActiveSound = 'EttinActive';
	AttackSound = 'EttinAttack';
	PainSound = 'EttinPain';
	DeathSound = 'EttinDeath';
}

//**************************************************************************
//
//  $Log$
//  Revision 1.1  2005/08/02 16:13:23  firebrand_kh
//  Initial Import
//
//  Revision 1.2  2004/08/28 12:12:03  dj_jl
//  New 3D models.
//
//  Revision 1.1  2002/10/26 16:32:26  dj_jl
//  New style of defining classes.
//
//**************************************************************************
