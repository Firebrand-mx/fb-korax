//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ý
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class WeaponClericMace : Weapon;

//===========================================================================
//
//  A_CMaceAttack
//
//===========================================================================

void A_CMaceAttack()
{
	int damage;
	int i;
	TAVec angles;
	TVec vforward;

	damage = 25 + (P_Random() & 15);
	PuffType = HammerPuff;
	for (i = 0; i < 16; i++)
	{
		angles = Player.MO.Angles;
		angles.yaw = AngleMod360(angles.yaw + itof(i) * (45.0 / 16.0));
		Player.MO.AimLineAttack(&angles, 2.0 * MELEERANGE);
		if (linetarget)
		{
			AngleVector(&angles, &vforward);
			if (Player.MO.LineAttack(vforward, 2.0 * MELEERANGE, damage))
			{
				Player.MO.PlaySound('FighterHammerMiss', CHAN_WEAPON);
			}
			Player.AdjustPlayerAngle();
			return;
		}
		angles = Player.MO.Angles;
		angles.yaw = AngleMod360(angles.yaw - itof(i) * (45.0 / 16.0));
		Player.MO.AimLineAttack(&angles, 2.0 * MELEERANGE);
		if (linetarget)
		{
			AngleVector(&angles, &vforward);
			if (Player.MO.LineAttack(vforward, 2.0 * MELEERANGE, damage))
			{
				Player.MO.PlaySound('FighterHammerMiss', CHAN_WEAPON);
			}
			Player.AdjustPlayerAngle();
			return;
		}
	}
	// didn't find any creatures, so try to strike any walls
	angles = Player.MO.Angles;
	Player.MO.AimLineAttack(&angles, MELEERANGE);
	AngleVector(&angles, &vforward);
	if (Player.MO.LineAttack(vforward, MELEERANGE, damage))
	{
		Player.MO.PlaySound('FighterHammerMiss', CHAN_WEAPON);
	}
}

__states__
{
	S_CMACEREADY('CMCE', 0, 'weapons/v_mace.md2', 0, 1.0 / 35.0, S_CMACEREADY) { A_WeaponReady(); }
	S_CMACEDOWN('CMCE', 0, 'weapons/v_mace.md2', 1, 1.0 / 35.0, S_CMACEDOWN) { A_Lower(); }
	S_CMACEUP('CMCE', 0, 'weapons/v_mace.md2', 2, 1.0 / 35.0, S_CMACEUP) { A_Raise(); }
	S_CMACEATK_1('CMCE', 1, 'weapons/v_mace.md2', 3, 2.0 / 35.0, S_CMACEATK_2) { SX = 60.0; SY = 20.0; }
	S_CMACEATK_2('CMCE', 1, 'weapons/v_mace.md2', 4, 1.0 / 35.0, S_CMACEATK_3) { SX = 30.0; SY = 33.0; }
	S_CMACEATK_3('CMCE', 1, 'weapons/v_mace.md2', 5, 2.0 / 35.0, S_CMACEATK_4) { SX = 8.0; SY = 45.0; }
	S_CMACEATK_4('CMCE', 2, 'weapons/v_mace.md2', 6, 1.0 / 35.0, S_CMACEATK_5) { SX = 8.0; SY = 45.0; }
	S_CMACEATK_5('CMCE', 3, 'weapons/v_mace.md2', 7, 1.0 / 35.0, S_CMACEATK_6) { SX = 8.0; SY = 45.0; }
	S_CMACEATK_6('CMCE', 4, 'weapons/v_mace.md2', 8, 1.0 / 35.0, S_CMACEATK_7) { SX = 8.0; SY = 45.0; }
	S_CMACEATK_7('CMCE', 4, 'weapons/v_mace.md2', 9, 1.0 / 35.0, S_CMACEATK_8) { SX = -11.0; SY = 58.0; A_CMaceAttack(); }
	S_CMACEATK_8('CMCE', 5, 'weapons/v_mace.md2', 10, 1.0 / 35.0, S_CMACEATK_9) { SX = 8.0; SY = 45.0; }
	S_CMACEATK_9('CMCE', 5, 'weapons/v_mace.md2', 11, 2.0 / 35.0, S_CMACEATK_10) { SX = -8.0; SY = 74.0; }
	S_CMACEATK_10('CMCE', 5, 'weapons/v_mace.md2', 12, 1.0 / 35.0, S_CMACEATK_11) { SX = -20.0; SY = 96.0; }
	S_CMACEATK_11('CMCE', 5, 'weapons/v_mace.md2', 13, 8.0 / 35.0, S_CMACEATK_12) { SX = -33.0; SY = 160.0; }
	S_CMACEATK_12('CMCE', 0, 'weapons/v_mace.md2', 14, 2.0 / 35.0, S_CMACEATK_13) { SX = 8.0; SY = 75.0; A_ReFire(); }
	S_CMACEATK_13('CMCE', 0, 'weapons/v_mace.md2', 15, 1.0 / 35.0, S_CMACEATK_14) { SX = 8.0; SY = 65.0; }
	S_CMACEATK_14('CMCE', 0, 'weapons/v_mace.md2', 16, 2.0 / 35.0, S_CMACEATK_15) { SX = 8.0; SY = 60.0; }
	S_CMACEATK_15('CMCE', 0, 'weapons/v_mace.md2', 17, 1.0 / 35.0, S_CMACEATK_16) { SX = 8.0; SY = 55.0; }
	S_CMACEATK_16('CMCE', 0, 'weapons/v_mace.md2', 18, 2.0 / 35.0, S_CMACEATK_17) { SX = 8.0; SY = 50.0; }
	S_CMACEATK_17('CMCE', 0, 'weapons/v_mace.md2', 19, 1.0 / 35.0, S_CMACEREADY) { SX = 8.0; SY = 45.0; }
}

defaultproperties
{
	Mana = MANA_NONE;
	UpState = S_CMACEUP;
	DownState = S_CMACEDOWN;
	ReadyState = S_CMACEREADY;
	AttackState = S_CMACEATK_1;
	HoldAttackState = S_CMACEATK_1;
	PSpriteSY = -8.0;
}

//**************************************************************************
//
//  $Log$
//  Revision 1.3  2006/02/06 19:43:04  firebrand_kh
//  Added latest Vavoom changes
//
//  Revision 1.6  2005/12/11 21:31:40  dj_jl
//  Made path traversal callbacks class members.
//
//  Revision 1.5  2005/08/13 15:38:49  dj_jl
//  Models added.
//
//  Revision 1.4  2004/08/22 19:23:26  dj_jl
//  Moved many functions to player class.
//
//  Revision 1.3  2003/11/12 16:50:47  dj_jl
//  Changed player structure into a class
//
//  Revision 1.2  2003/03/08 12:42:31  dj_jl
//  Removed old macro.
//
//  Revision 1.1  2002/10/26 16:32:27  dj_jl
//  New style of defining classes.
//
//**************************************************************************
