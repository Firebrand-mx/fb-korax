//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id: Demon1.vc 2974 2008-01-03 08:36:51Z dj_jl $
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class Demon1 : Pawn
	__mobjinfo__(31)
	__scriptid__(3);

class<Actor> FireBallType;

//============================================================================
//
//  A_DemonAttack1 (melee)
//
//============================================================================

final void A_DemonAttack1()
{
	if (CheckMeleeRange())
	{
		Target.Damage(self, self, HITDICE(2));
	}
}

//============================================================================
//
//  A_DemonAttack2 (missile)
//
//============================================================================

final void A_DemonAttack2()
{
	EntityEx M;

	M = SpawnMissile(Target, FireBallType);
	if (M)
	{
		M.Origin.z += 30.0;
		PlaySound('DemonMissileFire', CHAN_WEAPON);
	}
}

//============================================================================
//
//  A_DemonDeath
//
//============================================================================

final void A_DemonDeath()
{
	Actor A;
	float angle;

	A = Spawn(Demon1Chunk1, Origin + vector(0.0, 0.0, 45.0));
	if (A)
	{
		angle = AngleMod360(Angles.yaw + 90.0);
		A.Velocity.x = (Random() * 4.0 + 1.0) * cos(angle) * 35.0;
		A.Velocity.y = (Random() * 4.0 + 1.0) * sin(angle) * 35.0;
		A.Velocity.z = 8.0 * 35.0;
		A.Target = self;
		A.Translation = Translation;
	}
	A = Spawn(Demon1Chunk2, Origin + vector(0.0, 0.0, 45.0));
	if (A)
	{
		angle = AngleMod360(Angles.yaw - 90.0);
		A.Velocity.x = (Random() * 4.0 + 1.0) * cos(angle) * 35.0;
		A.Velocity.y = (Random() * 4.0 + 1.0) * sin(angle) * 35.0;
		A.Velocity.z = 8.0 * 35.0;
		A.Target = self;
		A.Translation = Translation;
	}
	A = Spawn(Demon1Chunk3, Origin + vector(0.0, 0.0, 45.0));
	if (A)
	{
		angle = AngleMod360(Angles.yaw - 90.0);
		A.Velocity.x = (Random() * 4.0 + 1.0) * cos(angle) * 35.0;
		A.Velocity.y = (Random() * 4.0 + 1.0) * sin(angle) * 35.0;
		A.Velocity.z = 8.0 * 35.0;
		A.Target = self;
		A.Translation = Translation;
	}
	A = Spawn(Demon1Chunk4, Origin + vector(0.0, 0.0, 45.0));
	if (A)
	{
		angle = AngleMod360(Angles.yaw - 90.0);
		A.Velocity.x = (Random() * 4.0 + 1.0) * cos(angle) * 35.0;
		A.Velocity.y = (Random() * 4.0 + 1.0) * sin(angle) * 35.0;
		A.Velocity.z = 8.0 * 35.0;
		A.Target = self;
		A.Translation = Translation;
	}
	A = Spawn(Demon1Chunk5, Origin + vector(0.0, 0.0, 45.0));
	if (A)
	{
		angle = AngleMod360(Angles.yaw - 90.0);
		A.Velocity.x = (Random() * 4.0 + 1.0) * cos(angle) * 35.0;
		A.Velocity.y = (Random() * 4.0 + 1.0) * sin(angle) * 35.0;
		A.Velocity.z = 8.0 * 35.0;
		A.Target = self;
		A.Translation = Translation;
	}
}

states
{
Spawn:
	DEMN AA 10 A_LookAI
	Loop
See:
	DEMN ABCD 4 A_ChaseAI
	Loop
Melee:
	DEMN E 6 A_FaceTarget
	DEMN F 8 A_FaceTarget
	DEMN G 6 A_DemonAttack1
	Goto See
Missile:
	DEMN E 5 A_FaceTarget
	DEMN F 6 A_FaceTarget
	DEMN G 5 A_DemonAttack2
	Goto See
Pain:
	DEMN E 4
	DEMN E 4 A_Pain
	Goto See
Death:
	DEMN HI 6
	DEMN J 6 A_Scream
	DEMN K 6 A_NoBlocking
	DEMN L 6 A_QueueCorpse
	DEMN MNO 6
	DEMN P -1
	Stop
XDeath:
	DEMN H 6
	DEMN I 6 A_DemonDeath
	DEMN J 6 A_Scream
	DEMN K 6 A_NoBlocking
	DEMN L 6 A_QueueCorpse
	DEMN MNO 6
	DEMN P -1
	Stop
Ice:
	DEMN Q 5 A_FreezeDeath
	DEMN Q 1 A_FreezeDeathChunks
	Wait
}

defaultproperties
{
	Health = 250;
	GibsHealth = -125;
	Radius = 32.0;
	Height = 64.0;
	Mass = 220.0;
	Speed = 13.0 * 35.0;
	PainChance = 0.1953125;
	bActivatePushWall = false;
	SightSound = 'DemonSight';
	ActiveSound = 'DemonActive';
	AttackSound = 'DemonAttack';
	PainSound = 'DemonPain';
	DeathSound = 'DemonDeath';
	FireBallType = Demon1FX1;

	bLiving = true;
}
