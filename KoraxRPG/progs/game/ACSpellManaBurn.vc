//**************************************************************************
//**
//**	    ##   ##   ####   ######     ##    ##     ##
//**	    ##  ##   ##  ##  ##   ##  ##  ##   ### ###
//**	    ## ##   ##    ## ##   ## ##    ##   #####
//**	    ######  ##    ## #####   ########   #####
//**	    ## ###   ##  ##  ## ###  ##    ##  ### ###
//**	    ##   ##   ####   ##  ### ##    ## ##     ##
//**
//**				   ######  #####   ######
//**	               ##   ## ##  ## ##    ##
//**	     		   ##   ## ##  ## ##   
//**	               #####   #####  ##  ####
//**	     		   ## ###  ##     ###   ##
//**	     		   ##  ### ##      ######
//**
//**    $Id$
//**
//**    Copyright (C) 2004-2008 Korax Heritage Team
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class ACSpellManaBurn : ACDamageDealer;


//==========================================================================
//
//	Notify
//
//==========================================================================

void Notify(int notification, EntityEx E, int param)
{
	switch (notification)
	{
	case ActorCondition::notify_ManaUsed:
		bDoDamage = true;
		AccumulatedDamage += param;
		break;
	default:
		::Notify(notification, E, param);
	}
}



defaultproperties
{
	CastMessage = "mana burn";

	bIsNegative = true;

	bConditional = true;
	DamageType = 'Fire';

	CShiftOperation = CSHIFT_OP_SET;
	CShift = RGBA(255, 0, 96, 80);
}
