//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id: BishopFX.vc 2657 2007-08-18 09:15:59Z dj_jl $
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class BishopFX : Projectile;

int WeaveXY;
int WeaveZ;

//==========================================================================
//
//  DoSpecialDamage
//
//==========================================================================

int DoSpecialDamage(EntityEx victim, EntityEx source, int damage)
{
	// Bishops are just too nasty
	return damage >> 1;
}

//==========================================================================
//
//	A_BishopMissileWeave
//
//==========================================================================

final void A_BishopMissileWeave()
{
	float newX, newY;
	float angle;

	angle = AngleMod360(Angles.yaw + 90.0);
	newX = Origin.x - cos(angle) * Level.Game.FloatBobOffsets[WeaveXY] * 2.0;
	newY = Origin.y - sin(angle) * Level.Game.FloatBobOffsets[WeaveXY] * 2.0;
	WeaveXY = (WeaveXY + 2) & 63;
	newX += cos(angle) * Level.Game.FloatBobOffsets[WeaveXY] * 2.0;
	newY += sin(angle) * Level.Game.FloatBobOffsets[WeaveXY] * 2.0;
	TryMove(vector(newX, newY, Origin.z));
	Origin.z -= Level.Game.FloatBobOffsets[WeaveZ];
	WeaveZ = (WeaveZ + 2) & 63;
	Origin.z += Level.Game.FloatBobOffsets[WeaveZ];
}

//==========================================================================
//
//	A_BishopMissileSeek
//
//==========================================================================

final void A_BishopMissileSeek()
{
	SeekerMissile(2.0, 3.0);
}

states
{
Spawn:
	BPFX ABAB 1 Bright A_BishopMissileWeave
	BPFX B 0 Bright A_BishopMissileSeek
	Loop
Death:
	BPFX CDEF 4 Bright
	BPFX GH 3 Bright
	Stop
}

defaultproperties
{
	Radius = 10.0;
	Height = 6.0;
	Speed = 350.0;
	MissileDamage = 1;
	bSeekerMissile = true;
	bActivateImpact = false;
	bActivatePCross = false;
	DeathSound = 'BishopMissileExplode';
	DLightColour = RGB(8, 175, 8);
	DLightRadius = 200.0;
	WeaveXY = 0;
	WeaveZ = 16;
}
