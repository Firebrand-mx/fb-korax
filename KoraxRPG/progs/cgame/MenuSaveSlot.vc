//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id: MenuSaveSlot.vc 2764 2007-11-09 22:45:46Z dj_jl $
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class MenuSaveSlot : MenuChoiceSlot;

const int SLOTTEXTLEN 		= 24;

int		Status;
bool	bEnteringText;
int		SlotNum;
string	Text;
string	EnterText;

void OnCreate()
{
	::OnCreate();
	InitSlot();
}

void OnDraw()
{
	if (bEnteringText && IsFocus())
	{
		DrawSlot(0, EnterText, true);
	}
	else
	{
		DrawSlot(0, Text, false);
	}
}

void ActivateSlot()
{
}

bool OnKeyDown(int key)
{
	int Len;
	
	if (bEnteringText)
	{
		// Save Game string input
		switch (key)
		{
		case K_ESCAPE:
		case K_MOUSE2:
			bEnteringText = false;
			break;

		case K_ENTER:
		case K_PADENTER:
		case K_MOUSE1:
			bEnteringText = false;
			if (strlen(EnterText))
			{
				Text = EnterText;
				CmdBuf_AddText("Save %d \"%s\"\n", SlotNum, Text);
				GetClGame().ForceMenuOff();
			}
			break;

    	case K_BACKSPACE:
		    if (strlen(EnterText))
			{
				EnterText = substr(EnterText, 0, strlen(EnterText) - 1);
			}
			break;
			
		default:
		    if (key >= 32 && key < 128)
			{
		  		Len = strlen(EnterText);
	    		if (Len < SLOTTEXTLEN - 1)
		    	{
					EnterText = strcat(EnterText, TranslateKey(key));
    			}
			}
			break;
		}
		return true;
	}

	if (key == K_ENTER || key == K_PADENTER ||
		key == K_MOUSE1 || key == K_JOY1)
	{
		ActivateSlot();
		return true;
	}
	return false;
}

defaultproperties
{
}
