//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class MenuScreenMouseOptions : MenuScreen;

//==========================================================================
//
//	CreateChoices
//
//==========================================================================

void CreateChoices()
{
	MenuChoiceSlider	Slider;
	MenuChoiceEnum		Enum;
	int					currentY;

	currentY = ChoicesStartY;

	Slider = MenuChoiceSlider(NewChild(MenuChoiceSlider));
	Slider.SetOrigin(ChoicesStartX, currentY);
	Slider.Text = "Mouse X sensitivity";
	Slider.ValueDelta = 0.25;
	Slider.MaxValue = 10.0;
	Slider.SetInitialValue(GetCvarF('mouse_x_sensitivity'));
	Slider.ValueChanging = ChangeMouseXSens;
	currentY += Slider.Height;

	Slider = MenuChoiceSlider(NewChild(MenuChoiceSlider));
	Slider.SetOrigin(ChoicesStartX, currentY);
	Slider.Text = "Mouse Y sensitivity";
	Slider.ValueDelta = 0.25;
	Slider.MaxValue = 10.0;
	Slider.SetInitialValue(GetCvarF('mouse_y_sensitivity'));
	Slider.ValueChanging = ChangeMouseYSens;
	currentY += Slider.Height;

	Enum = MenuChoiceEnum(NewChild(MenuChoice_OnOff));
	Enum.SetOrigin(ChoicesStartX, currentY);
	Enum.Text = "Mouse look";
	Enum.SetInitialValue(GetCvar('mouse_look'));
	Enum.ValueChanging = ChangeMouseLook;
	currentY += Enum.Height;

	Enum = MenuChoiceEnum(NewChild(MenuChoice_OnOff));
	Enum.SetOrigin(ChoicesStartX, currentY);
	Enum.Text = "Invert mouse";
	Enum.SetInitialValue(GetCvar('invert_mouse'));
	Enum.ValueChanging = ChangeInvertMouse;
	currentY += Enum.Height;

	Enum = MenuChoiceEnum(NewChild(MenuChoice_OnOff));
	Enum.SetOrigin(ChoicesStartX, currentY);
	Enum.Text = "Look spring";
	Enum.SetInitialValue(GetCvar('lookspring'));
	Enum.ValueChanging = ChangeLookSpring;
	currentY += Enum.Height;

	Enum = MenuChoiceEnum(NewChild(MenuChoice_OnOff));
	Enum.SetOrigin(ChoicesStartX, currentY);
	Enum.Text = "Look strafe";
	Enum.SetInitialValue(GetCvar('lookstrafe'));
	Enum.ValueChanging = ChangeLookStrafe;
}

//==========================================================================
//
//	ChangeMouseXSens
//
//==========================================================================

bool ChangeMouseXSens(Object Sender, float newValue)
{
	SetCvarF('mouse_x_sensitivity', newValue);
	return true;
}

//==========================================================================
//
//	ChangeMouseYSens
//
//==========================================================================

bool ChangeMouseYSens(Object Sender, float newValue)
{
	SetCvarF('mouse_y_sensitivity', newValue);
	return true;
}

//==========================================================================
//
//	ChangeMouseLook
//
//==========================================================================

bool ChangeMouseLook(Object Sender, int newValue)
{
	SetCvar('mouse_look', newValue);
	return true;
}

//==========================================================================
//
//	ChangeInvertMouse
//
//==========================================================================

bool ChangeInvertMouse(Object Sender, int newValue)
{
	SetCvar('invert_mouse', newValue);
	return true;
}

//==========================================================================
//
//	ChangeLookSpring
//
//==========================================================================

bool ChangeLookSpring(Object Sender, int newValue)
{
	SetCvar('lookspring', newValue);
	return true;
}

//==========================================================================
//
//	ChangeLookStrafe
//
//==========================================================================

bool ChangeLookStrafe(Object Sender, int newValue)
{
	SetCvar('lookstrafe', newValue);
	return true;
}

defaultproperties
{
	ChoicesStartX = 160;
	ChoicesStartY = 32;
	SelectorType = MenuSelector_SmallRight;
	Title = "MOUSE OPTIONS";
}
