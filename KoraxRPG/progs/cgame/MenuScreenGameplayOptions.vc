//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2006 Jānis Legzdiņš
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class MenuScreenGameplayOptions : MenuScreen;

//==========================================================================
//
//	CreateChoices
//
//==========================================================================

void CreateChoices()
{
	MenuChoiceEnum		Enum;
	MenuChoiceSlider	Slider;
	int					currentY;

	currentY = ChoicesStartY;

	Enum = MenuChoiceEnum(NewChild(MenuChoiceEnum));
	Enum.SetOrigin(ChoicesStartX, currentY);
	Enum.Text = "Message Colour";
	Enum.AddItem("Brick");
	Enum.AddItem("Tan");
	Enum.AddItem("Gray");
	Enum.AddItem("Green");
	Enum.AddItem("Brown");
	Enum.AddItem("Gold");
	Enum.AddItem("Red");
	Enum.AddItem("Blue");
	Enum.AddItem("Orange");
	Enum.AddItem("White");
	Enum.AddItem("Yellow");
	Enum.AddItem("Normal");
	Enum.AddItem("Black");
	Enum.AddItem("Light Blue");
	Enum.AddItem("Cream");
	Enum.AddItem("Olive");
	Enum.AddItem("Dark Green");
	Enum.AddItem("Dark Red");
	Enum.AddItem("Dark Brown");
	Enum.AddItem("Purple");
	Enum.AddItem("Dark Gray");
	Enum.SetInitialValue(GetCvar('font_colour'));
	Enum.ValueChanging = ChangeFontColour;
	currentY += Enum.Height;

	Enum = MenuChoiceEnum(NewChild(MenuChoiceEnum));
	Enum.SetOrigin(ChoicesStartX, currentY);
	Enum.Text = "Centre Message Colour";
	Enum.AddItem("Brick");
	Enum.AddItem("Tan");
	Enum.AddItem("Gray");
	Enum.AddItem("Green");
	Enum.AddItem("Brown");
	Enum.AddItem("Gold");
	Enum.AddItem("Red");
	Enum.AddItem("Blue");
	Enum.AddItem("Orange");
	Enum.AddItem("White");
	Enum.AddItem("Yellow");
	Enum.AddItem("Normal");
	Enum.AddItem("Black");
	Enum.AddItem("Light Blue");
	Enum.AddItem("Cream");
	Enum.AddItem("Olive");
	Enum.AddItem("Dark Green");
	Enum.AddItem("Dark Red");
	Enum.AddItem("Dark Brown");
	Enum.AddItem("Purple");
	Enum.AddItem("Dark Gray");
	Enum.SetInitialValue(GetCvar('font_colour2'));
	Enum.ValueChanging = ChangeFontColour2;
	currentY += Enum.Height;

	Enum = MenuChoiceEnum(NewChild(MenuChoice_OnOff));
	Enum.SetOrigin(ChoicesStartX, currentY);
	Enum.Text = "Monsters Backing Off";
	Enum.SetInitialValue(GetCvar('monster_backing'));
	Enum.ValueChanging = ChangeMonstersBacking;
	currentY += Enum.Height;

	Enum = MenuChoiceEnum(NewChild(MenuChoice_OnOff));
	Enum.SetOrigin(ChoicesStartX, currentY);
	Enum.Text = "Damage Thrust";
	Enum.SetInitialValue(GetCvar('damage_thrust'));
	Enum.ValueChanging = ChangeDamageThrust;
	currentY += Enum.Height;

	Enum = MenuChoiceEnum(NewChild(MenuChoice_OnOff));
	Enum.SetOrigin(ChoicesStartX, currentY);
	Enum.Text = "Optional Fuzzy Effect";
	Enum.SetInitialValue(GetCvar('r_drawfuzz'));
	Enum.ValueChanging = ChangeFuzz;
	currentY += Enum.Height;

	Slider = MenuChoiceSlider(NewChild(MenuChoiceSlider));
	Slider.SetOrigin(ChoicesStartX, currentY);
	Slider.Text = "Optional Translucency";
	Slider.ValueDelta = 0.05;
	Slider.SetInitialValue(GetCvarF('transsouls'));
	Slider.ValueChanging = ChangeTrans;
	currentY += Slider.Height;	
}

//==========================================================================
//
//	ChangeFontColour
//
//==========================================================================

bool ChangeFontColour(Object Sender, int newValue)
{
	SetCvar('font_colour', newValue);
	return true;
}

//==========================================================================
//
//	ChangeFontColour2
//
//==========================================================================

bool ChangeFontColour2(Object Sender, int newValue)
{
	SetCvar('font_colour2', newValue);
	return true;
}

//==========================================================================
//
//	ChangeMonstersBacking
//
//==========================================================================

bool ChangeMonstersBacking(Object Sender, int newValue)
{
	SetCvar('monster_backing', newValue);
	return true;
}

//==========================================================================
//
//	ChangeDamageThrust
//
//==========================================================================

bool ChangeDamageThrust(Object Sender, int newValue)
{
	SetCvar('damage_thrust', newValue);
	return true;
}

//==========================================================================
//
//	ChangeFuzz
//
//==========================================================================

bool ChangeFuzz(Object Sender, int newValue)
{
	SetCvar('r_drawfuzz', newValue);
	return true;
}

//==========================================================================
//
//	ChangeTrans
//
//==========================================================================

bool ChangeTrans(Object Sender, float newValue)
{
	SetCvarF('transsouls', newValue);
	return true;
}

defaultproperties
{
	ChoicesStartX = 180;
	ChoicesStartY = 26;
	Width = 340;
	SelectorType = MenuSelector_SmallRight;
	Title = "GAMEPLAY OPTIONS";
}
