//**************************************************************************
//**
//**	    ##   ##   ####   ######     ##    ##     ##
//**	    ##  ##   ##  ##  ##   ##  ##  ##   ### ###
//**	    ## ##   ##    ## ##   ## ##    ##   #####
//**	    ######  ##    ## #####   ########   #####
//**	    ## ###   ##  ##  ## ###  ##    ##  ### ###
//**	    ##   ##   ####   ##  ### ##    ## ##     ##
//**
//**				   ######  #####   ######
//**	               ##   ## ##  ## ##    ##
//**	     		   ##   ## ##  ## ##   
//**	               #####   #####  ##  ####
//**	     		   ## ###  ##     ###   ##
//**	     		   ##  ### ##      ######
//**
//**    $Id: MapsScreen.vc 2236 2017-03-19 13:58:27Z ramborc $
//**
//**    Copyright (C) 2004-2008 Korax Heritage Team
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class MapsScreen : MenuScreen;

KRPGPlayerReplicationInfo RepInfo;

const int
	TABLE_HEAD_Y		= 68,
	TABLE_STRING_DELTA	= 14;

//==========================================================================
//
//  OnDraw
//
//==========================================================================

 void OnDraw()
{
	::OnDraw();

	SetFont('smallfont');
	SetTextAlign(hleft, vtop);
	DrawPic(0, 0, R_RegisterPic('journal'));
	ShadeRect(12, 78, 113, 289, GetCvarF('0.000000'));

	foreach ClGame.GLevel.LevelInfo.AllThinkers(KRPGPlayerReplicationInfo, RepInfo)
	{
		if (ClGame.cl.ClientNum == RepInfo.PlayerNum)
		{
		
			if (RepInfo.plclass == 0)
			{
			DrawPic(8, 80, R_RegisterPic('journf'));			
			}
			if (RepInfo.plclass == 1)
			{
			DrawPic(8, 80, R_RegisterPic('journc'));			
			}
			if (RepInfo.plclass == 2)
			{
			DrawPic(8, 80, R_RegisterPic('journm'));			
			}

		DrawText(160, TABLE_HEAD_Y + TABLE_STRING_DELTA, va("Got my hands on" ) );
		DrawText(160, TABLE_HEAD_Y + (TABLE_STRING_DELTA + 14), va("a few detailed" ) );
		DrawText(160, TABLE_HEAD_Y + (TABLE_STRING_DELTA + 28), va("maps depicting" ) );
		DrawText(160, TABLE_HEAD_Y + (TABLE_STRING_DELTA + 42), va("parts of the" ) );
		DrawText(160, TABLE_HEAD_Y + (TABLE_STRING_DELTA + 56), va("province of" ) );
		DrawText(160, TABLE_HEAD_Y + (TABLE_STRING_DELTA + 70), va("Charybdea." ) );
		DrawText(160, TABLE_HEAD_Y + (TABLE_STRING_DELTA + 98), va("They are just" ) );
		DrawText(160, TABLE_HEAD_Y + (TABLE_STRING_DELTA + 112), va("perfect for" ) );
		DrawText(160, TABLE_HEAD_Y + (TABLE_STRING_DELTA + 126), va("annotating." ) );

		DrawPic(300, 82, R_RegisterPic('jmapmain'));

		}
	}
	
}

//==========================================================================
//
//  OnDestroy
//
//==========================================================================

void OnDestroy()
{
	::OnDestroy();
	
	ClientGame(ClGame).HideQuestsScreen();
}

//==========================================================================
//
//	CreateChoices
//
//==========================================================================

void CreateChoices()
{
	MenuTextButton		Btn;
	int					currentY;
	
	currentY = ChoicesStartY;
	
	Btn = MenuTextButton(NewChild(MenuSmallTextButton));
	Btn.SetOrigin(ChoicesStartX + 20, currentY);
	Btn.Text = "northern mountains";
	Btn.Activated = MapsMountains;
	currentY += 40 + Btn.Height;

	Btn = MenuTextButton(NewChild(MenuSmallTextButton));
	Btn.SetOrigin(ChoicesStartX + 120, currentY);
	Btn.Text = "eastern desert";
	Btn.Activated = MapsDesert;
	currentY += 80 + Btn.Height;

	Btn = MenuTextButton(NewChild(MenuSmallTextButton));
	Btn.SetOrigin(ChoicesStartX - 50, currentY);
	Btn.Text ="central forest";
	Btn.Activated = MapsForest;
	currentY += 120 + Btn.Height;

	Btn = MenuTextButton(NewChild(MenuSmallTextButton));
	Btn.SetOrigin(ChoicesStartX + 120, currentY);
	Btn.Text = "southern badlands";
	Btn.Activated = MapsBadlands; 

}

//==========================================================================
//
//	MapsMountains
//
//==========================================================================

void MapsMountains(Object Sender)
{
	ClientGame(ClGame).ShowMapsMountains();
}

//==========================================================================
//
//	MapsDesert
//
//==========================================================================

void MapsDesert(Object Sender)
{
	ClientGame(ClGame).ShowMapsDesert();
}


//==========================================================================
//
//	MapsForest
//
//==========================================================================

void MapsForest(Object Sender)
{
	ClientGame(ClGame).ShowMapsForest();
}

//==========================================================================
//
//	MapsBadlands
//
//==========================================================================

void MapsBadlands(Object Sender)
{
	ClientGame(ClGame).ShowMapsBadlands();
}


defaultproperties
{
	X = 0;
	Y = 0;
	Width = 640;
	Height = 480;
	TitleX = 320;
	ChoicesStartX = 475;
	ChoicesStartY = 85;
/*	ScaleX = 2.0;
	ScaleY = 2.4;*/
	Title = "Maps";
}
