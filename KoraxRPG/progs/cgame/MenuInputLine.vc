//**************************************************************************
//**
//**    ##   ##    ##    ##   ##   ####     ####   ###     ###
//**    ##   ##  ##  ##  ##   ##  ##  ##   ##  ##  ####   ####
//**     ## ##  ##    ##  ## ##  ##    ## ##    ## ## ## ## ##
//**     ## ##  ########  ## ##  ##    ## ##    ## ##  ###  ##
//**      ###   ##    ##   ###    ##  ##   ##  ##  ##       ##
//**       #    ##    ##    #      ####     ####   ##       ##
//**
//**    $Id$
//**
//**    Copyright (C) 1999-2002 JÆnis Legzdi·ı
//**
//**    This program is free software; you can redistribute it and/or
//**  modify it under the terms of the GNU General Public License
//**  as published by the Free Software Foundation; either version 2
//**  of the License, or (at your option) any later version.
//**
//**    This program is distributed in the hope that it will be useful,
//**  but WITHOUT ANY WARRANTY; without even the implied warranty of
//**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//**  GNU General Public License for more details.
//**
//**************************************************************************

class MenuInputLine:MenuChoice;

bool bEnteringText;
string Text;
int Value[32 / 4];
int EnterText[32 / 4];

void InitWindow(void)
{
	::InitWindow();
	InitSlot();
}

void ValueChanged(void)
{
}

void DrawWindow(GC gc)
{
	T_SetFont(font_small);
	T_SetAlign(hleft, vtop);
	gc.DrawText(0, 0, Text);
	if (bEnteringText)
		DrawSlot(gc, 12, ARR2STR(EnterText), true);
	else
		DrawSlot(gc, 12, ARR2STR(Value), false);
}

bool Key(int key)
{
	int Len;
	
	if (bEnteringText)
	{
		switch (key)
		{
		case K_ESCAPE:
		case K_MOUSE2:
			bEnteringText = false;
			break;

		case K_ENTER:
		case K_PADENTER:
		case K_MOUSE1:
			bEnteringText = false;
			strcpy(ARR2STR(Value), ARR2STR(EnterText));
			ValueChanged();
			break;

    	case K_BACKSPACE:
		    if (strlen(ARR2STR(EnterText)))
			{
				strsetchar(ARR2STR(EnterText),
 					strlen(ARR2STR(EnterText)) - 1, 0);
			}
			break;
			
		default:
		    if (key >= 32 && key < 128)
			{
  				key = TranslateKey(key);
				Len = strlen(ARR2STR(EnterText));
	    		if (Len < 30)
		    	{
					strsetchar(ARR2STR(EnterText), Len++, key);
					strsetchar(ARR2STR(EnterText), Len, 0);
    			}
			}
			break;
		}
		return true;
	}

	if (key == K_ENTER || key == K_PADENTER ||
		key == K_MOUSE1 || key == K_JOY1)
	{
		// we are going to be intercepting all chars
		bEnteringText = true;
		strcpy(ARR2STR(EnterText), ARR2STR(Value));
		LocalSound('menu/choose');
		return true;
	}
	return false;
}

defaultproperties
{
	Height = 30;
}

//**************************************************************************
//
//  $Log$
//  Revision 1.3  2006/02/06 19:29:30  firebrand_kh
//  Added latest Vavoom changes
//
//  Revision 1.3  2005/11/19 15:15:06  dj_jl
//  Renamed sounds.
//
//  Revision 1.2  2003/03/08 12:13:51  dj_jl
//  Menu code cleanup.
//
//  Revision 1.1  2002/10/26 16:32:24  dj_jl
//  New style of defining classes.
//
//**************************************************************************
