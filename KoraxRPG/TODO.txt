[CW]

----------- CLASSES --------------------------------------

	CRITICAL!! - rewrite extended chase methods to use new JL's DoChase or its contents:
	/
	/   Need to implement SetGoal, Patrol and Hate features so they work
	/   seamlessly in new walking/chasing IA algorythms
	/

	Implement Properties where has sense

	Think which of the LinkedLists could be replaced by array type (even all of them?)

	Tables of class-specific constants for pawns, like exps? base behavior params - to use less memory for IAs

	implement Thrust3d as Thrust + ThrustZ combo in HexenLevelInfo


----------- GUI -----------------------------------------

	'Back'  option in each submenu - primarily to use mouse on them.
	(A graphic maybe?)

	Use RMB to do 'back' in menus

----------- GAMEPLAY ------------------------------------

	perhaps some experimental child classes, like Spike Spawner (from SpellInstance);

	"Jaw-Gate" action special (copy behavior from Unholy Heritage's map 10 revised$) - could be useful
	
	monsters:
				- Blue Ox - maulotaur (contributed by paganraven)
				- Blue (Ice) Gargoyle (shoots ice instead of fire)
				
				- Mists: chill, toxic and vampiric
				
				- Hag : need some spells for this one
				
				- Walking Dead (several types derived: Sleeping, Sitting, Thrusted (w spear), with Axe)
				- Walking Horror (WD as in Diablo - shoots fireballs/poisonballs)
				- Ghost Legioneer - similar to Reiver (flying)
				- Raised Legioneer - decaying "Fighter"
				- Raised Cleric - ?
				- Raised Mage (Lich?)
				- Doom Knight - Large ghostlike creature
				- Raised Serpent - decaying CS
				- Lich Rider - D'Sparil on Serpent decayed
				
				- Evil magi (?) - multicolored maybe (use translation?)
								(useing D'Sparil sprites?)
								
				- A Big Dragon(ess) - consisting of several entities (trainstyle)
				
				- Mago's Swamp Thing (octopus)
				- Swamp Horror (vampire with pull, push & paralyze)

----------- CONVERSATIONS -------------------------------

	That's it

----------- AI ------------------------------------------

	NoWanderDuringAttack and EvadeMelee flags for IA behavior	- >> EvadeMelee done
	Perhaps divide IA behavior into 2 structs, with Route-specific params separated
	Evade routine for IA (even in Actor maybe)			- ?


	Behavior Packages (!!) + action specials to construct and apply them
	
	
	NODES:	- make them have dynamic arrays and link everything in decided radius
			- make them not link node if there's another node at close direction
			
	Groups - think out.
	
	Paths - use them for faster route calculations
